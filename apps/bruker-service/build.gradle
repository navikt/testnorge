plugins {
    id 'java'
    id "org.sonarqube" version "5.0.0.4638"
    id 'org.springframework.boot' version "3.2.6"
    id 'io.spring.dependency-management' version "1.1.5"
    id "jacoco"
}

def test = tasks.named("test") {
    useJUnitPlatform {
        excludeTags "integration"
    }
}

def iTest = tasks.register("iTest", Test) {
    useJUnitPlatform {
        includeTags "integration"
    }
    shouldRunAfter test
}

sonarqube {
    properties {
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.language", "java"
        property "sonar.token", System.getenv("SONAR_TOKEN")
        property "sonar.organization", "navikt"
        property "sonar.project.monorepo.enabled", true
        property "sonar.projectKey", "testnav-bruker-service"
        property "sonar.projectName", "testnav-bruker-service"
        property "sonar.sourceEncoding", "UTF-8"
    }
}

bootJar {
    archiveFileName = "app.jar"
}

dependencyManagement {
    applyMavenExclusions = false
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2023.0.1'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'com.auth0:java-jwt:4.3.0'

    implementation 'no.nav.testnav.libs:security-core'
    implementation 'no.nav.testnav.libs:reactive-core'
    implementation 'no.nav.testnav.libs:reactive-security'
    implementation 'no.nav.testnav.libs:data-transfer-objects'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'

    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap' // TODO remove legacy bootstrap config
    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
    
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'
    implementation 'io.swagger.core.v3:swagger-annotations-jakarta:2.2.21'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    implementation 'org.hibernate.validator:hibernate-validator'

    implementation 'io.r2dbc:r2dbc-h2'
    implementation 'org.postgresql:r2dbc-postgresql'
    implementation 'org.flywaydb:flyway-core'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
    testImplementation 'org.assertj:assertj-core:3.26.0'
    testImplementation 'no.nav.testnav.libs:integration-test'
    testImplementation 'com.squareup.okhttp3:okhttp:4.10.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'


    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
