plugins {
    id "dolly-java-conventions"
}

sonarqube {
    properties {
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.language", "java"
        property "sonar.token", System.getenv("SONAR_TOKEN")
        property "sonar.organization", "navikt"
        property "sonar.project.monorepo.enabled", true
        property "sonar.projectKey", "oppsummeringsdokument-service"
        property "sonar.projectName", "oppsummeringsdokument-service"
        property "sonar.sourceEncoding", "UTF-8"
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = uri('https://packages.confluent.io/maven/')
    }
    maven {
        name = "GitHubPackages"
        url = uri('https://maven.pkg.github.com/navikt/maven-release')
        credentials(PasswordCredentials) {
            password System.getenv("NAV_TOKEN")
            username 'token'
        }
    }
}

dependencies {
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'javax.activation:activation:1.1.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime'

    implementation 'no.nav.testnav.libs:servlet-core'
    implementation 'no.nav.testnav.libs:security-core'
    implementation 'no.nav.testnav.libs:data-transfer-objects'
    implementation 'no.nav.testnav.libs:servlet-security'
    implementation 'no.nav.testnav.xsd:arbeidsforhold-xsd'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17.1'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'org.opensearch.client:spring-data-opensearch:1.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'

    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-clients:3.7.0'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'io.swagger.core.v3:swagger-annotations-jakarta:2.2.21'
    implementation 'org.hibernate.validator:hibernate-validator'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}
