plugins {
    id 'java'
    id "org.sonarqube" version "4.0.0.2929"
    id 'org.springframework.boot' version "3.0.2"
    id 'io.spring.dependency-management' version "1.1.0"
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectKey", "testnav-dolly-backend"
        property "sonar.projectName", "testnav-dolly-backend"
        property "sonar.organization", "navikt"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.project.monorepo.enabled", true
        property "sonar.login", System.getenv("SONAR_TOKEN")
    }
}

bootJar {
    archiveFileName = "app.jar"
    mainClass = 'no.nav.dolly.DollyBackendApplicationStarter'
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2022.0.1'
    }
}

test {
    useJUnitPlatform()
    jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED'
}

java.sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri('https://maven.pkg.github.com/navikt/maven-release')
        credentials(PasswordCredentials) {
            password System.getenv("NAV_TOKEN")
            username 'token'
        }
    }
}

dependencies {

    implementation 'no.nav.testnav.libs:servlet-core'
    implementation 'no.nav.testnav.libs:servlet-security'
    implementation 'no.nav.testnav.libs:servlet-insecure-security'
    implementation 'no.nav.testnav.libs:security-core'
    implementation 'no.nav.testnav.libs:database'
    implementation 'no.nav.testnav.libs:data-transfer-objects'

    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
    implementation 'org.springframework.cloud:spring-cloud-vault-config-databases'

    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'io.swagger.core.v3:swagger-annotations-jakarta:2.2.8'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.retry:spring-retry:2.0.0'

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.ehcache:ehcache:3.10.8'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'ma.glasnost.orika:orika-core:1.5.4'
    implementation 'org.codehaus.jettison:jettison:1.5.3'
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.bitbucket.b_c:jose4j:0.9.1'
    testImplementation 'io.projectreactor:reactor-test:3.5.3'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}