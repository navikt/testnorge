APP_NAME: dolly
APP_VERSION: ${application.version}
environment: localhost

jira:
  host: http://localhost:${wiremock.server.port:0}/jira

open:
  search:
    uri: dummy
    username: dummy
    password: dummy
    total-fields: 150

consumers:
  kodeverk-api:
    name: kodeverk-api
    namespace: team-rocket
    url: http://localhost:${wiremock.server.port:0}/kodeverk
    cluster: prod-gcp
  testnav-tps-messaging-service:
    name: tps-messaging-mock
    namespace: dolly
    url: http://localhost:${wiremock.server.port:0}/tps-messaging
    cluster: dev-fss
  testnav-krrstub-proxy:
    name: krrstub-mock
    namespace: dolly
    url: http://localhost:${wiremock.server.port:0}/krrstub
    cluster: dev-fss
  testnav-inst-proxy:
    name: inst-mock
    namespace: dolly
    url: http://localhost:${wiremock.server.port:0}/inst
    cluster: dev-gcp
  testnav-sigrunstub-proxy:
    name: sigrunstub-mock
    namespace: dolly
    url: http://localhost:${wiremock.server.port:0}/sigrunstub
    cluster: dev-fss
  testnav-aareg-proxy:
    name: aareg-mock
    namespace: dolly
    url: http://localhost:${wiremock.server.port:0}/aareg
    cluster: dev-fss
  testnav-pdl-proxy:
    name: pdl-mock
    namespace: dolly
    url: http://localhost:${wiremock.server.port:0}/pdl
    cluster: dev-fss
  testnav-arena-forvalteren-proxy:
    name: arena-forvalteren-mock
    namespace: dolly
    url: http://localhost:${wiremock.server.port:0}/arenaforvalter
    cluster: dev-fss
  testnav-organisasjon-service:
    url: https://testnav-organisasjon-service.intern.dev.nav.no
    name: testnav-organisasjon-service
    cluster: dev-gcp
    namespace: dolly
  testnav-pensjon-testdata-facade-proxy:
    url: http://localhost:${wiremock.server.port:0}/pensjon-testdata
    name: testnav-pensjon-testdata-facade-proxy
    namespace: dolly
    cluster: dev-fss
  testnav-kontoregister-person-proxy:
    name: kontoregister-person-mock
    namespace: dolly
    url: http://localhost:${wiremock.server.port:0}/kontoregister
    cluster: dev-fss

management:
  prometheus:
    metrics:
      export:
        enabled: false
  endpoint:
    metrics:
      access: none
  endpoints:
    web:
      exposure:
        include: none

spring:
  config:
    activate:
      on-profile: test
  data:
    r2dbc:
      repositories:
        enabled: true
  #  flyway:
  #    enabled: true
  #    locations: classpath:db/migration
  #    url: jdbc:tc:postgresql:15:///test
  #    user: test
  #    password: test
  #  r2dbc:
  #    url: r2dbc:tc:postgresql:///test?TC_IMAGE_TAG=15
  #    username: test
  #    password: test
  #  sql:
  #    init:
  #      mode: always
  #spring:
#    url: r2dbc:tc:postgresql:15:///dollyDB?TC_REUSABLE=true;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#    username: user
#    password: pass
#  flyway:
#    enabled: true
#    url: jdbc:tc:postgresql:15:///dollyDB?TC_REUSABLE=true;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#    user: user
#    password: pass

  main:
    web-application-type: reactive
  security:
    oauth2:
      resourceserver:
        jwt:
          enabled: false
#  autoconfigure:
#    exclude:
#      org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRestClientAutoConfiguration,
#      org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientAutoConfiguration,
#      org.springframework.boot.autoconfigure.data.r2dbc.R2dbcAutoConfiguration,
#      org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration
