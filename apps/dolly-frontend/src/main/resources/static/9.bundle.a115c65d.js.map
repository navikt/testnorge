{"version":3,"sources":["webpack:///./src/components/ui/titleValue/TitleValue.js","webpack:///./src/components/ui/form/fieldArray/ExpandableBlokk.tsx","webpack:///./src/components/ui/form/fieldArray/DollyFieldArray.js","webpack:///./src/config/kodeverk/index.ts","webpack:///./src/components/ui/subOverskrift/SubOverskrift.tsx","webpack:///./src/components/ui/form/inputs/select/MenuList.tsx","webpack:///./src/components/ui/form/inputs/select/Option.tsx","webpack:///./src/components/ui/form/inputs/select/Select.js","webpack:///./src/components/ui/form/inputs/textInput/UncontrolledFormikTextInput.tsx","webpack:///./src/components/ui/form/inputs/textInput/TextInput.tsx","webpack:///./src/components/ui/form/inputs/datepicker/Datepicker.js","webpack:///./src/components/ui/button/Button.tsx","webpack:///./src/components/bestillingsveileder/VisAttributt.js","webpack:///./src/components/ui/panel/Panel.js","webpack:///./src/components/hjelpetekst/Hjelpetekst.tsx","webpack:///./src/components/hjelpetekst/index.ts","webpack:///./src/components/ui/form/inputs/label/Label.js","webpack:///./src/utils/YupValidations.js","webpack:///./src/components/kodeverk/KodeverkConnector.js","webpack:///./src/components/kodeverk/Kodeverk.js","webpack:///./src/components/ui/button/ExpandButton.tsx","webpack:///./src/components/rating/ThumbsRating.tsx","webpack:///./src/components/ui/loading/LoadableComponent.tsx","webpack:///./src/components/ui/button/LinkButton/LinkButton.js","webpack:///./src/components/fagsystem/arena/visning/ArenaVisning.js","webpack:///./src/components/ui/loading/LoadableComponentWithRetry.tsx","webpack:///./src/components/miljoVelger/MiljoeInfo/TilgjengeligeMiljoer.js","webpack:///./src/components/inntektStub/texts.js","webpack:///./src/components/enhetstre/Node.tsx","webpack:///./src/components/enhetstre/Enhetstre.tsx","webpack:///./src/components/enhetstre/OrgTree.tsx","webpack:///./src/components/fagsystem/tpsf/form/familierelasjoner/partials/partnere/sivilstand/SivilstandOptions.js","webpack:///./src/components/dollyKjede/KjedeItem.tsx","webpack:///./src/components/dollyKjede/ArrowButton.tsx","webpack:///./src/components/dollyKjede/KjedePagination.tsx","webpack:///./src/components/dollyKjede/DollyKjede.tsx","webpack:///./src/components/bestilling/sammendrag/kriterier/BestillingKriterieMapper.js","webpack:///./src/components/bestilling/sammendrag/kriterier/OrganisasjonKriterier.tsx","webpack:///./src/components/bestilling/sammendrag/kriterier/Kriterier.js","webpack:///./src/components/miljoVelger/MiljoeInfo/MiljoeInfo.js","webpack:///./src/components/miljoVelger/MiljoVelger.js","webpack:///./src/components/ui/header/Header.js","webpack:///./src/components/fagsystem/tpsf/form/validation.js","webpack:///./src/components/ui/etikett/index.tsx","webpack:///./src/components/fagsystem/tpsf/form/familierelasjoner/partials/partnere/sivilstand/sivilstandForm.tsx","webpack:///./src/components/fagsystem/tpsf/form/familierelasjoner/partials/partnere/sivilstand/Sivilstand.js","webpack:///./src/components/ui/button/AvbrytButton/AvbrytButton.tsx","webpack:///./src/components/bestillingsveileder/stegVelger/Navigation/Navigation.js","webpack:///./src/components/bestillingsveileder/stateModifier.js","webpack:///./src/components/bestillingsveileder/BestillingsveilederHeader.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/attributtVelger/utvalg/Utvalg.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/attributtVelger/AttributtVelger.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/Attributt.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/Personinformasjon.tsx","webpack:///./src/components/ui/form/kategori/Kategori.js","webpack:///./src/components/adresseVelger/AdresseSok.tsx","webpack:///./src/service/services/AdresseService.tsx","webpack:///./src/components/adresseVelger/AdresseVelger.tsx","webpack:///./src/components/adresseVelger/MatrikkelAdresseSok.tsx","webpack:///./src/components/adresseVelger/MatrikkelAdresseVelger.tsx","webpack:///./src/components/fagsystem/tpsf/form/adresser/partials/midlertidigAdresse/Gateadresse.tsx","webpack:///./src/components/fagsystem/tpsf/form/adresser/partials/boadresse/Boadresse.js","webpack:///./src/components/fagsystem/tpsf/form/adresser/Postadresser.js","webpack:///./src/components/fagsystem/tpsf/form/adresser/partials/midlertidigAdresse/Postboksadresse.tsx","webpack:///./src/components/fagsystem/tpsf/form/adresser/partials/midlertidigAdresse/Stedsadresse.tsx","webpack:///./src/components/fagsystem/tpsf/form/adresser/partials/midlertidigAdresse/UtenlandskAdresse.tsx","webpack:///./src/components/fagsystem/tpsf/form/adresser/partials/midlertidigAdresse/GateadresseDetaljert.tsx","webpack:///./src/components/fagsystem/tpsf/form/adresser/partials/Tilleggsadresse/Tilleggsadresse.tsx","webpack:///./src/components/fagsystem/tpsf/form/adresser/MidlertidigAdresse.tsx","webpack:///./src/components/fagsystem/tpsf/form/adresser/partials/matrikkelAdresse/MatrikkelAdresse.js","webpack:///./src/components/fagsystem/tpsf/form/adresser/partials/AdresseNr.js","webpack:///./src/components/fagsystem/tpsf/form/adresser/partials/matrikkelAdresse/TilfeldigMatrikkelAdresse.tsx","webpack:///./src/components/fagsystem/tpsf/form/adresser/Adresser.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/Adresse.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/Identifikasjon.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/Familierelasjoner.js","webpack:///./src/components/fagsystem/aareg/form/initialValues.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/ArbeidInntekt.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/Institusjonsopphold.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/KontaktReservasjon.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/KontaktDoedsbo.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/Arena.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/Udi.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/Brreg.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/Dokarkiv.tsx","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/Sykdom.tsx","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/Steg1Person.tsx","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/paneler/OrganisasjonDetaljer.tsx","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/Steg1Organisasjon.tsx","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg1/Steg1.js","webpack:///./src/components/fagsystem/tpsf/form/personinformasjon/partials/diskresjonskoder/Diskresjonskoder.js","webpack:///./src/components/fagsystem/tpsf/form/personinformasjon/partials/telefonnummer/Telefonnummer.tsx","webpack:///./src/components/fagsystem/tpsf/form/personinformasjon/partials/Diverse.js","webpack:///./src/components/fagsystem/tpsf/form/personinformasjon/partials/alder/Alder.js","webpack:///./src/components/fagsystem/tpsf/form/personinformasjon/partials/vergemaal/Vergemaal.tsx","webpack:///./src/service/SelectOptionsOppslag.js","webpack:///./src/components/fagsystem/tpsf/form/familierelasjoner/partials/partnere/partnere/partnerTypes.ts","webpack:///./src/components/fagsystem/tpsf/form/personinformasjon/partials/fullmakt/Fullmakt.tsx","webpack:///./src/components/fagsystem/tpsf/form/personinformasjon/Personinformasjon.js","webpack:///./src/components/fagsystem/tpsf/form/Identhistorikk.js","webpack:///./src/components/fagsystem/tpsf/form/familierelasjoner/partials/partnere/partnere/partnerliste.ts","webpack:///./src/components/fagsystem/tpsf/form/familierelasjoner/partials/partnere/partnere/partnerForm.tsx","webpack:///./src/components/fagsystem/tpsf/form/familierelasjoner/partials/partnere/Partnere.js","webpack:///./src/components/fagsystem/tpsf/form/familierelasjoner/partials/Barn.js","webpack:///./src/components/fagsystem/tpsf/form/familierelasjoner/partials/Foreldre.tsx","webpack:///./src/components/fagsystem/tpsf/form/familierelasjoner/Familierelasjoner.js","webpack:///./src/components/fagsystem/tpsf/form/Form.js","webpack:///./src/components/fagsystem/krrstub/form/Form.tsx","webpack:///./src/components/fagsystem/sigrunstub/form/partials/enkeltinntektForm.js","webpack:///./src/components/fagsystem/sigrunstub/form/partials/inntektsaarForm.js","webpack:///./src/components/fagsystem/sigrunstub/form/Form.js","webpack:///./src/components/fagsystem/inntektstub/form/validation.js","webpack:///./src/service/services/organisasjonFasteDataService/OrganisasjonFasteDataService.ts","webpack:///./src/components/organisasjonSelect/OrganisasjonLoader.tsx","webpack:///./src/components/organisasjonSelect/OrganisasjonSelect.tsx","webpack:///./src/components/organisasjonSelect/OrganisasjonMedArbeidsforholdSelect.tsx","webpack:///./src/components/fagsystem/aareg/form/partials/orgnummerToggle.js","webpack:///./src/components/fagsystem/inntektstub/form/partials/inntektstubVirksomhetToggle.tsx","webpack:///./src/components/fagsystem/inntektstub/form/partials/inntektstubOrgnummerSelect.js","webpack:///./src/components/inntektStub/paths.js","webpack:///./src/components/inntektStub/validerInntekt/Inntekt.js","webpack:///./src/components/inntektStub/validerInntekt/index.js","webpack:///./src/components/fagsystem/inntektstub/form/partials/inntektsinformasjonLister/inntektForm.tsx","webpack:///./src/components/fagsystem/inntektstub/form/partials/inntektsinformasjonLister/fradragForm.js","webpack:///./src/components/fagsystem/inntektstub/form/partials/inntektsinformasjonLister/forskuddstrekkForm.js","webpack:///./src/components/fagsystem/inntektstub/form/partials/inntektsinformasjonLister/arbeidsforholdForm.js","webpack:///./src/components/fagsystem/inntektstub/form/partials/inntektsinformasjonLister/inntektsinformasjonLister.tsx","webpack:///./src/components/fagsystem/inntektstub/form/partials/inntektsendringForm.tsx","webpack:///./src/components/ui/form/inputs/monthpicker/Monthpicker.tsx","webpack:///./src/components/fagsystem/inntektstub/form/partials/inntektsinformasjonForm.tsx","webpack:///./src/components/fagsystem/inntektsmelding/InntektsmeldingTypes.ts","webpack:///./src/components/fagsystem/inntektstub/form/Form.tsx","webpack:///./src/components/fagsystem/inntektsmelding/form/partials/InntektsmeldingSelect.tsx","webpack:///./src/components/fagsystem/inntektsmelding/form/partials/InntektsmeldingYtelseSelect.tsx","webpack:///./src/components/fagsystem/inntektsmelding/form/Form.tsx","webpack:///./src/components/fagsystem/inntektsmelding/form/partials/omsorgspengerForm.tsx","webpack:///./src/components/fagsystem/inntektsmelding/form/partials/sykepengerForm.tsx","webpack:///./src/components/fagsystem/inntektsmelding/form/partials/pleiepengerForm.tsx","webpack:///./src/components/fagsystem/inntektsmelding/form/partials/refusjonForm.tsx","webpack:///./src/components/fagsystem/inntektsmelding/form/partials/arbeidsforholdForm.tsx","webpack:///./src/components/fagsystem/inntektsmelding/form/partials/naturalytelseForm.tsx","webpack:///./src/components/ui/brukerAlert/AlertAaregRequired.tsx","webpack:///./src/components/ui/form/inputWarning/inputWarning.tsx","webpack:///./src/components/fagsystem/aareg/form/validation.js","webpack:///./src/components/fagsystem/aareg/form/partials/timeloennetForm.js","webpack:///./src/components/fagsystem/aareg/form/partials/permisjonForm.js","webpack:///./src/components/fagsystem/aareg/form/partials/permitteringForm.tsx","webpack:///./src/components/fagsystem/aareg/form/partials/utenlandsoppholdForm.js","webpack:///./src/components/fagsystem/aareg/AaregTypes.ts","webpack:///./src/components/fagsystem/aareg/form/partials/arbeidsavtaleForm.js","webpack:///./src/components/fagsystem/aareg/form/partials/maritimtArbeidsforholdForm.tsx","webpack:///./src/components/organisasjonSelect/EgenOrganisasjonSelect.tsx","webpack:///./src/components/fagsystem/aareg/form/partials/arbeidsgiverIdent.tsx","webpack:///./src/components/fagsystem/aareg/form/partials/arbeidsforholdForm.js","webpack:///./src/components/dollyKjede/KjedeIcon.tsx","webpack:///./src/components/fagsystem/aareg/form/partials/ameldingForm.tsx","webpack:///./src/components/fagsystem/aareg/form/partials/arbeidsforholdToggle.tsx","webpack:///./src/components/fagsystem/aareg/form/Form.js","webpack:///./src/components/fagsystem/brregstub/form/partials/personrollerForm.js","webpack:///./src/components/fagsystem/brregstub/form/partials/enheterForm.js","webpack:///./src/components/fagsystem/brregstub/form/Form.js","webpack:///./src/components/fagsystem/pdlf/form/validation.js","webpack:///./src/components/fagsystem/pdlf/form/partials/utils.js","webpack:///./src/components/fagsystem/pdlf/form/partials/falskIdentitet/FalskIdentitet.js","webpack:///./src/components/fagsystem/pdlf/form/partials/utenlandsId/UtenlandsId.js","webpack:///./src/components/fagsystem/pdlf/form/partials/kontaktinformasjonForDoedsbo/Adressat.js","webpack:///./src/components/fagsystem/pdlf/form/partials/kontaktinformasjonForDoedsbo/Adresse.js","webpack:///./src/components/fagsystem/pdlf/form/partials/kontaktinformasjonForDoedsbo/KontaktinformasjonForDoedsbo.js","webpack:///./src/components/fagsystem/pdlf/form/Form.js","webpack:///./src/components/fagsystem/arena/form/partials/MedServicebehov.js","webpack:///./src/components/ui/brukerAlert/AlertInntektskomponentenRequired.tsx","webpack:///./src/components/fagsystem/arena/form/validation.js","webpack:///./src/components/fagsystem/arena/form/Form.js","webpack:///./src/components/fagsystem/inst/form/validation.js","webpack:///./src/components/fagsystem/inst/form/utils.js","webpack:///./src/components/fagsystem/inst/form/Form.js","webpack:///./src/components/fagsystem/udistub/form/validation.js","webpack:///./src/components/fagsystem/udistub/form/partials/OppholdSammeVilkaar.tsx","webpack:///./src/components/fagsystem/udistub/form/partials/IkkeOppholdSammeVilkaar.tsx","webpack:///./src/components/fagsystem/udistub/form/partials/Oppholdsstatus.js","webpack:///./src/components/fagsystem/udistub/form/partials/Arbeidsadgang.js","webpack:///./src/components/fagsystem/udistub/form/partials/Alias.js","webpack:///./src/components/fagsystem/udistub/form/partials/Annet.js","webpack:///./src/components/fagsystem/udistub/form/Form.js","webpack:///./src/components/fagsystem/pensjon/form/validation.js","webpack:///./src/components/fagsystem/pensjon/form/Form.js","webpack:///./src/components/fagsystem/dokarkiv/form/Form.tsx","webpack:///./src/components/fagsystem/sykdom/form/partials/SyntSykemelding.tsx","webpack:///./src/components/fagsystem/sykdom/form/partials/Diagnoser.tsx","webpack:///./src/components/fagsystem/sykdom/form/partials/SelectOptionsDiagnoser.tsx","webpack:///./src/components/fagsystem/sykdom/form/partials/HelsepersonellSelect.tsx","webpack:///./src/components/fagsystem/sykdom/form/partials/DetaljertSykemelding.tsx","webpack:///./src/components/fagsystem/sykdom/form/partials/Sykemelding.tsx","webpack:///./src/components/fagsystem/sykdom/form/validation.tsx","webpack:///./src/components/fagsystem/sykdom/form/Form.tsx","webpack:///./src/components/fagsystem/organisasjoner/form/paths.ts","webpack:///./src/components/fagsystem/organisasjoner/form/partials/Detaljer.tsx","webpack:///./src/components/fagsystem/organisasjoner/form/partials/Kontaktdata.tsx","webpack:///./src/components/fagsystem/organisasjoner/form/partials/Adresser.tsx","webpack:///./src/components/fagsystem/organisasjoner/form/Form.tsx","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg2/Steg2.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg3/MalForm.js","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg3/BestillingInfoboks.tsx","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg3/IdentVelger.tsx","webpack:///./src/components/bestillingsveileder/stegVelger/steg/steg3/Steg3.js","webpack:///./src/utils/DisplayFormikState.js","webpack:///./src/components/bestillingsveileder/stegVelger/StegVelger.js","webpack:///./src/components/bestillingsveileder/options/utils.ts","webpack:///./src/components/bestillingsveileder/options/malOptions.ts","webpack:///./src/components/bestillingsveileder/options/options.js","webpack:///./src/components/bestillingsveileder/Bestillingsveileder.js","webpack:///./src/components/bestillingsveileder/BestillingsveilederConnector.js"],"names":["P_TitleValue","title","value","titleType","size","children","className","css","cn","React","createElement","TitleValue","kodeverk","restProps","rest","KodeverkConnector","navn","kodeverkValues","kodeverkValue","_isFunction","label","Loading","Numbering","idx","ExpandableBlokk","getHeader","data","useState","isExpanded","setIsExpanded","headerClass","clickable","onClick","ExpandButton","expanded","numberColor","FieldArrayAddButton","hoverText","addEntryButtonText","disabled","Button","kind","toLowerCase","DeleteButton","color","style","backgroundColor","DollyFieldArrayWrapper","header","hjelpetekst","nested","hjelpetekstFor","DollyFaBlokk","handleRemove","showDeleteButton","number","DollyFaBlokkOrg","nivaa","match","length","name","getNivaaColor","DollyFaBlokkNested","DollyFieldArray","ignoreOnSingleElement","expandable","ErrorBoundary","map","curr","key","FormikDollyFieldArray","newEntry","canBeEmpty","tag","isOrganisasjon","handleNewEntry","handleRemoveEntry","arrayHelpers","values","_get","form","path","remove","addNewEntry","push","PersoninformasjonKodeverk","VergemaalKodeverk","FullmaktKodeverk","AdresseKodeverk","SigrunKodeverk","ArbeidKodeverk","InntektstubKodeverk","GtKodeverk","OppholdstillatelseKodeverk","OrganisasjonKodeverk","SubOverskrift","iconKind","Icon","MenuList","options","getValue","initialOffset","indexOf","Array","isArray","OPTION_HEIGHT","height","itemCount","itemSize","initialScrollOffset","index","StyledOption","styled","div","Option","isSelected","innerProps","cx","id","tabIndex","Select","onChange","onBlur","optionHeight","classNamePrefix","isLoading","isSearchable","isClearable","placeholder","isMulti","styles","_value","filter","o","some","el","inputId","filterOption","createFilter","ignoreAccents","components","isDisabled","menuPortal","base","zIndex","menuPortalTarget","document","getElementById","SelectMedKodeverk","kodeverkVerdier","DollySelect","props","InputWrapper","Label","containerClass","feil","P_FormikSelect","fastfield","useField","field","meta","handleChange","selected","action","concat","option","v","SyntEvent","afterChange","handleBlur","fieldError","FormikSelect","visHvisAvhuket","component","attributt","defaultValue","useFormikContext","errors","touched","setFieldTouched","setFieldValue","FormikField","event","target","onSubmit","error","TextInput","forwardRef","ref","icon","DollyTextInput","FormikTextInput","UncontrolledFormikTextInput","registerLocale","locale_nb","Datepicker","excludeDates","minDate","maxDate","locale","dateFormat","placeholderText","Date","showMonthDropdown","showYearDropdown","subYears","addYears","dropdownMode","autoComplete","customInput","DollyDatepicker","P_FormikDatepicker","date","FormikDatepicker","iconSize","loading","type","cssClass","renderIcon","onlySpinner","handleClick","stopPropagation","Vis","connect","InternalVis","formik","isChecked","attributtPath","_isNil","_has","Panel","startOpen","hasErrors","heading","content","checkAttributeArray","uncheckAttributeArray","informasjonstekst","iconType","useToggle","isOpen","toggleOpen","panelClass","renderContent","LinkButton","text","check","e","uncheck","Hjelpetekst","uuid","render","this","Logger","log","ratingFor","StyledLabel","wrapClass","Boolean","_isEmpty","feilmelding","htmlFor","role","aria-live","validate","schema","abortEarly","context","yupToFormErrors","console","info","messages","required","requiredDate","Yup","test","_isString","Formatters","parseDate","isDate","requiredString","requiredBoolean","requiredNumber","ifPresent","when","is","_isUndefined","then","otherwise","notRequired","ifKeyHasValue","includes","mapDispatchToProps","fetchKodeverk","mapStateToProps","state","ownProps","getKodeverkSelector","KodeverkWrapper","verdi","useEffect","find","ThumbsButton","NavButton","ThumpsUp","ThumpsDown","ThumbsRating","rated","setRated","_onClick","rating","Rating","Positive","Negative","LoadableComponent","onFetch","setLoading","setError","setData","response","href","preventDefault","Visning","brukertype","servicebehov","inaktiveringDato","automatiskInnsendingAvMeldekort","aap115","vedtak","Fragment","formatDate","fraDato","aap","tilDato","dagpenger","rettighetKode","mottattDato","ArenaVisning","bestillinger","useStandard","visningData","undefined","bestilling","hasOwnProperty","arenaforvalter","fyllVisningData","arenaBrukertype","kvalifiseringsgruppe","servicebehovKodeTilBeskrivelse","oversettBoolean","Knapp","NavKnapp","Alert","AlertStripeFeil","LoadableComponentWithRetry","callPromise","TilgjengeligeMiljoer","endepunkt","dollyEnvironments","useAsync","message","arrayToString","filterMiljoe","dollyMiljoe","utvalgteMiljoer","dollyMiljoeArray","flatDollyMiljoe","miljoe","dollymiljoe","miljoeArray","Object","forEach","miljoeKat","texts","inntektstype","LOENNSINNTEKT","YTELSE_FRA_OFFENTLIGE","PENSJON_ELLER_TRYGD","NAERINGSINNTEKT","inngaarIGrunnlagForTrekk","utloeserArbeidsgiveravgift","true","false","fordel","naturalytelse","kontantytelse","utgiftsgodtgjoerelse","skatteOgAvgiftsregel","svalbard","janMayenOgBilandene","saerskiltFradragForSjoefolk","veldedigEllerAllmennyttigOrganisasjon","dagmammaIBarnetsHjem","loennsarbeidIHjemmet","nettoloenn","nettoloennForSjoefolk","skattefriOrganisasjon","kildeskattPaaPensjoner","skattemessigBosattILand","opptjeningsland","beskrivelse","kostDoegn","losji","fastloenn","timeloenn","fastTillegg","uregelmessigeTilleggKnyttetTilArbeidetTid","helligdagstillegg","uregelmessigeTilleggKnyttetTilIkkeArbeidetTid","bonus","overtidsgodtgjoerelse","styrehonorarOgGodtgjoerelseVerv","kommunalOmsorgsloennOgFosterhjemsgodtgjoerelse","sluttvederlag","feriepenger","annet","ikkeSkattepliktigLoennFraUtenlandskDiplomKonsulStasjon","skattepliktigDelForsikringer","hyretillegg","bil","kostDager","rentefordelLaan","bolig","fondForIdrettsutoevere","bonusFraForsvaret","elektroniskKommunikasjon","opsjoner","aksjerGrunnfondsbevisTilUnderkurs","loennForBarnepassIBarnetsHjem","loennUtbetaltAvVeldedigEllerAllmennyttigInstitusjonEllerOrganisasjon","loennTilPrivatpersonerForArbeidIHjemmet","kostbesparelseIHjemmet","smusstillegg","kilometergodtgjoerelseBil","fastBilgodtgjoerelse","reiseKost","reiseAnnet","besoeksreiserHjemmetAnnet","besoeksreiserHjemmetKilometergodtgjoerelseBil","arbeidsoppholdKost","arbeidsoppholdLosji","reiseLosji","stipend","friTransport","bedriftsbarnehageplass","tilskuddBarnehageplass","reiseKostMedOvernatting","reiseKostMedOvernattingPaaHotell","reiseNattillegg","reiseKostMedOvernattingPaaHotellBeordringUtover28Doegn","reiseKostUtenOvernatting","administrativForpleining","reiseKostMedOvernattingPaaHybelBrakkePrivat","losjiEgenBrakkeCampingvogn","reiseKostMedOvernattingTilLangtransportsjaafoerForKjoeringIUtlandet","reiseKostMedOvernattingPaaPensjonat","besoeksreiserHjemmetKost","kilometergodtgjoerelseElBil","kilometergodtgjoerelsePassasjertillegg","kilometergodtgjoerelseAndreFremkomstmidler","flyttegodtgjoerelse","godtgjoerelseSaeravtaleUtland","overtidsmat","skattefriErstatning","loennUtenlandskArtist","skattefrieUtbetalinger","loennEtterDoedsfall","kapitalInntekt","kompensasjonstilleggBolig","beregnetSkatt","innbetalingTilUtenlandskPensjonsordning","yrkebilTjenestligbehovListepris","yrkebilTjenestligbehovKilometer","loennTilVergeFraFylkesmannen","trekkILoennForFerie","betaltUtenlandskSkatt","honorarAkkordProsentProvisjon","skattepliktigPersonalrabatt","tips","foreldrepenger","venteloenn","dagpengerTilFiskerSomBareHarHyre","sykepengerTilFiskerSomBareHarHyre","dagpengerVedArbeidsloeshet","sykepenger","underholdsbidragTilBarn","skattefrieTilleggsstoenader","arbeidsavklaringspenger","svangerskapspenger","skattefriStoenadTilBarnetilsyn","overgangsstoenadTilEnsligMorEllerFarSomBegynteAaLoepe1April2014EllerSenere","ufoeretrygd","ektefelletilleggUfoeretrygd","ufoereytelseEtteroppgjoer","pensjonOgLivrenterIArbeidsforhold","etterloennOgEtterpensjon","pensjonIDoedsmaaneden","foederaad","alderspensjon","ufoerepensjon","ektefelletillegg","barnepensjon","overgangsstoenad","avtalefestetPensjon","barnepensjonFraAndreEnnFolketrygden","introduksjonsstoenad","supplerendeStoenadTilPersonKortBotidNorge","kvalifiseringstoenad","nyeLivrenterIArbeidsforholdOgLivrenterFortsettelsesforsikringer","krigspensjon","etterlattepensjon","nyAvtalefestetPensjonPrivatSektor","ufoerepensjonFraAndreEnnFolketrygden","underholdsbidragTilTidligereEktefelle","overgangsstoenadTilEnsligMorEllerFarSomBegynteAaLoepe31Mars2014EllerTidligere","overgangsstoenadTilGjenlevendeEktefelle","ipaEllerIpsEngangsutbetaling","ipaEllerIpsUfoerepensjon","ipaEllerIpsBarnepensjon","ipaEllerIpsPeriodiskeYtelser","engangsutbetalingInnskuddspensjon","ufoereytelseEtteroppgjoerFraAndreEnnFolketrygden","etterloenn","vederlagDagmammaIEgetHjem","sykepengerTilDagmamma","sykepengerTilJordOgSkogbrukere","vederlag","dagpengerTilFisker","sykepengerTilFisker","lottKunTrygdeavgift","tilleggsinformasjon","tilleggsinformasjonstype","BilOgBaat","bilOgBaat","BonusFraForsvaret","Node","hasChildren","onNodeClick","enhet","getId","getName","Enhetstre","getUnderenheter","currentEnhet","level","enheter","i","selectedEnhet","OrgTree","organisajon","underenheter","createId","organisasjonsnavn","statuser","ENKE","GIFT","GJPA","REPA","SAMB","SEPR","SEPA","SKIL","SKPA","gyldigNesteStatus","init","ALLE","gyldigSisteStatus","nesteGyldigStatuser","sivilstander","kode","sisteSivilstandKode","sivilstand","statusKode","erOpprettNyPartnerGyldig","tomSisteSivilstand","formikBag","sivilstandBasePath","button","p","textDecoration","cursor","textColor","ArrowButton","left","paginationValue","PaginationContainer","PaginationWrapper","Separator","selectedIndex","objectList","centerIndices","handlePagination","KjedeItem","item","getCenterIndices","antallItems","itemLimit","indices","from","keys","unshift","slice","getInitialPaginationIndex","maxShownItems","setSelectedIndex","isLocked","setLocked","getMaxShownItems","locked","paginationIndex","setPaginationIndex","setCenterIndices","KjedePagination","addValue","handleSelection","newPaginationIndex","obj","apiKodeverkId","_getTpsfBestillingData","identtype","foedtEtter","foedtFoer","alder","doedsdato","statsborgerskap","StatsborgerskapLand","statsborgerskapRegdato","statsborgerskapTildato","kjonn","harMellomnavn","Sivilstander","spesreg","utenFastBopel","sprakKode","Spraak","innvandretFraLand","InnvandretUtvandretLand","innvandretFraLandFlyttedato","utvandretTilLand","utvandretTilLandFlyttedato","erForsvunnet","forsvunnetDato","harBankkontonr","bankkontonrRegdato","telefonnummer_2","telefonnummer_1","telefonLandskode_1","telefonLandskode_2","egenAnsattDatoFom","egenAnsattDatoTom","mapBestillingData","bestillingData","bestillingsinformasjon","bestillingsInfo","items","antallIdenter","toString","navSyntetiskIdent","sistOppdatert","opprettetFraId","opprettetFraGruppeId","tpsf","boadresse","postadresse","midlertidigAdresse","adresseNrInfo","identHistorikk","relasjoner","vergemaal","fullmakt","persondetaljer","personinfo","adresseNrInfoObj","showLabel","nummertype","nummer","bolignr","flyttedato","adresse","adressetypeToString","adressetype","gateadresse","husnummer","mellomnavn","gardsnr","bruksnr","festenr","undernr","postnr","kommunenr","tilleggsadresse","tilleggType","postadr","postLand","postLinje1","postLinje2","postLinje3","typeGateadresse","gateadresseNrInfo","norskAdresse","gatenavn","midlertidigAdresseObj","gyldigTom","husnr","eiendomsnavn","postboksnr","postboksAnlegg","utenlandskAdresse","PostadresseLand","midlertidigTilleggsadresseObj","identhistorikkData","itemRows","ident","numberHeader","kjonnToString","regdato","partnere","partner","barn","foreldre","j","sisteSivilstand","_takeRight","tidligereSivilstander","_dropRight","reverse","s","width","harFellesAdresse","partnerIdent","barnType","borHos","erAdoptert","foedselsdato","foreldreRows","foreldreType","vergemaalKriterier","embete","Fylkesmannsembeter","sakType","Sakstype","mandatType","Mandattype","vedtakDato","identType","fullmaktKriterier","kilde","omraaderArrayToString","omraader","gyldigFom","aaregKriterier","aareg","paginering","pagineringPages","harAmelding","arbeidsforholdVisning","arbeidsforhold","arbeidsforholdstype","Arbeidsforholdstyper","arbeidsgiver","orgnummer","arbeidsforholdID","ansettelsesPeriode","fom","tom","sluttaarsak","SluttaarsakAareg","arbeidsavtale","yrke","Yrker","ansettelsesform","AnsettelsesformAareg","stillingsprosent","endringsdatoStillingsprosent","sisteLoennsendringsdato","arbeidstidsordning","Arbeidstidsordninger","avtaltArbeidstimerPerUke","fartoy","skipsregister","Skipsregistre","skipstype","Skipstyper","fartsomraade","Fartsområder","antallTimerForTimeloennet","utenlandsopphold","permisjon","permittering","genererPeriode","amelding","maaned","sigrunStubKriterier","sigrunstub","flatSigrunStubKriterier","inntekt","inntektObj","inntektsaar","tjeneste","grunnlag","gr","tekniskNavn","inntektssted","svalbardGrunnlag","sigrunStub","uppercaseAndUnderscoreToCapitalized","inntektStubKriterier","inntektstub","inntektStub","inntektsinformasjon","inntektsinfo","sisteAarMaaned","antallMaaneder","virksomhet","opplysningspliktig","inntektsliste","fradragsliste","forskuddstrekksliste","arbeidsforholdsliste","historikk","sykemeldingKriterier","sykemelding","syntSykemelding","startDato","arbeidsforholdId","detaljertSykemelding","umiddelbarBistand","manglendeTilretteleggingPaaArbeidsplassen","biDiagnoser","helsepersonell","fornavn","etternavn","perioder","detaljer","arbeidsforEtterEndtPeriode","brregstubKriterier","brregstub","understatuser","rolle","registreringsdato","orgNr","foretaksNavn","navn1","personroller","krrKriterier","krrstub","krrStub","registrert","reservert","epost","mobil","spraak","gyldigFra","sdpAdresse","sdpLeverandoer","pdlforvalterKriterier","pdlforvalter","doedsboKriterier","kontaktinformasjonForDoedsbo","navnType","adressat","kontaktperson","doedsbo","idnummer","organisasjonsnummer","adresselinje1","adresselinje2","postnummer","poststedsnavn","landkode","skifteform","utstedtDato","utenlandskIdentifikasjonsnummer","uidnr","flatUidnrKriterier","ui","identifikasjonsnummer","opphoert","utstederland","uidnrObj","uidr","Utstederland","falskIdentitet","falskIdData","rettIdentitet","identitetType","falskId","rettIdentitetVedIdentifikasjonsnummer","personnavn","kjoenn","arenaKriterier","instKriterier","instdata","flatInstKriterier","institusjonstype","varighet","startdato","sluttdato","instObj","inst","udiStubKriterier","udistub","oppholdKriterier","oppholdStatus","arbeidsadgangKriterier","arbeidsadgang","currentOppholdsrettType","currentTredjelandsborgereStatus","oppholdSammeVilkaar","uavklart","harOppholdsTillatelse","oppholdsrett","tredjelandsborger","aliaserListe","aliaser","alias","nyIdent","allCapsToCapitalized","harArbeidsAdgang","typeArbeidsadgang","arbeidsOmfang","flyktning","soeknadOmBeskyttelseUnderBehandling","pensjonKriterier","pensjonforvalter","fomAar","tomAar","belop","redusertMedGrunnbelop","inntektsmeldingKriterier","inntektsmelding","tomInntektsmelding","inntekter","mapInntektsmeldingKriterier","meldinger","codeToNorskLabel","aarsakTilInnsending","ytelse","naerRelasjon","avsendersystem","innsendingstidspunkt","virksomhetsnummer","arbeidsgiverPrivat","arbeidsgiverFnr","beregnetInntekt","beloep","aarsakVedEndring","foersteFravaersdag","avtaltFerieListe","refusjon","refusjonsbeloepPrMnd","refusjonsopphoersdato","endringIRefusjonListe","omsorgspenger","fravaersPerioder","delvisFravaersListe","sykepengerIArbeidsgiverperioden","arbeidsgiverperiodeListe","startdatoForeldrepengeperiode","pleiepengerPerioder","gjenopptakelseNaturalytelseListe","opphoerAvNaturalytelseListe","dokarkivKriterier","dokarkiv","dokumenter","brevkode","tittel","tema","journalfoerendeEnhet","organisasjonKriterier","organisasjon","forretningsadresse","enhetstype","naeringskode","sektorkode","formaal","stiftelsesdato","maalform","telefon","nettside","forretningsadresseKriterier","poststed","adresselinjer","postadresseKriterier","importFraTps","importData","kildeMiljoe","toUpperCase","OrganisasjonKriterier","selectedId","setSelectedId","orgTree","_renderBestillingsDetaljer","kategori","bottomBorder","_renderStaticValue","DollyKjede","row","Bestillingskriterier","MiljoeInfo","bestillingsdata","InstApi","getTilgjengeligeMiljoer","ArenaApi","PensjonApi","MiljoVelger","environments","useSelector","filteredEnvironments","filterEnvironments","miljoer","erOrg","filtrerteMiljoer","Q","env","order","category","allDisabled","f","checked","velgAlle","c","a","n","fjernAlle","Header","iconClassName","matches","transform","nullable","max","festnr","num","isNaN","validDate","dato","ettAarFraIDag","setFullYear","getFullYear","isAfter","addDays","isBefore","gatekode","min","of","sivilstandRegdato","partnerIdx","parseInt","sivilstandIdx","prevDato","getSivilstandRegdato","pIdx","sIdx","getSisteForholdDato","personFoerLeggTil","datoer","sivstand","sort","b","getTime","toISOString","substring","dateValidAfter","dateValidBeforeToday","now","createError","Dataformatter","innvandringUtvandringDatoTest","erEtterSisteDato","sisteDato","foedtFoerOgEtterTest","validation","validerFoedtFoer","isWithinTest","val","lastIndexOf","selectedDato","toDateString","foedtEtterValue","foedtFoerValue","foedtEtterDato","foedtFoerDato","setDate","getDate","partnerNr","requiredHvisIkkeDoed","requiredHvisDoedfoedt","testTelefonnummer","nr","typeError","importType","fra","ImportFraEtikett","importFra","venstreMargin","mini","formikPath","readOnly","tidligereSivilstand","minimumDato","SivilstandStatuser","getFeilmelding","isSivilstandNy","ny","initialValues","Sivilstand","basePath","minDatoSivilstand","antallTidligereSivilstander","ugyldigSisteSivilstand","formikIdx","isLast","showRemove","clickRemove","AvbrytButton","useBoolean","modalIsOpen","openModal","closeModal","DollyModal","overflow","Navigation","showPrevious","onPrevious","isLastStep","dispatch","useDispatch","isSubmitting","handleSubmit","onAbort","go","BestillingsveilederHeader","opts","useContext","BestillingsveilederContext","nyOrganisasjon","nyStandardOrganisasjon","titleValue","antall","opprettFraIdenter","Formatter","nyBestillingFraMal","mal","malNavn","leggTil","Utvalg","renderItem","renderPanel","renderEmptyResult","AttributtVelger","Attributt","attr","vis","attributtCheckbox","add","AttributtKategori","innvandret","PersoninformasjonPanel","sm","stateModifier","opprettFraEksisterende","batchAdd","batchRemove","attrs","set","setMulti","del","has","randomIntInRange","Kategori","flex","InputGroup","HeaderGroup","adressenavn","setAdressenavn","setPostnummer","kommunenummer","setKommunenummer","PostnummerUtenPostboks","Kommunenummer","spinner","getQueryParms","request","join","api","fetchJson","method","headers","StyledAdresseVelger","Feil","Advarsel","AlertStripeAdvarsel","onSelect","adresser","setAdresser","setAdresse","notFound","setNotFound","getLabel","husbokstav","AdresseSok","search","AdresseService","NotFoundError","matrikkelId","findAdresse","gaardsnummer","setGaardsnummer","bruksnummer","setBruksnummer","GateadresseTyper","tilleggsnavn","MatrikkelAdresseSok","Boadresse","renderAdresse","postnummerListe","koder","AdresseVelger","settBoadresse","adressekode","DollyApi","getKodeverkByNavn","Postadresser","Postnummer","handleAfterChange","Postboksadresse","Stedsadresse","UtenlandskAdresse","GateadresseDetaljert","renderGateadresse","settAdresse","TilleggsTyper","Gateadresse","getState","GATE","TILFELDIG","gateAdresseType","setGateAdresseType","legend","radios","POSTNR","KOMMUNENR","handleRadioChange","AdresseTyper","Tilleggsadresse","tilleggsadressePath","showTilleggsadresse","setShowTilleggsadresse","handleChangeTilleggsadresse","isSwitch","Options","handleChangeTilleggstype","CoNavn","showNummer","tilleggstype","MidlertidigAdresse","adressetypePath","setAdressetype","handleAdressetypeChange","valgt","STED","PBOX","UTAD","MatrikkelAdresse","AdresseNr","adresseType","TilfeldigMatrikkelAdresse","MatrikkelAdresseVelger","settMatrikkelAdresse","paths","boadressePaths","Adresser","initialBoType","localBoType","sessionStorage","getItem","boType","setBoType","panelError","erForste","nyType","setItem","AdressePanel","IdentifikasjonPanel","rettIdentitetErUkjent","FamilierelasjonPanel","defaultPartner","defaultBarn","defaultForeldre","fullPartner","eksisterendePartner","relasjon","relasjonTypeNavn","fullForelder","eksisterendeRelasjoner","eksisterendeForeldre","eksisterendeForelderValues","forelder","personRelasjonMed","fullBarn","eksisterendeBarn","eksisterendeBarnValues","periode","initialForenkletOppgjoersordningOrg","aktoertype","initialForenkletOppgjoersordningPers","initialArbeidsforholdOrg","initialArbeidsforholdPers","initialAaregOrg","initialAaregPers","initialFartoy","initialTimeloennet","antallTimer","initialUtenlandsopphold","land","initialPermisjon","permisjonsPeriode","permisjonsprosent","initialPermittering","permitteringsPeriode","permitteringsprosent","ArbeidInntektPanel","joarkMetadata","versjon","startOpptjeningsperiode","sluttOpptjeningsperiode","InstitusjonsoppholdPanel","KontaktReservasjonsPanel","KontaktDoedsboPanel","adressatType","ArenaPanel","alleredeRegistrert","arenaforvalteren","ikkeServicebehov","ingenYtelser","MED_SERVICEBEHOV","AUTOMATISK_INNSENDING_MELDEKORT","vedtakstype","UdiPanel","hjemmel","asylsoker","arbeidsadgangFelter","til","forklaring","BrregPanel","DokarkivPanel","kanal","SykdomPanel","Steg1Person","panel","OrganisasjonDetaljerPanel","Steg1Organisasjon","Steg1","Diskresjonskoder","harUfb","setHarUfb","harBoadresse","handleChangeUFB","checkboxMargin","handleChangeKommunenr","Telefonnummer","harToTlfnr","settToTlfnr","settEttTlfnr","Retningsnumre","leggTilTlfnr","fjernTlfnr","Diverse","harSkjerming","Kjoennstyper","handleChangeKontonr","alderValg","spesifikk","Alder","handleDoed","initialValue","alderType","setAlderType","toggleValues","handleToggleChange","setValues","_omit","Vergemaal","Relasjonstyper","uri","SelectOptionsOppslag","Api","KrrApi","getSdpLeverandoerListe","getPersonnavn","getFasteDatasettGruppe","enumtype","BrregstubApi","getRoller","getUnderstatus","persondata","personInfo","liste","navnOgFnr","fnr","entries","status","roller","leverandoerer","leverandoer","ugyldigeKoder","omr","omraade","Fullmakt","fullmaktOmraader","fullmaktOptions","alderPaths","nasjonalitetPaths","diversePaths","vergemaalPath","fullmaktPath","panelPaths","flat","Personinformasjon","Identhistorikk","mapSivilstand","mapTidligerePartnere","finnTidligerePartnere","Partner","mapNyePartnere","sisteTidligerePartner","handleDoedsdatoChange","sistePartner","sisteTidligereSivilstandRegdato","tidligerePartnere","sjekkKanOppretteNyPartner","gyldigKode","harRegdato","ugyldigSivilstandState","Partnere","Partnerliste","formikPartnere","oppdatertPartner","pop","partnereUtenomFormikBag","kanOppretteNyPartner","initialValuesDoedfoedt","Barn","filterBorHos","opt","optionsPartnerNr","getOptionsPartnerNr","isDoedfoedt","aktuellRelasjon","handleIdenttypeChange","handleFoedselsdatoChange","Foreldre","antallForeldre","eksisterendeForelder","gjeldendeForelder","Familierelasjoner","TpsfForm","KrrstubForm","leverandoerOptions","handleRegistrertChange","EnkeltinntektForm","initialGrunnlag","InntektsaarForm","getYearRangeOptions","tjenesteErValgt","marginTop","SigrunstubForm","checkTjenesteGrunnlag","charAt","integer","nyeInntekterOverlapper","alleInntekter","currInntektsinformasjon","virksomheter","inntektinfo","maaneder","likeOrgnrIndex","indexOfLikeOrgnr","tidsrom","finnTidsrom","finnesOverlappendeDato","orgnr","getInterval","currDato","aarMaaned","year","split","month","start","subMonths","end","tidsromSomIkkeKanOverlappe","firstInterval","areIntervalsOverlapping","antallTimerPerUkeSomEnFullStillingTilsvarer","avloenningstype","sisteDatoForStillingsprosentendring","excludeEmptyString","unikOrgMndTest","isUniqueCombination","currInntektsinformasjonPath","inntektsinformasjonPath","fetchOrganisasjoner","gruppe","kanHaArbeidsforhold","OrganisasjonLoader","valueNavn","formatLabel","OrganisasjonFasteDataService","opprinnelse","juridiskEnhet","overenhet","forretningsAdresse","list","OrganisasjonSelect","OrganisasjonMedArbeidsforholdSelect","ToggleValg","inputValg","OrgnummerToggle","opplysningspliktigPath","inputType","setInputType","success","setSuccess","aktiveMiljoer","setAktiveMiljoer","environment","setEnvironment","setOrgnummer","MiljoeApi","getAktiveMiljoer","resp","fetchData","handleManualOrgChange","org","miljo","OrgserviceApi","getOrganisasjonInfo","enhetType","Toggle","localeCompare","numeric","sensitivity","InntektstubOrgnummerSelect","InntektstubVirksomhetToggle","virksomhetPath","ORGANISASJON","PRIVAT","tilleggsinformasjonPaths","aaretUtbetalingenGjelderFor","etterbetalingsperiodeStart","etterbetalingsperiodeSlutt","grunnpensjonsbeloep","heravEtterlattepensjon","pensjonsgrad","pensjonTidsromStart","pensjonTidsromSlutt","tilleggspensjonsbeloep","ufoeregrad","persontype","inntjeningsforhold","sjekkFelt","fieldValue","fieldPath","dateFields","numberFields","wideFields","booleanField","optionsUtfylt","fieldResolver","resetForm","tilleggsinformasjonAttributter","ArbeidOgInntektLand","filteredOptions","tomTilleggsinformasjonFieldPath","Inntekt","fields","onValidate","displayName","InntektStub","inntektPath","setFields","reset","setReset","inntektValues","currentInntektstype","setCurrentInntektstype","currentTilleggsinformasjonstype","setCurrentTilleggsinformasjonstype","DagmammaIEgenBolig","NorskKontinentalsokkel","Livrente","LottOgPartInnenFiske","Nettoloennsordning","UtenlandskArtist","InntektstubService","entry","valueArray","setFormikBag","nullstiltInntekt","simpleInitialValues","simpleValues","InntektForm","formSimple","setFormSimple","changeFormType","eventValueSimple","restValues","inntektsListe","newInntektArray","FradragForm","Fradragbeskrivelse","ForskuddstrekkForm","Forskuddstrekkbeskrivelse","ArbeidsforholdForm","arbeidsforholdstyper","arbeidsforholdstyperFormatted","forhold","Avloenningstyper","kopiAvGjeldendeInntekt","historikkPath","listePath","Monthpicker","handleDateChange","formikProps","showMonthYearPicker","Kodeverk","Ytelser","Tema","parse","selectedDate","substr","InntektstubForm","TypeArbeidsgiver","ytelsePath","findTema","setYtelseOgTema","Sykepenger","Syk","Foreldrepenger","Svangerskapspenger","For","Oms","Omsorgspenger","harUtbetaltPliktigeDager","bruttoUtbetalt","Pleiepenger","PleiepengerBarn","PleiepengerNaerstaaende","initialDelvisFravaer","timer","initialFravaersperioder","initialArbeidsperiode","InntektsmeldingSelect","Begrunnelse","newPath","initialPleiepengerperiode","initialEndringIRefusjon","initialPeriode","AarsakVedEndring","initialNaturalytelse","beloepPrMnd","naturalytelseType","NaturalYtelse","AlertAaregRequired","meldingSkjema","marginBottom","InputWarning","visWarning","warningText","VIRKSOMHET","PRIVATPERSON","InntektsmeldingForm","typeArbeidsgiver","setTypeArbeidsgiver","handleArbeidsgiverChange","AarsakTilInnsending","InntektsmeldingYtelseSelect","Ytelse","innenforAnsettelsesforholdTest","validateFomMonth","dateValue","aaregIndex","ameldingIndex","arbeidsforholdIndex","fomPath","replace","fomMonth","getMonth","getYear","arrayPos","ansattFom","ansattTom","isWithinInterval","fullArbeidsforholdTest","fullArbeidsforholdTyper","checkRequired","gyldig","arbeidsforholdType","requiredPeriode","TimeloennetForm","erLenket","onChangeLenket","PermisjonForm","PermisjonsOgPermitteringsBeskrivelse","PermitteringForm","ArbeidsgiverTyper","UtenlandsoppholdForm","ArbeidsavtaleForm","MaritimtArbeidsforholdForm","EgenOrganisasjonSelect","orgnavn","ArbeidsgiverIdent","personnummer","setPersonnummer","setMiljoer","handleManualPersonnrChange","personnr","TpsfApi","getMiljoerByFnr","statusPaaIdenter","arbeidsgiverType","egen","arbeidsforholdClone","_cloneDeep","_set","handleArbeidsforholdstypeChange","felles","fritekst","privat","KjedeIcon","KjedeContainer","Fyllknapp","Slettknapp","AmeldingForm","ameldinger","setErLenket","setErIkkeLenket","handlePeriodeChange","maanederPrev","eachMonthOfInterval","format","maanederFiltered","mnd","currMaaned","element","ameldingClone","arbforh","handleFjernMaaned","currAmelding","splice","nyPeriode","idMaaned","currArbeidsforhold","nyttArbeidsforhold","idArbeidsforhold","ToggleArbeidsgiver","ToggleGruppe","fellesOrg","ArbeidsforholdToggle","getArbeidsgiverType","harEgneOrg","orgLink","AaregForm","egenskap","fratraadt","PersonrollerForm","egenskapOptions","getEgenskapOptions","valgteOptions","colorStyles","defaultStyles","egenskapen","EnheterForm","rollerOptions","setEnhetsinfo","adresse1","landKode","BrregstubForm","understatuserOptions","personnavnSchema","utenlandskId","kontaktDoedsbo","getPlaceholder","selectedValuePath","setNavn","deltNavn","setValue","FalskIdentitet","falskIdPath","falskIdObj","navnInfo","navnOptions","dollyGruppeInfo","navnOgFnrOptions","settIdentitetType","UtenlandsId","Adressat","addressatPath","Adresse","KontaktinformasjonForDoedsbo","identifikasjonAttributt","doedsboAttributt","PdlfForm","MedServicebehov","uregistert","AlertInntektskomponentenRequired","ikkeOverlappendeVedtak","datoIkkeMellom","nyDatoFra","gjeldendeDatoFra","gjeldendeDatoTil","validTildato","fradato","tildato","validFradato","vedtakType","validVedtak","naavaerendeVerdier","tidligereBestillinger","datoOverlapperIkkeAndreVedtak","annenVedtakType","vedtaktype","naeverendeVerdier","nyDatoTil","arenaBestillinger","arenaInfo","overlapperMedliste","originalFradato","orginialTildato","vedtakListe","validKvalifiseringsgruppe","ingenOverlappFraTildato","aapFraDato","fraDatoBestilling","ArenaForm","servicebehovAktiv","dagpengerAktiv","uregistrert","datoOverlapperIkkeAndreOppholdTest","validerStart","alleOpphold","sluttDatoValue","startDatoValue","sluttDato","selectedStartValue","getAllDatesBetween","startDate","endDate","arr","dt","InstForm","dateInfo","getExcludedDatesAndMaxDate","days","checkUndefined","oppholdSammeVilkaarPeriode","oppholdSammeVilkaarEffektuering","oppholdstillatelseVedtaksDato","oppholdstillatelseType","ikkeOppholdSammeVilkaar","avslagEllerBortfall","avgjorelsesDato","shape","eosEllerEFTABeslutningOmOppholdsrett","eosEllerEFTAVedtakOmVarigOppholdsrett","eosEllerEFTAOppholdstillatelse","OppholdSammeVilkaar","IkkeOppholdSammeVilkaar","Oppholdsstatus","initialStatus","findInitialStatus","oppholdsstatusObj","eosEllerEFTABeslutningOmOppholdsrettPeriode","eosEllerEFTAVedtakOmVarigOppholdsrettPeriode","eosEllerEFTAOppholdstillatelsePeriode","oppholdsstatus","setOppholdsstatus","eosEllerEFTAtypeOpphold","setEosEllerEFTAtypeOpphold","tredjelandsBorgereValg","setTredjelandsBorgereValg","felt","endreOppholdsstatus","endreEosEllerEFTAtypeOpphold","endreTredjelandsBorgereValg","Arbeidsadgang","endreArbeidsadgang","maxLength","endreForklaring","Alias","Annet","attrPaths","UdistubForm","innenforInntektsperiodeTest","validateFomBasedOnAge","validateBasedOnDeath","inntektFom","calculate_age","dob","diff_ms","age_dt","Math","abs","getUTCFullYear","day","inntektTom","PensjonForm","pdfjs","GlobalWorkerOptions","workerSrc","pdfjsWorker","FilOpplaster","FileUpload","DokarkivForm","gjeldendeFiler","JSON","files","setFiles","skjemaValues","setSkjemaValues","handleSkjemaChange","skjema","dokumentVarianter","vedl","dokumentvarianter","filtype","fysiskDokument","base64","variantformat","NAVSKJEMA","TEMA","acceptedMimetypes","onFilesChanged","handleVedleggChange","filer","stringify","validBrevkode","SyntSykemelding","marginLeft","paddingTop","Diagnoser","ICPC2","code","SelectOptionsDiagnoser","diagnose","diagnoseNavn","mapSamhandlerType","samhandlerType","hprId","initialValuesDiagnose","diagnosekode","system","initialValuesPeriode","aktivitet","behandlingsdager","grad","reisetilskudd","DetaljertSykemelding","handleDiagnoseChange","HelsepersonellSelect","handleLegeChange","by","gate","SykemeldingTyper","initialValuesSyntSykemelding","initialValuesDetaljertSykemelding","yrkesbetegnelse","beskrivHensynArbeidsplassen","tiltakArbeidsplass","tiltakNav","hovedDiagnose","mottaker","Sykemelding","detaljert","synt","typeSykemelding","setTypeSykemelding","SykdomForm","TypeUnderenhet","organisasjonPaths","kontaktPaths","Kontaktdata","hjelpetekstAdresser","landForretningsadresse","landPostadresse","handleLandChange","adressePath","Detaljer","maaHaUnderenhet","sektorkodeErValgt","JURIDISKENHET","typeUnderenhet","setTypeUnderenhet","EnhetstyperJuridiskEnhet","EnhetstyperVirksomhet","Naeringskoder","Sektorkoder","detaljerPaths","OrganisasjonForm","adresselinje","testSektorkode","harSektorkode","Steg2","harAvhukedeAttributter","MalForm","aktiv","toggleMal","_toggle","malBestillingNavn","IdentType","BestillingInfoboks","tpsfInfo","harRelasjonMedAdressebeskyttelse","harAdressebeskyttelse","person","IdentVelgerField","Tittel","TestpersonValg","RadioPanelGruppe","IdentVelger","SYNTETISK","STANDARD","setType","handleIdentTypeChange","Steg3","erNyIdent","erOrganisasjon","assign","FormikState","DisplayFormikState","visState","showState","toggleShowState","position","top","right","background","fontSize","margin","padding","borderBottom","borderLeft","borderColor","STEPS","StegVelger","step","setStep","handleBack","CurrentStepComponent","labels","_validate","_handleSubmit","setSubmitting","clear","handleNext","stateModifierFns","initial","setInitial","newObj","rootPath","arrays","newInitial","reduce","acc","allCheckedLabels","batchUpdate","fn","ignoreKeys","newState","erLokalt","window","location","hostname","aktivtSteg","steg","visLabel","kompakt","initialValuesInntektstub","initialValuesAareg","initialValuesInntektsmelding","initialValuesInst","barnDoedfoedt","eosEllerEFTABeslutningOmOppholdsrettEffektuering","eosEllerEFTAVedtakOmVarigOppholdsrettEffektuering","eosEllerEFTAOppholdstillatelseEffektuering","statborgerskap","utvandretTil","innvandretFra","initialValuesBasedOnMal","tilgjengeligeEnvironments","initialValuesMal","getUpdatedAaregData","getUpdatedInntektsmeldingData","getUpdatedInntektstubData","getUpdatedInstData","getUpdatedPdlfData","getUpdatedTpsfData","getUpdatedUdistubData","inntektstubData","newInntektstubData","updateData","aaregData","inntektsmeldingData","instData","pdlfData","newPdlfData","tpsfData","newTpsfData","newData","udistubData","newUdistubData","initalValues","_","extend","prototype","call","TYPE","freeze","NY_BESTILLING","NY_BESTILLING_FRA_MAL","OPPRETT_FRA_IDENTER","LEGG_TIL","NY_ORGANISASJON","NY_STANDARD_ORGANISASJON","createContext","renderBestillingsVeileder","Provider","bestveil","sendBestilling","params","gruppeId","Bestillingsveileder","BVOptions","opprettOrganisasjon","initialValuesOrganisasjon","initialValuesStandardOrganisasjon","bestType","nyBestilling","AppError"],"mappings":"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","file":"9.bundle.a115c65d.js","sourcesContent":["import React from 'react'\nimport cn from 'classnames'\nimport _isFunction from 'lodash/isFunction'\nimport KodeverkConnector from '~/components/kodeverk/KodeverkConnector'\nimport Loading from '~/components/ui/loading/Loading'\n\nimport './TitleValue.less'\n\nconst P_TitleValue = ({ title, value, titleType = 'h4', size = 'small', children, className }) => {\n\tconst css = cn('title-value', `title-value_${size}`)\n\n\treturn (\n\t\t<div className={className + ' ' + css}>\n\t\t\t{React.createElement(titleType, null, [title])}\n\t\t\t<div>{value ? value : children}</div>\n\t\t</div>\n\t)\n}\n\nexport const TitleValue = ({ kodeverk = null, ...restProps }) => {\n\tif (!restProps.value && !restProps.children) return null\n\n\tif (kodeverk) {\n\t\tconst { value, children, ...rest } = restProps\n\t\treturn (\n\t\t\t<P_TitleValue {...rest}>\n\t\t\t\t<KodeverkConnector navn={kodeverk} value={value}>\n\t\t\t\t\t{(kodeverkValues, kodeverkValue) => {\n\t\t\t\t\t\tif (!kodeverkValue) return !kodeverkValues ? <Loading /> : value\n\t\t\t\t\t\treturn _isFunction(restProps.children)\n\t\t\t\t\t\t\t? restProps.children(kodeverkValue)\n\t\t\t\t\t\t\t: kodeverkValue.label\n\t\t\t\t\t}}\n\t\t\t\t</KodeverkConnector>\n\t\t\t</P_TitleValue>\n\t\t)\n\t}\n\treturn <P_TitleValue {...restProps} />\n}\n","import React, { useState } from 'react'\nimport cn from 'classnames'\n// @ts-ignore\nimport ExpandButton from '~/components/ui/button/ExpandButton'\n\ntype Numbering = {\n\tidx: number\n}\n\ninterface ExpandableBlokk<T> {\n\tidx: number\n\tchildren: React.ReactNode\n\tdata: T\n\tgetHeader: (data: T) => string\n}\n\nconst Numbering = ({ idx }: Numbering) => <span className=\"dfa-blokk-number\">{idx + 1}</span>\n\nexport default function ExpandableBlokk<T>({ getHeader, idx, children, data }: ExpandableBlokk<T>) {\n\tconst [isExpanded, setIsExpanded] = useState(false)\n\tconst headerClass = cn('dfa-blokk_header', { clickable: true })\n\n\treturn (\n\t\t<div className=\"dfa-blokk\">\n\t\t\t<div className={headerClass} onClick={() => setIsExpanded(!isExpanded)}>\n\t\t\t\t<Numbering idx={idx} />\n\t\t\t\t<h2>{getHeader(data)} </h2>\n\t\t\t\t<ExpandButton expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)} />\n\t\t\t</div>\n\t\t\t{isExpanded && <div className=\"dfa-blokk_content\">{children}</div>}\n\t\t</div>\n\t)\n}\n","import React, { Children } from 'react'\nimport { FieldArray } from 'formik'\nimport _get from 'lodash/get'\nimport Button from '~/components/ui/button/Button'\nimport Hjelpetekst from '~/components/hjelpetekst'\nimport ExpandableBlokk from './ExpandableBlokk'\n\nimport './dollyFieldArray.less'\nimport { ErrorBoundary } from '~/components/ui/appError/ErrorBoundary'\n\nconst numberColor = {\n\tARRAY_LEVEL_ONE: '#CCE3ED',\n\tARRAY_LEVEL_TWO: '#FFE5C2',\n\tARRAY_LEVEL_THREE: '#CDE7D8',\n\tARRAY_LEVEL_FOUR: '#C1B5D0'\n}\n\nexport const FieldArrayAddButton = ({\n\thoverText = null,\n\taddEntryButtonText,\n\tonClick,\n\tdisabled = false\n}) => (\n\t<Button\n\t\tkind=\"add-circle\"\n\t\tonClick={onClick}\n\t\ttitle={hoverText || `Legg til ${addEntryButtonText.toLowerCase()}`}\n\t\tdisabled={disabled}\n\t>\n\t\t{addEntryButtonText}\n\t</Button>\n)\n\nexport const FieldArrayRemoveButton = ({ onClick }) => (\n\t<Button className=\"field-group-remove\" kind=\"remove-circle\" onClick={onClick} title=\"Fjern\" />\n)\n\nconst DeleteButton = ({ onClick }) => {\n\tif (!onClick) return null\n\treturn <Button kind=\"trashcan\" onClick={onClick} title=\"Fjern\" />\n}\n\nconst Numbering = ({ idx, color = numberColor.ARRAY_LEVEL_ONE }) => (\n\t<span className=\"dfa-blokk-number\" style={{ backgroundColor: color }}>\n\t\t{idx}\n\t</span>\n)\n\nexport const DollyFieldArrayWrapper = ({\n\theader = null,\n\thjelpetekst = null,\n\tnested = false,\n\tchildren\n}) => (\n\t<div className=\"dfa\">\n\t\t{nested && header && (\n\t\t\t<div className=\"dfa-blokk-nested_title\">\n\t\t\t\t<h3>{header}</h3>\n\t\t\t\t{hjelpetekst && <Hjelpetekst hjelpetekstFor={header}>{hjelpetekst}</Hjelpetekst>}\n\t\t\t</div>\n\t\t)}\n\t\t{children}\n\t</div>\n)\n\nexport const DollyFaBlokk = ({\n\theader,\n\tidx,\n\thandleRemove,\n\thjelpetekst,\n\tchildren,\n\tshowDeleteButton,\n\tnumber\n}) => (\n\t<div className=\"dfa-blokk\">\n\t\t<div className=\"dfa-blokk_header\">\n\t\t\t<Numbering idx={number || idx + 1} />\n\t\t\t<h2>{header}</h2>\n\t\t\t{hjelpetekst && <Hjelpetekst hjelpetekstFor={header}>{hjelpetekst}</Hjelpetekst>}\n\t\t\t{showDeleteButton && <DeleteButton onClick={handleRemove} />}\n\t\t</div>\n\t\t<div className=\"dfa-blokk_content\">{children}</div>\n\t</div>\n)\n\nexport const DollyFaBlokkOrg = ({\n\theader,\n\tidx,\n\thandleRemove,\n\thjelpetekst,\n\tchildren,\n\tshowDeleteButton,\n\tnumber\n}) => {\n\tconst nivaa = (number.match(/\\./g) || []).length + 1\n\tconst name = nivaa & 1 ? 'dfa-blokk-org-odd' : 'dfa-blokk-org-even'\n\tconst getNivaaColor = () => {\n\t\tswitch (nivaa) {\n\t\t\tcase 1:\n\t\t\t\treturn numberColor.ARRAY_LEVEL_ONE\n\t\t\tcase 2:\n\t\t\t\treturn numberColor.ARRAY_LEVEL_TWO\n\t\t\tcase 3:\n\t\t\t\treturn numberColor.ARRAY_LEVEL_THREE\n\t\t\tcase 4:\n\t\t\t\treturn numberColor.ARRAY_LEVEL_FOUR\n\t\t\tdefault:\n\t\t\t\treturn numberColor.ARRAY_LEVEL_ONE\n\t\t}\n\t}\n\tconst color = getNivaaColor()\n\n\treturn (\n\t\t<div className={name}>\n\t\t\t<div className={`${name}_header`}>\n\t\t\t\t<Numbering idx={number || idx + 1} color={color} />\n\t\t\t\t<h2>{header}</h2>\n\t\t\t\t{hjelpetekst && <Hjelpetekst hjelpetekstFor={header}>{hjelpetekst}</Hjelpetekst>}\n\t\t\t\t{showDeleteButton && <DeleteButton onClick={handleRemove} />}\n\t\t\t</div>\n\t\t\t<div className={`${name}_content`}>{children}</div>\n\t\t</div>\n\t)\n}\n\nexport const DollyFaBlokkNested = ({ idx, handleRemove, children }) => (\n\t<div className=\"dfa-blokk-nested\">\n\t\t<div className=\"dfa-blokk_header\">\n\t\t\t<Numbering idx={idx + 1} />\n\t\t</div>\n\t\t<div className=\"dfa-blokk_content\">\n\t\t\t<DeleteButton onClick={handleRemove} />\n\t\t\t{children}\n\t\t</div>\n\t</div>\n)\n\nexport const DollyFieldArray = ({\n\tignoreOnSingleElement = false,\n\theader = null,\n\thjelpetekst = null,\n\tdata,\n\tnested = false,\n\tchildren,\n\texpandable = false,\n\tgetHeader = null\n}) => {\n\tif (ignoreOnSingleElement && data.length === 1) {\n\t\treturn children(data[0], 0)\n\t}\n\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<DollyFieldArrayWrapper header={header} hjelpetekst={hjelpetekst} nested={nested}>\n\t\t\t\t{data.map((curr, idx) => {\n\t\t\t\t\treturn nested ? (\n\t\t\t\t\t\t<DollyFaBlokkNested key={idx} idx={idx}>\n\t\t\t\t\t\t\t{children(curr, idx)}\n\t\t\t\t\t\t</DollyFaBlokkNested>\n\t\t\t\t\t) : expandable ? (\n\t\t\t\t\t\t<ExpandableBlokk\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\tgetHeader={getHeader ? getHeader : () => header}\n\t\t\t\t\t\t\tdata={curr}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{children(curr, idx)}\n\t\t\t\t\t\t</ExpandableBlokk>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<DollyFaBlokk key={idx} idx={idx} header={header} hjelpetekst={hjelpetekst}>\n\t\t\t\t\t\t\t{children(curr, idx)}\n\t\t\t\t\t\t</DollyFaBlokk>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</DollyFieldArrayWrapper>\n\t\t</ErrorBoundary>\n\t)\n}\n\nexport const FormikDollyFieldArray = ({\n\tname,\n\ttitle = null,\n\theader,\n\tnewEntry,\n\thjelpetekst = null,\n\tnested = false,\n\tchildren,\n\tdisabled = false,\n\tcanBeEmpty = true,\n\ttag = null,\n\tisOrganisasjon = false,\n\thandleNewEntry = null,\n\thandleRemoveEntry = null\n}) => (\n\t<FieldArray name={name}>\n\t\t{arrayHelpers => {\n\t\t\tconst values = _get(arrayHelpers.form.values, name, [])\n\t\t\tconst addNewEntry = () => {\n\t\t\t\thandleNewEntry ? handleNewEntry() : arrayHelpers.push(newEntry)\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<DollyFieldArrayWrapper header={header} hjelpetekst={hjelpetekst} nested={nested}>\n\t\t\t\t\t\t{values.map((curr, idx) => {\n\t\t\t\t\t\t\tconst showDeleteButton = canBeEmpty === true ? true : values.length >= 2\n\t\t\t\t\t\t\tconst path = `${name}.${idx}`\n\t\t\t\t\t\t\tconst number = tag ? `${tag}.${idx + 1}` : `${idx + 1}`\n\t\t\t\t\t\t\tconst handleRemove = () => {\n\t\t\t\t\t\t\t\thandleRemoveEntry ? handleRemoveEntry(idx) : arrayHelpers.remove(idx)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn nested ? (\n\t\t\t\t\t\t\t\t<DollyFaBlokkNested key={idx} idx={idx} handleRemove={handleRemove}>\n\t\t\t\t\t\t\t\t\t{children(path, idx, curr)}\n\t\t\t\t\t\t\t\t</DollyFaBlokkNested>\n\t\t\t\t\t\t\t) : isOrganisasjon ? (\n\t\t\t\t\t\t\t\t<DollyFaBlokkOrg\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\t\t\tnumber={number}\n\t\t\t\t\t\t\t\t\theader={header}\n\t\t\t\t\t\t\t\t\thjelpetekst={hjelpetekst}\n\t\t\t\t\t\t\t\t\thandleRemove={handleRemove}\n\t\t\t\t\t\t\t\t\tshowDeleteButton={showDeleteButton}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{children(path, idx, curr, number)}\n\t\t\t\t\t\t\t\t</DollyFaBlokkOrg>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<DollyFaBlokk\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\t\t\tnumber={number}\n\t\t\t\t\t\t\t\t\theader={header}\n\t\t\t\t\t\t\t\t\thjelpetekst={hjelpetekst}\n\t\t\t\t\t\t\t\t\thandleRemove={handleRemove}\n\t\t\t\t\t\t\t\t\tshowDeleteButton={showDeleteButton}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{children(path, idx, curr, number)}\n\t\t\t\t\t\t\t\t</DollyFaBlokk>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<FieldArrayAddButton\n\t\t\t\t\t\t\thoverText={title}\n\t\t\t\t\t\t\taddEntryButtonText={header}\n\t\t\t\t\t\t\tonClick={addNewEntry}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</DollyFieldArrayWrapper>\n\t\t\t\t</ErrorBoundary>\n\t\t\t)\n\t\t}}\n\t</FieldArray>\n)\n","export enum PersoninformasjonKodeverk {\n\tSpraak = 'Språk',\n\tKjoennstyper = 'Kjønnstyper',\n\tDiskresjonskoder = 'Diskresjonskoder',\n\tSivilstander = 'Sivilstander',\n\tPersonstatuser = 'Personstatuser',\n\tRetningsnumre = 'Retningsnumre'\n}\n\nexport enum VergemaalKodeverk {\n\tFylkesmannsembeter = 'Vergemål_Fylkesmannsembeter',\n\tMandattype = 'Vergemål_Mandattype',\n\tSakstype = 'Vergemål_Sakstype',\n\tVergetype = 'Vergemål_Vergetype'\n}\n\nexport enum FullmaktKodeverk {\n\tTema = 'Tema'\n}\n\nexport enum AdresseKodeverk {\n\tPostnummer = 'Postnummer',\n\tPostnummerUtenPostboks = 'Postnummer vegadresser',\n\tKommunenummer = 'Kommuner',\n\n\tPostadresseLand = 'LandAdresserFreg',\n\tStatsborgerskapLand = 'StatsborgerskapFreg',\n\tUtstederland = 'UtstederlandIDFreg',\n\tInnvandretUtvandretLand = 'LandAdresserFreg',\n\tArbeidOgInntektLand = 'LandkoderISO2'\n}\n\nexport enum SigrunKodeverk {\n\tBEREGNET_SKATT = 'Beregnet skatt',\n\tSUMMERT_SKATTEGRUNNLAG = 'Summert skattegrunnlag'\n}\n\nexport enum ArbeidKodeverk {\n\tYrker = 'Yrker',\n\tArbeidstidsordninger = 'Arbeidstidsordninger',\n\tArbeidsforholdstyper = 'Arbeidsforholdstyper',\n\tAvloenningstyper = 'Avlønningstyper',\n\tPermisjonsOgPermitteringsBeskrivelse = 'PermisjonsOgPermitteringsBeskrivelse',\n\tSluttaarsakAareg = 'SluttårsakAareg',\n\tAnsettelsesformAareg = 'AnsettelsesformAareg',\n\tSkipsregistre = 'Skipsregistre',\n\tSkipstyper = 'Skipstyper',\n\tFartsområder = 'Fartsområder'\n}\n\nexport enum InntektstubKodeverk {\n\tForskuddstrekkbeskrivelse = 'Forskuddstrekkbeskrivelse',\n\tFradragbeskrivelse = 'Fradragbeskrivelse'\n}\n\nexport enum GtKodeverk {\n\tKNR = 'Kommuner',\n\tBYDEL = 'Bydeler',\n\tLAND = 'Landkoder'\n}\n\nexport enum OppholdstillatelseKodeverk {\n\tOppholdstillatelser = 'Oppholdstillatelser'\n}\n\nexport enum OrganisasjonKodeverk {\n\tEnhetstyperJuridiskEnhet = 'EnhetstyperJuridiskEnhet',\n\tEnhetstyperVirksomhet = 'EnhetstyperVirksomhet',\n\tNaeringskoder = 'Næringskoder',\n\tSektorkoder = 'Sektorkoder'\n}\n","import React from 'react'\nimport Icon from '~/components/ui/icon/Icon'\nimport './SubOverskrift.less'\n\ntype Props = {\n\ticonKind?: string\n\tlabel?: string\n}\n\nexport default function SubOverskrift({ iconKind, label }: Props) {\n\tif (!label) return null\n\treturn (\n\t\t<div className=\"sub-overskrift\">\n\t\t\t{iconKind && <Icon size={18} kind={iconKind} />}\n\t\t\t<h3>{label}</h3>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { FixedSizeList as List } from 'react-window'\n\nconst OPTION_HEIGHT = 40\nconst ROWS = 6\n\nconst MenuList = ({ options, children, getValue }) => {\n\tconst [value] = getValue()\n\tconst initialOffset =\n\t\toptions.indexOf(value) !== -1\n\t\t\t? Array.isArray(children) && children.length >= ROWS\n\t\t\t\t? options.indexOf(value) >= ROWS\n\t\t\t\t\t? options.indexOf(value) * OPTION_HEIGHT - OPTION_HEIGHT * 5\n\t\t\t\t\t: 0\n\t\t\t\t: 0\n\t\t\t: 0\n\n\treturn Array.isArray(children) ? (\n\t\t<List\n\t\t\theight={children.length >= ROWS ? OPTION_HEIGHT * ROWS : children.length * OPTION_HEIGHT}\n\t\t\titemCount={children.length}\n\t\t\titemSize={OPTION_HEIGHT}\n\t\t\tinitialScrollOffset={initialOffset}\n\t\t>\n\t\t\t{({ style, index }) => {\n\t\t\t\treturn <div style={style}>{children[index]}</div>\n\t\t\t}}\n\t\t</List>\n\t) : (\n\t\t<div>{children}</div>\n\t)\n}\n\nexport default MenuList\n","import React from 'react'\nimport cx from 'classnames'\nimport styled from 'styled-components'\n\nconst StyledOption = styled.div`\n\t&.dolly-select {\n\t\t&__option {\n\t\t\tdisplay: block;\n\t\t\tfont-size: 16px;\n\t\t\tcolor: rgb(36, 36, 36);\n\t\t\tpadding: 11px 12px;\n\t\t\twidth: 100%;\n\t\t\tuser-select: none;\n\t\t\tbox-sizing: border-box;\n\n\t\t\t&:hover {\n\t\t\t\tbackground-color: #cde1f3;\n\t\t\t}\n\n\t\t\t&_selected {\n\t\t\t\tbackground-color: #2684ffff;\n\t\t\t\tcolor: #ffffff;\n\n\t\t\t\t&:hover {\n\t\t\t\t\tbackground-color: #2684ffff;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n\nconst Option = ({ children, isSelected, innerProps }) => (\n\t<StyledOption\n\t\tclassName={cx('dolly-select__option', {\n\t\t\t'dolly-select__option_selected': isSelected\n\t\t})}\n\t\tid={innerProps.id}\n\t\ttabIndex={innerProps.tabIndex}\n\t\tonClick={innerProps.onClick}\n\t>\n\t\t{children}\n\t</StyledOption>\n)\n\nexport default Option\n","import React from 'react'\nimport { useField } from 'formik'\nimport { createFilter, default as ReactSelect } from 'react-select'\nimport cn from 'classnames'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { Label } from '~/components/ui/form/inputs/label/Label'\nimport { InputWrapper } from '~/components/ui/form/inputWrapper/InputWrapper'\nimport { fieldError, SyntEvent } from '~/components/ui/form/formUtils'\nimport KodeverkConnector from '~/components/kodeverk/KodeverkConnector'\nimport './Select.less'\nimport MenuList from '~/components/ui/form/inputs/select/MenuList'\nimport Option from '~/components/ui/form/inputs/select/Option'\n\nexport const Select = ({\n\tid,\n\tname,\n\tvalue,\n\tonChange,\n\tonBlur,\n\tclassName,\n\toptionHeight,\n\tclassNamePrefix = 'select',\n\tdisabled = false,\n\tisLoading = false,\n\tisSearchable = true,\n\tisClearable = true,\n\tplaceholder = 'Velg..',\n\toptions = [],\n\tisMulti = false,\n\tstyles\n}) => {\n\tlet _value = isMulti\n\t\t? options.filter(o => value?.some(el => el === o.value))\n\t\t: options.filter(o => o.value === value)\n\n\treturn (\n\t\t<ReactSelect\n\t\t\tvalue={_value}\n\t\t\toptions={options}\n\t\t\tname={name}\n\t\t\tinputId={id || name}\n\t\t\tfilterOption={createFilter({ ignoreAccents: false })}\n\t\t\tonChange={onChange}\n\t\t\tonBlur={onBlur}\n\t\t\tplaceholder={placeholder}\n\t\t\tclassName={cn('basic-single', className)}\n\t\t\tclassNamePrefix={classNamePrefix}\n\t\t\tcomponents={{\n\t\t\t\tMenuList,\n\t\t\t\tOption\n\t\t\t}}\n\t\t\tisDisabled={disabled}\n\t\t\tisSearchable={isSearchable}\n\t\t\tisLoading={isLoading}\n\t\t\tisClearable={isClearable}\n\t\t\tisMulti={isMulti}\n\t\t\tstyles={styles ? styles : { menuPortal: base => ({ ...base, zIndex: 99999 }) }}\n\t\t\tmenuPortalTarget={document.getElementById('react-select-root')}\n\t\t\toptionHeight={optionHeight}\n\t\t/>\n\t)\n}\n\nexport const SelectMedKodeverk = ({ kodeverk, ...rest }) => (\n\t<KodeverkConnector navn={kodeverk}>\n\t\t{kodeverkVerdier => <Select {...rest} isLoading={!kodeverkVerdier} options={kodeverkVerdier} />}\n\t</KodeverkConnector>\n)\n\nexport const DollySelect = props => (\n\t<InputWrapper {...props}>\n\t\t<Label containerClass=\"dollyselect\" name={props.name} label={props.label} feil={props.feil}>\n\t\t\t{props.kodeverk ? <SelectMedKodeverk {...props} /> : <Select {...props} />}\n\t\t</Label>\n\t</InputWrapper>\n)\n\nconst P_FormikSelect = ({ fastfield, feil, ...props }) => {\n\tconst [field, meta] = useField(props)\n\tconst handleChange = (selected, meta) => {\n\t\tlet value\n\t\tif (props.isMulti) {\n\t\t\tif (meta.action === 'select-option') {\n\t\t\t\tvalue = Array.isArray(field.value)\n\t\t\t\t\t? field.value.concat(meta.option.value)\n\t\t\t\t\t: [meta.option.value]\n\t\t\t}\n\t\t\tif (meta.action === 'remove-value') {\n\t\t\t\t// When removing last value, value is null\n\t\t\t\tvalue = selected ? selected.map(v => v.value) : []\n\t\t\t}\n\t\t} else {\n\t\t\tvalue = selected && selected.value\n\t\t}\n\t\tfield.onChange(SyntEvent(field.name, value))\n\t\tif (props.afterChange) props.afterChange(selected)\n\t}\n\n\tconst handleBlur = () => field.onBlur(SyntEvent(field.name))\n\n\treturn (\n\t\t<DollySelect\n\t\t\tname={field.name}\n\t\t\tvalue={field.value}\n\t\t\tonChange={handleChange}\n\t\t\tonBlur={handleBlur}\n\t\t\tfeil={feil || fieldError(meta)}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nexport const FormikSelect = ({ visHvisAvhuket = false, ...props }) => {\n\tconst component = <P_FormikSelect {...props} />\n\treturn visHvisAvhuket ? <Vis attributt={props.name}>{component}</Vis> : component\n}\n","import _get from 'lodash/get'\nimport { fieldError } from '~/components/ui/form/formUtils'\nimport React from 'react'\nimport { DollyTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { useFormikContext } from 'formik'\nimport { FormikField } from '~/components/ui/form/FormikField'\n\ntype Props = {\n\tname: string\n\tdefaultValue?: any\n}\n\nexport default ({ name, defaultValue, ...props }: Props) => {\n\tconst { errors, touched, setFieldTouched, setFieldValue, values } = useFormikContext()\n\treturn (\n\t\t<FormikField name={name} fastfield={false}>\n\t\t\t{({ field, form, meta }) => {\n\t\t\t\tconst handleBlur = event => {\n\t\t\t\t\tif (!_get(touched, field.name)) {\n\t\t\t\t\t\tsetFieldTouched(field.name, true)\n\t\t\t\t\t}\n\t\t\t\t\tif (_get(touched, field.name) !== event.target.value) {\n\t\t\t\t\t\tsetFieldValue(name, event.target.value, true)\n\t\t\t\t\t}\n\t\t\t\t\tif (props.onSubmit) {\n\t\t\t\t\t\tprops.onSubmit()\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<DollyTextInput\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tdefaultValue={defaultValue || _get(values, name)}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tfeil={fieldError({\n\t\t\t\t\t\t\ttouched: _get(touched, name),\n\t\t\t\t\t\t\terror: _get(errors, name)\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}}\n\t\t</FormikField>\n\t)\n}\n","import React from 'react'\nimport cn from 'classnames'\nimport { Label } from '~/components/ui/form/inputs/label/Label'\nimport { InputWrapper } from '~/components/ui/form/inputWrapper/InputWrapper'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport Icon from '~/components/ui/icon/Icon'\nimport UncontrolledFormikTextInput from '~/components/ui/form/inputs/textInput/UncontrolledFormikTextInput'\n\nexport const TextInput = React.forwardRef(\n\t(\n\t\t{\n\t\t\tplaceholder = 'Ikke spesifisert',\n\t\t\tclassName,\n\t\t\ticon,\n\t\t\t...props\n\t\t}: { name?: string; className?: string; icon?: string; placeholder?: string; feil?: any },\n\t\tref\n\t) => {\n\t\tconst css = cn('skjemaelement__input', className, {\n\t\t\t'skjemaelement__input--harFeil': props.feil\n\t\t})\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{/*@ts-ignore*/}\n\t\t\t\t<input ref={ref} id={props.name} className={css} placeholder={placeholder} {...props} />\n\t\t\t\t{icon && <Icon size={20} kind={icon} />}\n\t\t\t</>\n\t\t)\n\t}\n)\n\nexport const DollyTextInput = (props: {\n\tname: string\n\tlabel?: string\n\tfeil?: any\n\tvalue: any\n\tonBlur?: Function\n\tonSubmit?: Function\n\tonChange?: Function\n\tonPaste?: Function\n}) => (\n\t<InputWrapper {...props}>\n\t\t{/*@ts-ignore*/}\n\t\t<Label name={props.name} label={props.label} feil={props.feil}>\n\t\t\t<TextInput {...props} />\n\t\t</Label>\n\t</InputWrapper>\n)\n\nexport const FormikTextInput = ({\n\tvisHvisAvhuket = true,\n\t...props\n}: {\n\tvisHvisAvhuket?: boolean\n\tname: string\n\tlabel?: string\n\tsize?: string\n\ttype?: string\n}) => {\n\tconst component = <UncontrolledFormikTextInput {...props} />\n\t// @ts-ignore\n\treturn visHvisAvhuket ? <Vis attributt={props.name}>{component}</Vis> : component\n}\n","import React from 'react'\nimport ReactDatepicker, { registerLocale } from 'react-datepicker'\nimport { FormikField } from '~/components/ui/form/FormikField'\nimport { addYears, subYears } from 'date-fns'\nimport locale_nb from 'date-fns/locale/nb'\nimport { TextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { Label } from '~/components/ui/form/inputs/label/Label'\nimport { InputWrapper } from '~/components/ui/form/inputWrapper/InputWrapper'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { fieldError, SyntEvent } from '~/components/ui/form/formUtils'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport './Datepicker.less'\n\nregisterLocale('nb', locale_nb)\n\nexport const Datepicker = ({\n\tname,\n\tvalue,\n\tplaceholder = 'Ikke spesifisert',\n\tonChange,\n\tonBlur,\n\tdisabled = false,\n\tfeil,\n\texcludeDates,\n\tminDate,\n\tmaxDate\n}) => {\n\treturn (\n\t\t<ReactDatepicker\n\t\t\tlocale=\"nb\"\n\t\t\tdateFormat=\"dd.MM.yyyy\"\n\t\t\tplaceholderText={placeholder}\n\t\t\tselected={(value && new Date(value)) || null}\n\t\t\tonChange={onChange}\n\t\t\tshowMonthDropdown\n\t\t\tshowYearDropdown\n\t\t\tminDate={minDate || subYears(new Date(), 100)}\n\t\t\tmaxDate={maxDate || addYears(new Date(), 5)}\n\t\t\tdropdownMode=\"select\"\n\t\t\tdisabled={disabled}\n\t\t\tonBlur={onBlur}\n\t\t\tname={name}\n\t\t\tid={name}\n\t\t\tautoComplete=\"off\"\n\t\t\tcustomInput={<TextInput icon=\"calendar\" feil={feil} />}\n\t\t\texcludeDates={excludeDates}\n\t\t/>\n\t)\n}\n\nexport const DollyDatepicker = props => (\n\t<InputWrapper {...props}>\n\t\t<Label name={props.name} label={props.label} feil={props.feil}>\n\t\t\t<Datepicker {...props} />\n\t\t</Label>\n\t</InputWrapper>\n)\n\nconst P_FormikDatepicker = ({ fastfield, ...props }) => (\n\t<FormikField name={props.name} fastfield={fastfield}>\n\t\t{({ field, form, meta }) => {\n\t\t\tconst handleChange = date => {\n\t\t\t\tform.setFieldTouched(props.name) // Need to trigger touched manually for Datepicker\n\n\t\t\t\tif (props.afterChange) props.afterChange(date)\n\n\t\t\t\treturn field.onChange(SyntEvent(field.name, date))\n\t\t\t}\n\t\t\tconst handleBlur = () => field.onBlur(SyntEvent(field.name, field.value))\n\n\t\t\treturn (\n\t\t\t\t<DollyDatepicker\n\t\t\t\t\tvalue={field.value}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\tfeil={fieldError(meta)}\n\t\t\t\t\t{...props}\n\t\t\t\t/>\n\t\t\t)\n\t\t}}\n\t</FormikField>\n)\n\nexport const FormikDatepicker = ({ visHvisAvhuket = true, ...props }) => {\n\tconst component = <P_FormikDatepicker {...props} />\n\treturn visHvisAvhuket ? <Vis attributt={props.name}>{component}</Vis> : component\n}\n","import * as React from 'react'\nimport { ReactNode } from 'react'\n// @ts-ignore\nimport cn from 'classnames'\n// @ts-ignore\nimport Icon from '~/components/ui/icon/Icon'\n// @ts-ignore\nimport Loading from '~/components/ui/loading/Loading'\nimport './Button.less'\n\ninterface Button extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n\tkind?: string\n\tonClick: () => void\n\ticonSize?: number\n\tloading?: boolean\n}\n\nexport default function Button({\n\tkind,\n\tonClick,\n\tchildren,\n\tclassName,\n\ticonSize = 16,\n\tloading = false,\n\ttype = 'button',\n\tdisabled,\n\t...rest\n}: Button) {\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tevent.stopPropagation()\n\t\tonClick()\n\t}\n\n\tconst cssClass = cn('dolly-button', className)\n\n\tconst renderIcon = loading ? (\n\t\t<Loading onlySpinner size={iconSize} />\n\t) : kind ? (\n\t\t// @ts-ignore\n\t\t<Icon size={iconSize} kind={kind} />\n\t) : null\n\n\treturn (\n\t\t<button\n\t\t\ttype={type}\n\t\t\tclassName={cssClass}\n\t\t\tonClick={handleClick}\n\t\t\tdisabled={disabled || loading}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{renderIcon}\n\t\t\t{children && <span>{children}</span>}\n\t\t</button>\n\t)\n}\n","import { connect } from 'formik'\nimport _isNil from 'lodash/isNil'\nimport _has from 'lodash/has'\n\nconst InternalVis = ({ formik, attributt, children }) => {\n\tconst isChecked = (values, attributtPath) => {\n\t\t// Ignore if values ikke er satt\n\t\tif (_isNil(attributtPath)) return false\n\n\t\t// Strings er akseptert, men konverter til Array\n\t\tif (!Array.isArray(attributtPath)) attributtPath = [attributtPath]\n\n\t\treturn attributtPath.some(v => _has(values, v))\n\t}\n\n\treturn isChecked(formik.values, attributt) && children\n}\n\nexport const Vis = connect(InternalVis)\n","import React from 'react'\nimport { useToggle } from 'react-use'\nimport cn from 'classnames'\nimport Hjelpetekst from '~/components/hjelpetekst'\nimport Icon from '~/components/ui/icon/Icon'\nimport ExpandButton from '~/components/ui/button/ExpandButton'\nimport LinkButton from '~/components/ui/button/LinkButton/LinkButton'\n\nimport './Panel.less'\n\nexport default function Panel({\n\tstartOpen = false,\n\thasErrors = false,\n\theading = 'Panel',\n\tcontent,\n\tchildren,\n\tcheckAttributeArray,\n\tuncheckAttributeArray,\n\tinformasjonstekst,\n\ticonType\n}) {\n\tconst [isOpen, toggleOpen] = useToggle(startOpen)\n\n\tconst panelClass = cn('dolly-panel', {\n\t\t'dolly-panel-open': isOpen\n\t})\n\n\tconst renderContent = children ? children : content\n\n\tconst check = e => {\n\t\te.stopPropagation()\n\t\tcheckAttributeArray()\n\t}\n\n\tconst uncheck = e => {\n\t\te.stopPropagation()\n\t\tuncheckAttributeArray()\n\t}\n\n\treturn (\n\t\t<div className={panelClass}>\n\t\t\t<div className=\"dolly-panel-heading\" onClick={toggleOpen}>\n\t\t\t\t{iconType && <Icon size={45} kind={iconType} className=\"header-icon\" />}\n\t\t\t\t<h2>{heading}</h2>\n\n\t\t\t\t{informasjonstekst && (\n\t\t\t\t\t<Hjelpetekst hjelpetekstFor={heading}>{informasjonstekst}</Hjelpetekst>\n\t\t\t\t)}\n\t\t\t\t{hasErrors && (\n\t\t\t\t\t<div className=\"dolly-panel-heading_error\">\n\t\t\t\t\t\t<Icon size={16} kind=\"report-problem-triangle\" />\n\t\t\t\t\t\tFeil i felter\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<span className=\"dolly-panel-heading_buttons\">\n\t\t\t\t\t{checkAttributeArray && <LinkButton text=\"Velg alle\" onClick={check} />}\n\t\t\t\t\t{uncheckAttributeArray && <LinkButton text=\"Fjern alle\" onClick={uncheck} />}\n\t\t\t\t\t<ExpandButton expanded={isOpen} onClick={toggleOpen} />\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t{isOpen && <div className=\"dolly-panel-content\">{renderContent}</div>}\n\t\t</div>\n\t)\n}\n","import * as React from 'react'\n// @ts-ignore\nimport { v4 as uuid } from 'uuid'\nimport NavHjelpeTekst from 'nav-frontend-hjelpetekst'\nimport Logger from '../../logger'\nimport { ThumbsRating } from '../rating'\nimport { PopoverOrientering } from 'nav-frontend-popover'\n\ninterface Props {\n\thjelpetekstFor: string\n\tchildren: React.ReactNode\n\ttype?: PopoverOrientering\n}\n\nexport class Hjelpetekst extends React.Component<Props> {\n\tuuid: string\n\n\tconstructor(props: Props) {\n\t\tsuper(props)\n\t\tthis.uuid = uuid()\n\t}\n\n\trender() {\n\t\tconst { children, hjelpetekstFor, type } = this.props\n\t\tconst onClick = (e: React.MouseEvent<HTMLDivElement>): void => {\n\t\t\te.stopPropagation()\n\t\t\tLogger.log({\n\t\t\t\tevent: `Trykk på hjelpetekst for: ${hjelpetekstFor}`,\n\t\t\t\tuuid: this.uuid\n\t\t\t})\n\t\t}\n\n\t\treturn (\n\t\t\t<div onClick={onClick}>\n\t\t\t\t<NavHjelpeTekst type={type}>\n\t\t\t\t\t{children}\n\t\t\t\t\t<ThumbsRating\n\t\t\t\t\t\tratingFor={`Hjelpetekst for ${hjelpetekstFor}`}\n\t\t\t\t\t\tlabel=\"Svarte teksten på spørsmålet ditt?\"\n\t\t\t\t\t/>\n\t\t\t\t</NavHjelpeTekst>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import { Hjelpetekst } from './Hjelpetekst'\n\nexport default Hjelpetekst\n","import React from 'react'\nimport cn from 'classnames'\nimport _isNil from 'lodash/isNil'\nimport _isEmpty from 'lodash/isEmpty'\nimport styled from 'styled-components'\n\nconst StyledLabel = styled.label`\n\tfont-size: 0.75em;\n\ttext-transform: uppercase;\n`\n\nexport const Label = ({ name, label, feil, containerClass, children }) => {\n\tconst wrapClass = cn('skjemaelement', containerClass, {\n\t\terror: Boolean(feil && !_isEmpty(feil.feilmelding)),\n\t\t'label-offscreen': _isNil(label)\n\t})\n\n\treturn (\n\t\t<div className={wrapClass}>\n\t\t\t<StyledLabel htmlFor={name} className=\"skjemaelement__label\">\n\t\t\t\t{label}\n\t\t\t</StyledLabel>\n\t\t\t{children}\n\t\t\t{feil && !_isEmpty(feil.feilmelding) && (\n\t\t\t\t<div role=\"alert\" aria-live=\"assertive\">\n\t\t\t\t\t<div className=\"skjemaelement__feilmelding\">{feil.feilmelding}</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import * as Yup from 'yup'\nimport _isUndefined from 'lodash/isUndefined'\nimport { yupToFormErrors } from 'formik'\nimport _isString from 'lodash/isString'\nimport Formatters from '~/utils/DataFormatter'\nimport { isDate } from 'date-fns'\n\n/*\nFor custom validation der vi kan bruke f.eks. context.\n*/\nexport const validate = async (values, schema) => {\n\tif (!schema) return\n\ttry {\n\t\tawait schema.validate(values, { abortEarly: false, context: values })\n\t\treturn {}\n\t} catch (err) {\n\t\tif (err.name === 'ValidationError') {\n\t\t\treturn yupToFormErrors(err)\n\t\t} else {\n\t\t\tconsole.info('Validation error')\n\t\t\tthrow err\n\t\t}\n\t}\n}\n\n/**\n * Valideringsmeldinger\n */\nexport const messages = {\n\trequired: 'Feltet er påkrevd'\n}\n\n// Dato som kommer fra Maler er av typen String\nexport const requiredDate = Yup.mixed().test('reqDate', messages.required, value => {\n\tlet _value = value\n\tif (_isString(value)) _value = Formatters.parseDate(_value)\n\treturn isDate(_value)\n})\nexport const requiredString = Yup.string().required(messages.required)\nexport const requiredBoolean = Yup.boolean().required(messages.required)\nexport const requiredNumber = Yup.number().required(messages.required)\n\nexport const ifPresent = (key, schema) =>\n\tYup.mixed().when(key, {\n\t\tis: v => !_isUndefined(v),\n\t\tthen: schema,\n\t\totherwise: Yup.mixed().notRequired()\n\t})\n\nexport const ifKeyHasValue = (key, values, schema) =>\n\tYup.mixed().when(key, {\n\t\tis: v => values.includes(v),\n\t\tthen: schema,\n\t\totherwise: Yup.mixed().notRequired()\n\t})\n","import { connect } from 'react-redux'\nimport { getKodeverkSelector, fetchKodeverk } from '~/ducks/kodeverk'\nimport { KodeverkWrapper } from './Kodeverk'\n\n// Koble til kodeverk\nconst mapStateToProps = (state, ownProps) => ({\n\tkodeverk: getKodeverkSelector(state, ownProps.navn)\n})\n\nconst mapDispatchToProps = { fetchKodeverk }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KodeverkWrapper)\n","import { useEffect } from 'react'\n\nexport const KodeverkWrapper = ({ navn, value, kodeverk, fetchKodeverk, children }) => {\n\tuseEffect(() => {\n\t\tfetchKodeverk(navn)\n\t})\n\n\tlet verdi\n\n\tif (kodeverk && value) {\n\t\tverdi = kodeverk.find(v => v.value === value)\n\t}\n\n\treturn children(kodeverk, verdi)\n}\n","import * as React from 'react'\nimport Button from './Button'\n\ninterface ExpandButtonProps {\n\tonClick: () => void\n\texpanded?: boolean\n}\n\nexport default function ExpandButton({ expanded = false, onClick }: ExpandButtonProps) {\n\tconst iconType = expanded ? 'chevron-up' : 'chevron-down'\n\treturn <Button iconSize={14} kind={iconType} onClick={onClick} />\n}\n","import * as React from 'react'\nimport { useState } from 'react'\nimport Logger from '../../logger'\nimport { Rating } from '../../logger/types'\n// @ts-ignore\nimport Icon from '~/components/ui/icon/Icon'\nimport NavButton from '../ui/button/NavButton/NavButton'\nimport './ThumbsRating.less'\nimport styled from 'styled-components'\n\ninterface ThumbsRatingProps {\n\tlabel: string\n\tratingFor: string\n\tuuid?: string\n\tonClick?: (rating: Rating) => void\n\tchildren?: React.ReactNode\n}\n\nconst ThumbsButton = styled(NavButton)`\n\t&& {\n\t\tborder: 0;\n\t\tpadding: 0 8px;\n\t\tborder-radius: 50%;\n\t\tmargin-left: 7px;\n\t}\n\t&& :focus {\n\t\toutline: none;\n\t\tbox-shadow: 0 0 2px @color-nav-black;\n\t}\n`\n\ninterface IconButton {\n\tclassName?: string\n}\n\nconst ThumpsUp = ({ className }: IconButton) => (\n\t// @ts-ignore\n\t<Icon className={className} kind=\"ThumbsUp\" title=\"tommel opp\" size={24} />\n)\nconst ThumpsDown = ({ className }: IconButton) => (\n\t// @ts-ignore\n\t<Icon className={className} kind=\"ThumbsDown\" title=\"tommel ned\" size={24} />\n)\n\nexport const ThumbsRating = ({ label, ratingFor, onClick, uuid, children }: ThumbsRatingProps) => {\n\tconst [rated, setRated] = useState(false)\n\n\tconst _onClick = (rating: Rating) => {\n\t\tif (onClick) {\n\t\t\tonClick(rating)\n\t\t}\n\t\tLogger.log({ event: `Vurdering av: ${ratingFor}`, rating: rating, uuid: uuid })\n\t\tsetRated(true)\n\t}\n\n\tif (rated) {\n\t\tif (children) {\n\t\t\treturn <>{children}</>\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"thumbs-rating flexbox--all-center\">\n\t\t\t\t<p>Takk for din tilbakemelding.</p>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn (\n\t\t<div className=\"thumbs-rating flexbox--all-center\">\n\t\t\t<p>{label}</p>\n\t\t\t<ThumbsButton form=\"kompakt\" onClick={() => _onClick(Rating.Positive)}>\n\t\t\t\t<ThumpsUp className=\"thumbs-rating__icon thumbs-rating__icon__left\" />\n\t\t\t</ThumbsButton>\n\t\t\t<ThumbsButton form=\"kompakt\" onClick={() => _onClick(Rating.Negative)}>\n\t\t\t\t<ThumpsDown className=\"thumbs-rating__icon thumbs-rating__icon__right\" />\n\t\t\t</ThumbsButton>\n\t\t</div>\n\t)\n}\n","import React, { useEffect, useState } from 'react'\nimport Loading from './Loading'\n\ninterface LoadableComponentProps {\n\tonFetch: any\n\trender: (data: any, feilmelding: Feilmelding) => JSX.Element\n\tlabel?: string\n}\n\nexport type Feilmelding = {\n\tfeilmelding?: string\n}\n\nconst LoadableComponent = ({ onFetch, render, label }: LoadableComponentProps) => {\n\tconst [loading, setLoading] = useState(true)\n\tconst [error, setError] = useState()\n\tconst [data, setData] = useState()\n\tuseEffect(() => {\n\t\tonFetch()\n\t\t\t.then((response: any) => {\n\t\t\t\tsetData(response)\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t\t\t.catch((error: any) => {\n\t\t\t\tsetError(error)\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t}, [])\n\n\tif (loading) {\n\t\treturn <Loading label={label} />\n\t}\n\tconst feilmelding: Feilmelding = error\n\t\t? {\n\t\t\t\tfeilmelding:\n\t\t\t\t\t'Noe gikk galt ved henting av valg. Ta kontakt med team Dolly hvis ikke en refresh av siden hjelper.'\n\t\t  }\n\t\t: null\n\treturn render(data, feilmelding)\n}\nexport default LoadableComponent\n","import React from 'react'\n\nimport './LinkButton.less'\n\nexport default function LinkButton({ text, onClick }) {\n\tconst handleClick = event => {\n\t\tevent.preventDefault()\n\t\tonClick(event)\n\t}\n\n\treturn (\n\t\t<a href=\"#\" className=\"dolly-link-button\" onClick={handleClick}>\n\t\t\t{text}\n\t\t</a>\n\t)\n}\n","import React from 'react'\nimport SubOverskrift from '~/components/ui/subOverskrift/SubOverskrift'\nimport { TitleValue } from '~/components/ui/titleValue/TitleValue'\nimport Formatters from '~/utils/DataFormatter'\nimport Loading from '~/components/ui/loading/Loading'\nimport { DollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport Panel from '~/components/ui/panel/Panel'\n\nconst Visning = ({ data }) => {\n\tif (!data) return null\n\treturn (\n\t\t<>\n\t\t\t<TitleValue title=\"Brukertype\" value={data.brukertype} />\n\t\t\t<TitleValue title=\"Servicebehov\" value={data.servicebehov} />\n\t\t\t<TitleValue title=\"Inaktiv fra dato\" value={data.inaktiveringDato} />\n\t\t\t<TitleValue\n\t\t\t\ttitle=\"Automatisk innsending av meldekort\"\n\t\t\t\tvalue={data.automatiskInnsendingAvMeldekort}\n\t\t\t/>\n\n\t\t\t{data.aap115?.[0] && (\n\t\t\t\t<DollyFieldArray header=\"11.5 vedtak\" data={data.aap115} nested>\n\t\t\t\t\t{(vedtak, idx) => (\n\t\t\t\t\t\t<React.Fragment key={idx}>\n\t\t\t\t\t\t\t<TitleValue title=\"Fra dato\" value={Formatters.formatDate(vedtak.fraDato)} />\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</DollyFieldArray>\n\t\t\t)}\n\n\t\t\t{data.aap?.[0] && (\n\t\t\t\t<DollyFieldArray header=\"AAP-UA vedtak\" data={data.aap} nested>\n\t\t\t\t\t{(vedtak, idx) => (\n\t\t\t\t\t\t<React.Fragment key={idx}>\n\t\t\t\t\t\t\t<TitleValue title=\"Fra dato\" value={Formatters.formatDate(vedtak.fraDato)} />\n\t\t\t\t\t\t\t<TitleValue title=\"Til dato\" value={Formatters.formatDate(vedtak.tilDato)} />\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</DollyFieldArray>\n\t\t\t)}\n\n\t\t\t{data.dagpenger?.[0] && (\n\t\t\t\t<DollyFieldArray header=\"Dagpenger vedtak\" data={data.dagpenger} nested>\n\t\t\t\t\t{(vedtak, idx) => (\n\t\t\t\t\t\t<React.Fragment key={idx}>\n\t\t\t\t\t\t\t<TitleValue title=\"Rettighet kode\" value={vedtak.rettighetKode} />\n\t\t\t\t\t\t\t<TitleValue title=\"Fra dato\" value={Formatters.formatDate(vedtak.fraDato)} />\n\t\t\t\t\t\t\t<TitleValue title=\"Til dato\" value={Formatters.formatDate(vedtak.tilDato)} />\n\t\t\t\t\t\t\t<TitleValue title=\"Mottatt dato\" value={Formatters.formatDate(vedtak.mottattDato)} />\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</DollyFieldArray>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport const ArenaVisning = ({ data, bestillinger, loading, useStandard = true }) => {\n\tif (loading) return <Loading label=\"Laster arena-data\" />\n\tif (!data) return false\n\n\tconst arenaBestillinger = bestillinger.filter(bestilling =>\n\t\tbestilling.data.hasOwnProperty('arenaforvalter')\n\t)\n\n\tconst visningData = {\n\t\tbrukertype: undefined,\n\t\tservicebehov: undefined,\n\t\tinaktiveringDato: undefined,\n\t\tautomatiskInnsendingAvMeldekort: undefined,\n\t\taap115: [],\n\t\taap: [],\n\t\tdagpenger: []\n\t}\n\n\t// Arenaforvalternen returnerer veldig lite informasjon, bruker derfor data fra bestillingen i tillegg\n\n\tfor (let bestilling of arenaBestillinger) {\n\t\tif (bestilling.data.arenaforvalter !== undefined) {\n\t\t\tfyllVisningData(bestilling, visningData)\n\t\t}\n\t}\n\treturn (\n\t\t<div>\n\t\t\t{useStandard && (\n\t\t\t\t<div>\n\t\t\t\t\t<SubOverskrift label=\"Arbeidsytelser\" iconKind=\"arena\" />\n\t\t\t\t\t<div className=\"person-visning_content\">\n\t\t\t\t\t\t<Visning data={visningData} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!useStandard && (\n\t\t\t\t<Panel heading=\"Registrerte arbeidsytelser\" iconType=\"arena\">\n\t\t\t\t\t<div className=\"person-visning\">\n\t\t\t\t\t\t<div className=\"person-visning_content\">\n\t\t\t\t\t\t\t<Visning data={visningData} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Panel>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nfunction fyllVisningData(bestilling, visningData) {\n\tconst {\n\t\tarenaBrukertype,\n\t\tkvalifiseringsgruppe,\n\t\tinaktiveringDato,\n\t\tautomatiskInnsendingAvMeldekort,\n\t\taap115,\n\t\taap,\n\t\tdagpenger\n\t} = bestilling.data.arenaforvalter\n\tif (!visningData.brukertype) {\n\t\tvisningData.brukertype =\n\t\t\tarenaBrukertype === 'MED_SERVICEBEHOV' ? 'Med servicebehov' : 'Uten servicebehov'\n\t}\n\tif (!visningData.servicebehov) {\n\t\tvisningData.servicebehov = servicebehovKodeTilBeskrivelse(kvalifiseringsgruppe)\n\t}\n\tif (!visningData.inaktiveringDato) {\n\t\tvisningData.inaktiveringDato = Formatters.formatDate(inaktiveringDato)\n\t}\n\tif (!visningData.automatiskInnsendingAvMeldekort) {\n\t\tvisningData.automatiskInnsendingAvMeldekort = Formatters.oversettBoolean(\n\t\t\tautomatiskInnsendingAvMeldekort\n\t\t)\n\t}\n\n\tif (aap115) visningData.aap115 = visningData.aap115.concat(aap115)\n\tif (aap) visningData.aap = visningData.aap.concat(aap)\n\tif (dagpenger) visningData.dagpenger = visningData.dagpenger.concat(dagpenger)\n}\n\nfunction servicebehovKodeTilBeskrivelse(value) {\n\tif (!value) return null\n\tswitch (value) {\n\t\tcase 'IKVAL':\n\t\t\treturn 'IKVAL - Standardinnsats'\n\t\tcase 'BFORM':\n\t\t\treturn 'BFORM - Situasjonsbestemt innsats'\n\t\tcase 'BATT':\n\t\t\treturn 'BATT - Spesielt tilpasset innsats'\n\t\tcase 'VARIG':\n\t\t\treturn 'VARIG - Varig tilpasset innsats'\n\t\tdefault:\n\t\t\treturn value\n\t}\n}\n","import React, { useEffect, useState } from 'react'\nimport Loading from './Loading'\nimport { AlertStripeFeil } from 'nav-frontend-alertstriper'\nimport { Hovedknapp as NavKnapp } from 'nav-frontend-knapper'\nimport styled from 'styled-components'\n\ninterface LoadableComponent<T> {\n\tonFetch: () => Promise<T>\n\trender: (data: T) => JSX.Element\n\tlabel?: string\n}\n\nconst Knapp = styled(NavKnapp)`\n\tmargin-top: 15px;\n\tdisplay: block;\n`\n\nconst Alert = styled(AlertStripeFeil)`\n\tmargin-bottom: 15px;\n\tmargin-right: 15px;\n`\n\nfunction LoadableComponentWithRetry<T>({ onFetch, render, label }: LoadableComponent<T>) {\n\tconst [loading, setLoading] = useState(true)\n\tconst [error, setError] = useState<boolean>(false)\n\tconst [data, setData] = useState<T>()\n\n\tconst callPromise = () => {\n\t\tsetLoading(true)\n\t\tsetError(false)\n\n\t\treturn onFetch()\n\t\t\t.then((response: T) => {\n\t\t\t\tsetData(response)\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tconsole.error(e)\n\t\t\t\tsetError(true)\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tcallPromise()\n\t}, [])\n\n\tif (loading) {\n\t\treturn <Loading label={label} />\n\t}\n\tif (error) {\n\t\treturn (\n\t\t\t<Alert>\n\t\t\t\tNoe gikk galt! Trykk på \"Prøv på nytt\" eller kontakt team Dolly.\n\t\t\t\t<Knapp\n\t\t\t\t\tform=\"kompakt\"\n\t\t\t\t\tonClick={event => {\n\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\tcallPromise()\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tPrøv på nytt\n\t\t\t\t</Knapp>\n\t\t\t</Alert>\n\t\t)\n\t}\n\n\treturn render(data)\n}\n\nexport default LoadableComponentWithRetry\n","import React from 'react'\nimport { useAsync } from 'react-use'\nimport Formatters from '~/utils/DataFormatter'\n\nexport default function TilgjengeligeMiljoer({ endepunkt, dollyEnvironments }) {\n\tif (!endepunkt) return false\n\n\tconst state = useAsync(async () => {\n\t\tconst response = await endepunkt()\n\t\treturn response\n\t}, [endepunkt])\n\n\tlet message = 'Laster tilgjengelige miljøer..'\n\n\tif (state.value && state.value.data) {\n\t\tmessage = Formatters.arrayToString(filterMiljoe(dollyEnvironments, state.value.data))\n\t} else if (state.error) {\n\t\tmessage = state.error.message\n\t}\n\n\treturn <span>{message}</span>\n}\n\nexport const filterMiljoe = (dollyMiljoe, utvalgteMiljoer) => {\n\tif (utvalgteMiljoer === null) return []\n\tconst dollyMiljoeArray = flatDollyMiljoe(dollyMiljoe)\n\n\t//Filtrerer bort de miljøene som er tilgjengelige for fagsystemene eller en mal,\n\t//men ikke Dolly per dags dato\n\treturn utvalgteMiljoer.filter(miljoe => dollyMiljoeArray.includes(miljoe))\n}\n\nconst flatDollyMiljoe = dollymiljoe => {\n\tconst miljoeArray = []\n\tObject.values(dollymiljoe).forEach(miljoeKat =>\n\t\tmiljoeKat.forEach(miljoe => miljoeArray.push(miljoe.id))\n\t)\n\treturn miljoeArray\n}\n","const texts = {\n\t// INNTEKTSTYPE\n\tinntektstype: 'Inntektstype',\n\tLOENNSINNTEKT: 'Lønnsinntekt',\n\tYTELSE_FRA_OFFENTLIGE: 'Ytelse fra offentige',\n\tPENSJON_ELLER_TRYGD: 'Pensjon eller trygd',\n\tNAERINGSINNTEKT: 'Næringsinntekt',\n\n\t// BOOLEANS\n\tinngaarIGrunnlagForTrekk: 'Inngår i grunnlag for trekk',\n\tutloeserArbeidsgiveravgift: 'Utløser arbeidsgiveravgift',\n\ttrue: 'Ja',\n\tfalse: 'Nei',\n\n\t// FORDEL\n\tfordel: 'Fordel',\n\tnaturalytelse: 'Naturalytelse',\n\tkontantytelse: 'Kontantytelse',\n\tutgiftsgodtgjoerelse: 'Utgiftsgodtgjørelse',\n\n\t// SKATTE- OG AVGIFTSEREGEL\n\tskatteOgAvgiftsregel: 'Skatte- og avgiftsregel',\n\tsvalbard: 'Svalbard',\n\tjanMayenOgBilandene: 'Jan Mayen og bilandene',\n\tsaerskiltFradragForSjoefolk: 'Særskilt fradrag for sjøfolk',\n\tveldedigEllerAllmennyttigOrganisasjon: 'Veldedig eller allmennyttig organisasjon',\n\tdagmammaIBarnetsHjem: 'Dagmamma i barnets hjem',\n\tloennsarbeidIHjemmet: 'Lønnsarbeid i hjemmet',\n\tnettoloenn: 'Nettolønn',\n\tnettoloennForSjoefolk: 'Nettolønn for sjøfolk',\n\tskattefriOrganisasjon: 'Skattefri organisasjon',\n\tkildeskattPaaPensjoner: 'Kildeskatt på pensjoner',\n\n\t// LAND\n\tskattemessigBosattILand: 'Skattemessig bosatt i land',\n\topptjeningsland: 'Opptjeningsland',\n\n\t// BESKRIVELSE LØNNSINNTEKT\n\tbeskrivelse: 'Beskrivelse',\n\tkostDoegn: 'Kost (døgn)',\n\tlosji: 'Losji',\n\tfastloenn: 'Fastlønn',\n\ttimeloenn: 'Timelønn',\n\tfastTillegg: 'Fast tillegg',\n\turegelmessigeTilleggKnyttetTilArbeidetTid: 'Uregelmessige tillegg knyttet til arbeidet tid',\n\thelligdagstillegg: 'Helligdagstillegg',\n\turegelmessigeTilleggKnyttetTilIkkeArbeidetTid:\n\t\t'Uregelmessige tillegg knyttet til ikke-arbeidet tid',\n\tbonus: 'Bonus',\n\tovertidsgodtgjoerelse: 'Overtidsgodtgjørelse',\n\tstyrehonorarOgGodtgjoerelseVerv: 'Styrehonorar og godtgjoerelse i forbindelse med verv',\n\tkommunalOmsorgsloennOgFosterhjemsgodtgjoerelse: 'Kommunal omsorgslønn og fosterhjemsgodtgjørelse',\n\tsluttvederlag: 'Sluttvederlag',\n\tferiepenger: 'Feriepenger',\n\tannet: 'Annet',\n\tikkeSkattepliktigLoennFraUtenlandskDiplomKonsulStasjon:\n\t\t'Ikke skattepliktig lønn, utenlandsk diplomatisk/konsulær stasjon',\n\tskattepliktigDelForsikringer: 'Skattepliktig del av forsikringer',\n\thyretillegg: 'Hyretillegg',\n\tbil: 'Bil',\n\tkostDager: 'Kost (dager)',\n\trentefordelLaan: 'Rentefordel lån',\n\tbolig: 'Bolig',\n\tfondForIdrettsutoevere: 'Fond for idrettsutøvere',\n\tbonusFraForsvaret: 'Bonus fra forsvaret',\n\telektroniskKommunikasjon: 'Elektronisk kommunikasjon',\n\topsjoner: 'Opsjoner',\n\taksjerGrunnfondsbevisTilUnderkurs: 'Aksjer/grunnfondsbevis til underkurs',\n\tloennForBarnepassIBarnetsHjem: 'Lønn for barnepass i barnets hjem',\n\tloennUtbetaltAvVeldedigEllerAllmennyttigInstitusjonEllerOrganisasjon:\n\t\t'Lønn utbetalt av veldedig/allmennyttig institusjon/organisasjon',\n\tloennTilPrivatpersonerForArbeidIHjemmet: 'Lønn til privatpersoner for arbeid i hjemmet',\n\tkostbesparelseIHjemmet: 'Kostbesparelse i hjemmet',\n\tsmusstillegg: 'Smusstillegg',\n\tkilometergodtgjoerelseBil: 'Kilometergodtgjørelse bil',\n\tfastBilgodtgjoerelse: 'Fast bilgodtgjørelse',\n\treiseKost: 'Reise kost',\n\treiseAnnet: 'Reise annet',\n\tbesoeksreiserHjemmetAnnet: 'Besøksreiser hjemmet annet',\n\tbesoeksreiserHjemmetKilometergodtgjoerelseBil: 'Besøksreiser hjemmet kilometergodtgjørelse bil',\n\tarbeidsoppholdKost: 'Arbeidsopphold kost',\n\tarbeidsoppholdLosji: 'Arbeidsopphold losji',\n\treiseLosji: 'Reise losji',\n\tstipend: 'Stipend',\n\tfriTransport: 'Fri transport',\n\tbedriftsbarnehageplass: 'Bedriftsbarnehageplass',\n\ttilskuddBarnehageplass: 'Tilskudd barnehageplass',\n\treiseKostMedOvernatting: 'Reise kost med overnatting',\n\treiseKostMedOvernattingPaaHotell: 'Reise kost med overnatting på hotell',\n\treiseNattillegg: 'Reise nattillegg',\n\treiseKostMedOvernattingPaaHotellBeordringUtover28Doegn:\n\t\t'Reise kost med overnatting på hotell beordring utover 28 døgn',\n\treiseKostUtenOvernatting: 'Reise kost uten overnatting',\n\tadministrativForpleining: 'Administrativ forpleining',\n\treiseKostMedOvernattingPaaHybelBrakkePrivat: 'Reise kost med overnatting på hybel/brakke/privat',\n\tlosjiEgenBrakkeCampingvogn: 'Losji egen brakke/campingvogn',\n\treiseKostMedOvernattingTilLangtransportsjaafoerForKjoeringIUtlandet:\n\t\t'Reise kost med overnatting, langtransportsjåfør i utlandet',\n\treiseKostMedOvernattingPaaPensjonat: 'Reise kost med overnatting på pensjonat',\n\tbesoeksreiserHjemmetKost: 'Besoeksreiser hjemmet kost',\n\tkilometergodtgjoerelseElBil: 'Kilometergodtgjørelse el-bil',\n\tkilometergodtgjoerelsePassasjertillegg: 'Kilometergodtgjørelse passasjertillegg',\n\tkilometergodtgjoerelseAndreFremkomstmidler: 'Kilometergodtgjørelse andre remkomstmidler',\n\tflyttegodtgjoerelse: 'Flyttegodtgjørelse',\n\tgodtgjoerelseSaeravtaleUtland: 'Godtgjørelse særavtale utland',\n\tovertidsmat: 'Overtidsmat',\n\tskattefriErstatning: 'Skattefri erstatning',\n\tloennUtenlandskArtist: 'Lønn utenlandsk artist',\n\tskattefrieUtbetalinger: 'Skattefrie utbetalinger',\n\tloennEtterDoedsfall: 'Lønn etter dødsfall',\n\tkapitalInntekt: 'Kapital inntekt',\n\tkompensasjonstilleggBolig: 'Kompensasjonstillegg bolig',\n\tberegnetSkatt: 'Beregnet skatt',\n\tinnbetalingTilUtenlandskPensjonsordning: 'Innbetaling til utenlandsk pensjonsordning',\n\tyrkebilTjenestligbehovListepris: 'Yrkebil tjenestligbehov listepris',\n\tyrkebilTjenestligbehovKilometer: 'Yrkebil tjenestligbehov kilometer',\n\tloennTilVergeFraFylkesmannen: 'Lønn til verge fra fylkesmannen',\n\ttrekkILoennForFerie: 'Trekk i lønn for ferie',\n\tbetaltUtenlandskSkatt: 'Betalt utenlandsk skatt',\n\thonorarAkkordProsentProvisjon: 'Honorar/akkord/prosent/provisjon',\n\tskattepliktigPersonalrabatt: 'Skattepliktig personalrabatt',\n\ttips: 'Tips',\n\n\t// BESKRIVELSE YTELSE FRA OFFENTLIGE\n\tforeldrepenger: 'Foreldrepenger',\n\tventeloenn: 'Ventelønn',\n\tdagpengerTilFiskerSomBareHarHyre: 'Dagpenger til fisker som bare har hyre',\n\tsykepengerTilFiskerSomBareHarHyre: 'Sykepenger til fisker som bare har hyre',\n\tdagpengerVedArbeidsloeshet: 'Dagpenger ved arbeidsløshet',\n\tsykepenger: 'Sykepenger',\n\tunderholdsbidragTilBarn: 'Underholdsbidrag til barn',\n\tskattefrieTilleggsstoenader: 'Skattefrie tilleggsstønader',\n\tarbeidsavklaringspenger: 'Arbeidsavklaringspenger',\n\tsvangerskapspenger: 'Svangerskapspenger',\n\tskattefriStoenadTilBarnetilsyn: 'Skattefri stønad til barnetilsyn',\n\tovergangsstoenadTilEnsligMorEllerFarSomBegynteAaLoepe1April2014EllerSenere:\n\t\t'Overgangsstønad enslig mor eller far, fra 1. april 2014 eller senere',\n\tufoeretrygd: 'Ufoeretrygd',\n\tektefelletilleggUfoeretrygd: 'Ektefelletillegg uføretrygd',\n\tufoereytelseEtteroppgjoer: 'Uføreytelse etteroppgjør',\n\n\t// BESKRIVELSE PENSJON ELLER TRYGD\n\tpensjonOgLivrenterIArbeidsforhold: 'Pensjon og livrenter i arbeidsforhold',\n\tetterloennOgEtterpensjon: 'Etterlønn og etterpensjon',\n\tpensjonIDoedsmaaneden: 'Pensjon i dødsmåneden',\n\tfoederaad: 'Føderåd',\n\talderspensjon: 'Alderspensjon',\n\tufoerepensjon: 'Uførepensjon',\n\tektefelletillegg: 'Ektefelletillegg',\n\tbarnepensjon: 'Barnepensjon',\n\tovergangsstoenad: 'Overgangsstønad',\n\tavtalefestetPensjon: 'Avtalefestet pensjon',\n\tbarnepensjonFraAndreEnnFolketrygden: 'Barnepensjon fra andre enn folketrygden',\n\tintroduksjonsstoenad: 'Introduksjonsstønad',\n\tsupplerendeStoenadTilPersonKortBotidNorge: 'Supplerende stønad til person med kort botid i Norge',\n\tkvalifiseringstoenad: 'Kvalifiseringstønad',\n\tnyeLivrenterIArbeidsforholdOgLivrenterFortsettelsesforsikringer:\n\t\t'Nye livrenter i arb.forhold og livrenter (fortsettelsesforsikringer)',\n\tkrigspensjon: 'Krigspensjon',\n\tetterlattepensjon: 'Etterlattepensjon',\n\tnyAvtalefestetPensjonPrivatSektor: 'Ny avtalefestet pensjon privat sektor',\n\tufoerepensjonFraAndreEnnFolketrygden: 'Uførepensjon fra andre enn folketrygden',\n\tunderholdsbidragTilTidligereEktefelle: 'Underholdsbidrag til tidligere ektefelle',\n\tovergangsstoenadTilEnsligMorEllerFarSomBegynteAaLoepe31Mars2014EllerTidligere:\n\t\t'Overgangsstønad enslig mor eller far, fra 31. mars 2014 eller tidligere',\n\tovergangsstoenadTilGjenlevendeEktefelle: 'Overgangsstønad til gjenlevende ektefelle',\n\tipaEllerIpsEngangsutbetaling: 'Ipa eller ips engangsutbetaling',\n\tipaEllerIpsUfoerepensjon: 'Ipa eller ips uførepensjon',\n\tipaEllerIpsBarnepensjon: 'Ipa eller ips barnepensjon',\n\tipaEllerIpsPeriodiskeYtelser: 'Ipa eller ips periodiske ytelser',\n\tengangsutbetalingInnskuddspensjon: 'Engangsutbetaling innskuddspensjon',\n\tufoereytelseEtteroppgjoerFraAndreEnnFolketrygden:\n\t\t'Uføreytelse etteroppgjør fra andre enn folketrygden',\n\tetterloenn: 'Etterlønn',\n\n\t// BESKRIVELSE NÆRINGSINNTEKT\n\tvederlagDagmammaIEgetHjem: 'Vederlag til dagmamma i eget hjem',\n\tsykepengerTilDagmamma: 'Sykepenger til dagmamma',\n\tsykepengerTilJordOgSkogbrukere: 'Sykepenger til jord- og skogbrukere',\n\tvederlag: 'Vederlag',\n\tdagpengerTilFisker: 'Dagpenger til fisker',\n\tsykepengerTilFisker: 'Sykepenger til fisker',\n\tlottKunTrygdeavgift: 'Lott det skal beregnes trygdeavgift av',\n\n\t// TILLEGGSINFORMASJON\n\ttilleggsinformasjon: 'Tilleggsinformasjon',\n\ttilleggsinformasjonstype: 'Tilleggsinformasjonstype',\n\tBilOgBaat: 'Bil og båt',\n\tbilOgBaat: 'Bil og båt',\n\tBonusFraForsvaret: 'Bonus fra forsvaret',\n\tbonusFraForsvaret: 'Bonus fra forsvaret',\n\tDagmammaIEgenBolig: 'Dagmamma i egen bolig',\n\tdagmammaIEgenBolig: 'Dagmamma i egen bolig',\n\tPeriode: 'Etterbetalingsperiode',\n\tperiode: 'Etterbetalingsperiode',\n\tetterbetalingsperiode: 'Etterbetalingsperiode',\n\tNorskKontinentalsokkel: 'Inntekt på norsk kontinentalsokkel',\n\tnorskKontinentalsokkel: 'Inntekt på norsk kontinentalsokkel',\n\tLivrente: 'Livrente',\n\tlivrente: 'Livrente',\n\tLottOgPartInnenFiske: 'Lott og part',\n\tlottOgPartInnenFiske: 'Lott og part',\n\tNettoloennsordning: 'Nettolønn',\n\tnettoloennsordning: 'Nettolønn',\n\tAldersUfoereEtterlatteAvtalefestetOgKrigspensjon: 'Pensjon',\n\taldersUfoereEtterlatteAvtalefestetOgKrigspensjon: 'Pensjon',\n\tpensjon: 'Pensjon',\n\tReiseKostOgLosji: 'Reise kost og losji',\n\treiseKostOgLosji: 'Reise kost og losji',\n\tSpesielleInntjeningsforhold: 'Spesielle inntjeningsforhold',\n\tspesielleInntjeningsforhold: 'Spesielle inntjeningsforhold',\n\tUtenlandskArtist: 'Utenlandsk artist',\n\tutenlandskArtist: 'Utenlandsk artist',\n\n\t// ÅR\n\taaretUtbetalingenGjelderFor: 'Året utbetalingen gjelder for',\n\n\t// INNTJENINGSFORHOLD\n\tinntjeningsforhold: 'Inntjeningsforhold',\n\tloennVedKonkursEllerStatsgarantiOsv: 'Lønn ved konkurs eller statsgaranti, osv',\n\tutenlandskeSjoefolkSomIkkeErSkattepliktig: 'Utenlandske sjøfolk som ikke er skattepliktig',\n\tloennUtbetaltFraDenNorskeStatOpptjentIUtlandet:\n\t\t'Lønn utbetalt fra den norske stat opptjent i utlandet',\n\tloennVedArbeidsmarkedstiltak: 'Lønn ved arbeidsmarkedstiltak',\n\thyreTilMannskapPaaFiskeSmaahvalfangstOgSelfangstfartoey:\n\t\t'Hyre til mannskap på fiske-, smaahvalfangst-, og selfangstfartøy',\n\tskattefriArbeidsinntektBarnUnderTrettenAar: 'Skattefri arbeidsinntekt barn under tretten år',\n\tloennOgAnnenGodtgjoerelseSomIkkeErSkattepliktig:\n\t\t'Lønn og annen godtgjørelse som ikke er skattepliktig',\n\tstatsansattUtlandet: 'Statsansatt utlandet',\n\n\t// PERSONTYPE\n\tpersontype: 'Persontype',\n\tsokkelarbeider: 'Sokkelarbeider',\n\tutlendingMedOppholdINorge: 'Utlending med opphold i Norge',\n\tnorskPendler: 'Norsk pendler',\n\tutenlandskPendler: 'Utenlandsk pendler',\n\tutenlandskPendlerMedSkattekortUtenStandardFradrag:\n\t\t'Utenlandsk pendler med skattekort uten standard fradrag',\n\n\t// PERIODER\n\tetterbetalingsperiodeStart: 'Etterbetalingsperiode start',\n\tetterbetalingsperiodeSlutt: 'Etterbetalingsperiode slutt',\n\tpensjonTidsromStart: 'Pensjon tidsrom start',\n\tpensjonTidsromSlutt: 'Pensjon tidsrom slutt',\n\n\t// ANNET\n\tantall: 'Antall',\n\tgrunnpensjonsbeloep: 'Grunnpensjonsbeløp',\n\ttilleggspensjonsbeloep: 'Tilleggspensjonsbeløp',\n\tufoeregrad: 'Uføregrad',\n\tpensjonsgrad: 'Pensjonsgrad',\n\theravEtterlattepensjon: 'Herav etterlattepensjon'\n}\n\nexport default key => (texts[key] ? texts[key] : key)\n","import * as React from 'react'\nimport './Enhetstre.less'\nimport { OrgTree } from '~/components/enhetstre/OrgTree'\n\ntype NodeProps<T> = {\n\tenhet: OrgTree<T>\n\thasChildren: boolean\n\tisSelected: boolean\n\tonNodeClick: (id: string) => void\n}\n\nexport function Node<T>(props: NodeProps<T>) {\n\tconst className = props.hasChildren\n\t\t? props.isSelected\n\t\t\t? 'rectangle-corner-selected'\n\t\t\t: 'rectangle-corner'\n\t\t: props.isSelected\n\t\t? 'rectangle-selected'\n\t\t: 'rectangle'\n\n\treturn (\n\t\t<div onClick={() => props.onNodeClick(props.enhet.getId())} className={className}>\n\t\t\t{props.enhet.getName()}\n\t\t</div>\n\t)\n}\n","import * as React from 'react'\nimport { Node } from './Node'\nimport './Enhetstre.less'\nimport { Org, OrgTree } from '~/components/enhetstre/OrgTree'\n\ntype EnhetstreProps<T extends Org<T>> = {\n\tenheter: OrgTree<T>[]\n\tselectedEnhet: string\n\tonNodeClick: Function\n\tlevel?: number\n}\n\nexport function Enhetstre<T>(props: EnhetstreProps<T>) {\n\tconst hasChildren = (enhet: OrgTree<T>) => {\n\t\treturn enhet.getUnderenheter().length > 0\n\t}\n\n\tconst isSelected = (currentEnhet: string, selected: string) => {\n\t\treturn currentEnhet === selected\n\t}\n\n\tconst level = props.level || 0\n\n\treturn (\n\t\t<div className=\"enhetstre-container\">\n\t\t\t{props.enheter.map((enhet, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={level + i} className=\"enheter\">\n\t\t\t\t\t\t<Node\n\t\t\t\t\t\t\tenhet={enhet}\n\t\t\t\t\t\t\thasChildren={hasChildren(enhet)}\n\t\t\t\t\t\t\tisSelected={isSelected(enhet.getId(), props.selectedEnhet)}\n\t\t\t\t\t\t\tonNodeClick={props.onNodeClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{hasChildren(enhet) && (\n\t\t\t\t\t\t\t<Enhetstre\n\t\t\t\t\t\t\t\tenheter={enhet.getUnderenheter()}\n\t\t\t\t\t\t\t\tselectedEnhet={props.selectedEnhet}\n\t\t\t\t\t\t\t\tonNodeClick={props.onNodeClick}\n\t\t\t\t\t\t\t\tlevel={props.enheter.length}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n","export type Org<T> = { underenheter?: T[]; organisasjonsnavn?: string }\nexport class OrgTree<T extends Org<T>> {\n\tprivate readonly organisajon: T\n\tprivate readonly level: string\n\tprivate readonly underenheter: OrgTree<T>[]\n\n\tconstructor(organisajon: T, level: string) {\n\t\tthis.organisajon = organisajon\n\t\tthis.level = level\n\n\t\tconst createId = (level: string, index: number): string =>\n\t\t\tlevel === '0' ? '' + (index + 1) : level + '.' + (index + 1)\n\n\t\tthis.underenheter =\n\t\t\torganisajon.underenheter?.map((value, index) => new OrgTree(value, createId(level, index))) ||\n\t\t\t[]\n\t}\n\n\tgetName() {\n\t\tif (this.organisajon.organisasjonsnavn) {\n\t\t\treturn this.organisajon.organisasjonsnavn\n\t\t}\n\n\t\treturn this.level === '0' ? 'Organisasjon' : `Underenhet ${this.level}`\n\t}\n\n\tgetId() {\n\t\treturn this.level\n\t}\n\n\tgetUnderenheter() {\n\t\treturn this.underenheter\n\t}\n\n\tfind(id: string): T | null {\n\t\tif (this.level === id) {\n\t\t\treturn this.organisajon\n\t\t}\n\t\treturn this.underenheter.map(value => value.find(id)).find(value => value != null)\n\t}\n}\n","import _get from 'lodash/get'\n\nexport const statuser = {\n\tENKE: {\n\t\tlabel: 'Enke/-mann',\n\t\tvalue: 'ENKE'\n\t},\n\tGIFT: {\n\t\tlabel: 'Gift',\n\t\tvalue: 'GIFT'\n\t},\n\tGJPA: {\n\t\tlabel: 'Gjenlevende partner',\n\t\tvalue: 'GJPA'\n\t},\n\tREPA: {\n\t\tlabel: 'Registrert partner',\n\t\tvalue: 'REPA'\n\t},\n\tSAMB: {\n\t\tlabel: 'Samboer',\n\t\tvalue: 'SAMB'\n\t},\n\tSEPR: {\n\t\tlabel: 'Separert',\n\t\tvalue: 'SEPR'\n\t},\n\tSEPA: {\n\t\tlabel: 'Separert partner',\n\t\tvalue: 'SEPA'\n\t},\n\tSKIL: {\n\t\tlabel: 'Skilt',\n\t\tvalue: 'SKIL'\n\t},\n\tSKPA: {\n\t\tlabel: 'Skilt partner',\n\t\tvalue: 'SKPA'\n\t}\n}\n\n// Gyldige statuser før oppretting av nytt forhold\nexport const gyldigNesteStatus = {\n\tinit: ['GIFT', 'REPA', 'SAMB'],\n\tSAMB: ['GIFT', 'REPA', 'SAMB'],\n\tGIFT: ['ENKE', 'SEPR', 'SKIL'],\n\tREPA: ['GJPA', 'SEPA', 'SKPA'],\n\tSEPR: ['GIFT', 'SKIL', 'ENKE'],\n\tSEPA: ['REPA', 'SKPA', 'GJPA'],\n\tALLE: ['ENKE', 'GIFT', 'GJPA', 'REPA', 'SAMB', 'SEPR', 'SEPA', 'SKIL', 'SKPA']\n}\n\n// Gyldige statuser før oppretting av ny partner\nexport const gyldigSisteStatus = ['ENKE', 'SKIL', 'GJPA', 'SKPA', 'SAMB']\n\n// Hjelpefunksjoner for uthenting\nconst sisteSivilstandKode = sivilstander =>\n\tsivilstander.length > 1 ? sivilstander[sivilstander.length - 2].sivilstand : null\n\nexport const nesteGyldigStatuser = sivilstander => {\n\tconst kode = sisteSivilstandKode(sivilstander)\n\tconst nesteOpts = gyldigNesteStatus[kode] || gyldigNesteStatus.init\n\treturn nesteOpts.map(statusKode => statuser[statusKode])\n}\n\nexport const erOpprettNyPartnerGyldig = kode => gyldigSisteStatus.includes(kode)\n\nexport const tomSisteSivilstand = (formikBag, sivilstandBasePath) => {\n\tconst sivilstander = _get(formikBag.values, sivilstandBasePath, [])\n\tif (sivilstander.length < 1) return false\n\n\tconst antallSivilstander = sivilstander.length\n\treturn sivilstander[antallSivilstander - 1].sivilstand.length < 1\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport './DollyKjede.less'\n\nexport interface KjedeItemProps {\n\tindex: number\n\tselected: boolean\n\tdisabled: boolean\n\ttext: string\n\tonClick: (page: number) => void\n}\n\nconst Button = styled.button`\n\tbackground: transparent;\n\ttext-decoration: ${p => p.style.textDecoration};\n\tcursor: ${p => p.style.cursor};\n\tborder: none;\n\tfont-size: 15px;\n\tpadding: 0 9px 0 9px;\n`\n\nconst disabledText = 'Lås opp lenkede måneder for å gjøre endringer på spesifikk måned'\n\nexport default ({ index, selected, disabled, text, onClick }: KjedeItemProps) => {\n\tconst textColor = () => {\n\t\tif (selected) {\n\t\t\treturn 'color-black'\n\t\t} else return disabled ? 'color-grey' : 'color-lightblue'\n\t}\n\n\tconst style = {\n\t\tcursor: selected || disabled ? 'auto' : 'pointer',\n\t\tclassName: textColor(),\n\t\ttextDecoration: selected ? 'none' : 'underline'\n\t}\n\n\treturn (\n\t\t<Button\n\t\t\tdisabled={disabled}\n\t\t\tonClick={() => onClick(index)}\n\t\t\tstyle={style}\n\t\t\tclassName={style['className']}\n\t\t\ttitle={disabled ? disabledText : null}\n\t\t>\n\t\t\t{text}\n\t\t</Button>\n\t)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Icon from '~/components/ui/icon/Icon'\n\nexport interface Props {\n\tleft: boolean\n\tdisabled: boolean\n\tonClick: (page: number) => void\n}\n\nconst ArrowButton = styled.button`\n\tbackground: transparent;\n\tcursor: ${p => (p.disabled ? 'auto' : 'pointer')};\n\tborder: none;\n\tfill: ${p => (p.disabled ? 'grey' : 'black')};\n`\n\nexport default ({ left, disabled, onClick }: Props) => {\n\tconst paginationValue = left ? -1 : 1\n\n\treturn (\n\t\t<ArrowButton disabled={disabled} onClick={() => onClick(paginationValue)}>\n\t\t\t<Icon size={14} kind={left ? 'arrow-left' : 'arrow-right'} />\n\t\t</ArrowButton>\n\t)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport KjedeItem from '~/components/dollyKjede/KjedeItem'\nimport ArrowButton from '~/components/dollyKjede/ArrowButton'\nimport './DollyKjede.less'\n\nexport interface Props {\n\tselectedIndex: number\n\tobjectList: string[]\n\tcenterIndices: number[]\n\tdisabled: boolean\n\thandlePagination: (page: number) => void\n\thandleClick: (page: number) => void\n}\n\nconst PaginationContainer = styled.div`\n\tborder-radius: 2px;\n\tmargin: 2px;\n\tpadding: 9px 7px 7px 7px;\n\twidth: 100%;\n`\n\nconst PaginationWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n`\n\nconst Separator = styled.div`\n\tfont-weight: bold;\n\tmargin: 0 20px 0 20px;\n\tcolor: ${props => props.color};\n`\n\nexport default ({\n\tselectedIndex,\n\tobjectList,\n\tcenterIndices,\n\tdisabled,\n\thandlePagination,\n\thandleClick\n}: Props) => {\n\treturn (\n\t\t<PaginationContainer className={'background-color-bg-divider'}>\n\t\t\t<PaginationWrapper>\n\t\t\t\t<ArrowButton\n\t\t\t\t\tleft={true}\n\t\t\t\t\tdisabled={disabled || centerIndices.length == 0 || centerIndices[0] == 1}\n\t\t\t\t\tonClick={handlePagination}\n\t\t\t\t/>\n\t\t\t\t{objectList.length > 0 && (\n\t\t\t\t\t<KjedeItem\n\t\t\t\t\t\tindex={0}\n\t\t\t\t\t\tselected={selectedIndex === 0}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\ttext={objectList[0]}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{centerIndices.length != 0 && centerIndices[0] != 1 && (\n\t\t\t\t\t<Separator color={disabled ? 'grey' : 'black'}>...</Separator>\n\t\t\t\t)}\n\t\t\t\t{centerIndices.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<KjedeItem\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tindex={item}\n\t\t\t\t\t\t\tselected={selectedIndex == item}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\ttext={objectList[item]}\n\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t\t{centerIndices.length != 0 &&\n\t\t\t\t\tcenterIndices[centerIndices.length - 1] != objectList.length - 2 && (\n\t\t\t\t\t\t<Separator color={disabled ? 'grey' : 'black'}>...</Separator>\n\t\t\t\t\t)}\n\t\t\t\t{objectList.length > 1 && (\n\t\t\t\t\t<KjedeItem\n\t\t\t\t\t\tindex={objectList.length - 1}\n\t\t\t\t\t\tselected={selectedIndex == objectList.length - 1}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\ttext={objectList[objectList.length - 1]}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<ArrowButton\n\t\t\t\t\tleft={false}\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tdisabled ||\n\t\t\t\t\t\tcenterIndices.length == 0 ||\n\t\t\t\t\t\tcenterIndices[centerIndices.length - 1] == objectList.length - 2\n\t\t\t\t\t}\n\t\t\t\t\tonClick={handlePagination}\n\t\t\t\t/>\n\t\t\t</PaginationWrapper>\n\t\t</PaginationContainer>\n\t)\n}\n","import React, { useEffect, useState } from 'react'\nimport KjedePagination from '~/components/dollyKjede/KjedePagination'\n\nexport interface DollyKjedeProps {\n\tobjectList: string[]\n\titemLimit: number\n\tselectedIndex: number\n\tsetSelectedIndex: (index: number) => void\n\tisLocked: boolean\n}\n\nconst getCenterIndices = (index: number, antallItems: number, itemLimit: number) => {\n\tif (antallItems < 3) {\n\t\treturn []\n\t}\n\n\tlet indices = [index]\n\n\tif (antallItems <= itemLimit) {\n\t\tindices = Array.from(Array(antallItems).keys())\n\t}\n\n\twhile (\n\t\tindices.length < itemLimit - 3 &&\n\t\t!indices.includes(1) &&\n\t\t!(indices.length == itemLimit - 4 && indices[indices.length - 1] != antallItems - 2)\n\t) {\n\t\tindices.unshift(indices[0] - 1)\n\t}\n\n\twhile (\n\t\tindices.length < itemLimit - 3 &&\n\t\t!indices.includes(antallItems - 2) &&\n\t\t!(indices.length == itemLimit - 4 && indices[0] != 1)\n\t) {\n\t\tindices.push(indices[indices.length - 1] + 1)\n\t}\n\n\tif (indices.includes(0)) {\n\t\tindices = indices.slice(1)\n\t}\n\n\tif (indices.includes(antallItems - 1)) {\n\t\tindices = indices.slice(0, indices.length - 1)\n\t}\n\n\treturn indices\n}\n\nconst getMaxShownItems = (itemLimit: number) => {\n\treturn itemLimit > 10 ? 10 : itemLimit < 5 ? 5 : itemLimit\n}\n\nconst getInitialPaginationIndex = (antallItems: number, maxShownItems: number) => {\n\treturn antallItems >= maxShownItems ? maxShownItems - 4 : antallItems - 2\n}\n\nexport default ({\n\tobjectList,\n\titemLimit,\n\tselectedIndex,\n\tsetSelectedIndex,\n\tisLocked\n}: DollyKjedeProps) => {\n\tuseEffect(() => {\n\t\tsetLocked(isLocked)\n\t}, [isLocked])\n\n\tconst antallItems = objectList.length\n\tconst maxShownItems = getMaxShownItems(itemLimit)\n\n\tconst [locked, setLocked] = useState(isLocked)\n\n\tconst [paginationIndex, setPaginationIndex] = useState(\n\t\tgetInitialPaginationIndex(antallItems, maxShownItems)\n\t)\n\tconst [centerIndices, setCenterIndices] = useState(\n\t\tgetCenterIndices(paginationIndex, antallItems, maxShownItems)\n\t)\n\n\tuseEffect(() => {\n\t\tsetCenterIndices(getCenterIndices(paginationIndex, antallItems, maxShownItems))\n\t}, [antallItems])\n\n\tconst handlePagination = (addValue: number) => {\n\t\tif (centerIndices.length == maxShownItems - 3) {\n\t\t\tif (addValue < 0) {\n\t\t\t\taddValue -= 1\n\t\t\t} else {\n\t\t\t\taddValue += 1\n\t\t\t}\n\t\t}\n\t\tsetCenterIndices(getCenterIndices(paginationIndex + addValue, antallItems, maxShownItems))\n\t\tsetPaginationIndex(paginationIndex + addValue)\n\t}\n\n\tconst handleSelection = (index: number) => {\n\t\tlet newPaginationIndex\n\t\tif (index == 0) {\n\t\t\tnewPaginationIndex = getInitialPaginationIndex(antallItems, maxShownItems)\n\t\t} else if (index == antallItems - 1) {\n\t\t\tnewPaginationIndex = antallItems - 2\n\t\t}\n\t\tif (newPaginationIndex != null) {\n\t\t\tsetCenterIndices(getCenterIndices(newPaginationIndex, antallItems, maxShownItems))\n\t\t\tsetPaginationIndex(newPaginationIndex)\n\t\t}\n\t\tsetSelectedIndex(index)\n\t}\n\n\treturn (\n\t\t<KjedePagination\n\t\t\tselectedIndex={selectedIndex}\n\t\t\tobjectList={objectList}\n\t\t\tcenterIndices={centerIndices}\n\t\t\tdisabled={locked}\n\t\t\thandlePagination={handlePagination}\n\t\t\thandleClick={handleSelection}\n\t\t/>\n\t)\n}\n","import _get from 'lodash/get'\nimport _has from 'lodash/has'\nimport _dropRight from 'lodash/dropRight'\nimport _takeRight from 'lodash/takeRight'\nimport _isEmpty from 'lodash/isEmpty'\nimport Formatters from '~/utils/DataFormatter'\nimport {\n\tAdresseKodeverk,\n\tArbeidKodeverk,\n\tPersoninformasjonKodeverk,\n\tSigrunKodeverk,\n\tVergemaalKodeverk\n} from '~/config/kodeverk'\n\n// TODO: Flytte til selector?\n// - Denne kan forminskes ved bruk av hjelpefunksjoner\n// - Når vi får på plass en bedre struktur for bestillingsprosessen, kan\n//   mest sannsynlig visse props fjernes herfra (width?)\n\nconst obj = (label, value, apiKodeverkId) => ({\n\tlabel,\n\tvalue,\n\t...(apiKodeverkId && { apiKodeverkId })\n})\n\nconst _getTpsfBestillingData = data => {\n\treturn [\n\t\tobj('Identtype', data.identtype),\n\t\tobj('Født etter', Formatters.formatDate(data.foedtEtter)),\n\t\tobj('Født før', Formatters.formatDate(data.foedtFoer)),\n\t\tobj('Alder', data.alder),\n\t\tobj('Dødsdato', data.doedsdato === null ? 'Ingen' : Formatters.formatDate(data.doedsdato)),\n\t\tobj('Statsborgerskap', data.statsborgerskap, AdresseKodeverk.StatsborgerskapLand),\n\t\tobj('Statsborgerskap fra', Formatters.formatDate(data.statsborgerskapRegdato)),\n\t\tobj('Statsborgerskap til', Formatters.formatDate(data.statsborgerskapTildato)),\n\t\tobj('Kjønn', Formatters.kjonn(data.kjonn, data.alder)),\n\t\tobj('Har mellomnavn', Formatters.oversettBoolean(data.harMellomnavn)),\n\t\tobj('Sivilstand', data.sivilstand, PersoninformasjonKodeverk.Sivilstander),\n\t\tobj('Diskresjonskoder', data.spesreg !== 'UFB' && data.spesreg, 'Diskresjonskoder'),\n\t\tobj('Uten fast bopel', (data.utenFastBopel || data.spesreg === 'UFB') && 'JA'),\n\t\tobj('Språk', data.sprakKode, PersoninformasjonKodeverk.Spraak),\n\t\tobj('Innvandret fra land', data.innvandretFraLand, AdresseKodeverk.InnvandretUtvandretLand),\n\t\tobj('Innvandret dato', Formatters.formatDate(data.innvandretFraLandFlyttedato)),\n\t\tobj('Utvandret til land', data.utvandretTilLand, AdresseKodeverk.InnvandretUtvandretLand),\n\t\tobj('Utvandret dato', Formatters.formatDate(data.utvandretTilLandFlyttedato)),\n\t\tobj('Er forsvunnet', Formatters.oversettBoolean(data.erForsvunnet)),\n\t\tobj('Forsvunnet dato', Formatters.formatDate(data.forsvunnetDato)),\n\t\tobj('Har bankkontonummer', Formatters.oversettBoolean(data.harBankkontonr)),\n\t\tobj('Bankkonto opprettet', Formatters.formatDate(data.bankkontonrRegdato)),\n\t\tobj(\n\t\t\tdata.telefonnummer_2 ? 'Telefonnummer 1' : 'Telefonnummer',\n\t\t\tdata.telefonnummer_1 && `${data.telefonLandskode_1} ${data.telefonnummer_1}`\n\t\t),\n\t\tobj(\n\t\t\t'Telefonnummer 2',\n\t\t\tdata.telefonnummer_2 && `${data.telefonLandskode_2} ${data.telefonnummer_2}`\n\t\t),\n\t\tobj('Skjerming fra', Formatters.formatDate(data.egenAnsattDatoFom)),\n\t\tobj('Skjerming til', Formatters.formatDate(data.egenAnsattDatoTom))\n\t]\n}\n\nexport function mapBestillingData(bestillingData, bestillingsinformasjon) {\n\tif (!bestillingData) return null\n\n\tconst data = []\n\n\tif (bestillingsinformasjon) {\n\t\tconst bestillingsInfo = {\n\t\t\theader: 'Bestillingsinformasjon',\n\t\t\titems: [\n\t\t\t\tobj(\n\t\t\t\t\t'Antall',\n\t\t\t\t\tbestillingsinformasjon.antallIdenter && bestillingsinformasjon.antallIdenter.toString()\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Type testperson',\n\t\t\t\t\tbestillingsinformasjon.navSyntetiskIdent ? 'NAV syntetisk' : 'Standard'\n\t\t\t\t),\n\t\t\t\tobj('Sist Oppdatert', Formatters.formatDate(bestillingsinformasjon.sistOppdatert)),\n\t\t\t\tobj(\n\t\t\t\t\t'Gjenopprettet fra',\n\t\t\t\t\tbestillingsinformasjon.opprettetFraId\n\t\t\t\t\t\t? `Bestilling # ${bestillingsinformasjon.opprettetFraId}`\n\t\t\t\t\t\t: bestillingsinformasjon.opprettetFraGruppeId &&\n\t\t\t\t\t\t\t\t`Gruppe # ${bestillingsinformasjon.opprettetFraGruppeId}`\n\t\t\t\t)\n\t\t\t]\n\t\t}\n\t\tdata.push(bestillingsInfo)\n\t}\n\n\tif (bestillingData.tpsf) {\n\t\tconst {\n\t\t\tboadresse,\n\t\t\tpostadresse,\n\t\t\tmidlertidigAdresse,\n\t\t\tadresseNrInfo,\n\t\t\tidentHistorikk,\n\t\t\trelasjoner,\n\t\t\tvergemaal,\n\t\t\tfullmakt,\n\t\t\t...persondetaljer\n\t\t} = bestillingData.tpsf\n\n\t\tif (!_isEmpty(persondetaljer)) {\n\t\t\tconst personinfo = {\n\t\t\t\theader: 'Persondetaljer',\n\t\t\t\titems: _getTpsfBestillingData(bestillingData.tpsf)\n\t\t\t}\n\n\t\t\tdata.push(personinfo)\n\t\t}\n\t\tif (boadresse) {\n\t\t\tif (adresseNrInfo) {\n\t\t\t\tconst adresseNrInfoObj = {\n\t\t\t\t\theader: `Boadresse basert på ${Formatters.showLabel(\n\t\t\t\t\t\t'adresseNrType',\n\t\t\t\t\t\tadresseNrInfo.nummertype\n\t\t\t\t\t)}`,\n\t\t\t\t\titems: [\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t`${Formatters.showLabel('adresseNrType', adresseNrInfo.nummertype)}`,\n\t\t\t\t\t\t\tadresseNrInfo.nummer ? adresseNrInfo.nummer : 'Tilfeldig'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj('Bruksenhetsnummer', boadresse.bolignr),\n\t\t\t\t\t\tobj('Flyttedato', Formatters.formatDate(boadresse.flyttedato))\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\tdata.push(adresseNrInfoObj)\n\t\t\t} else {\n\t\t\t\tconst adresse = {\n\t\t\t\t\theader: 'Bostedadresse',\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\theader: 'Bosted'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tobj('Adressetype', Formatters.adressetypeToString(boadresse.adressetype)),\n\t\t\t\t\t\tobj('Gatenavn', boadresse.gateadresse),\n\t\t\t\t\t\tobj('Husnummer', boadresse.husnummer),\n\t\t\t\t\t\tobj('Stedsnavn', boadresse.mellomnavn),\n\t\t\t\t\t\tobj('Gårdsnummer', boadresse.gardsnr),\n\t\t\t\t\t\tobj('Bruksnummer', boadresse.bruksnr),\n\t\t\t\t\t\tobj('Festenummer', boadresse.festenr),\n\t\t\t\t\t\tobj('Undernummer', boadresse.undernr),\n\t\t\t\t\t\tobj('Postnummer', boadresse.postnr),\n\t\t\t\t\t\tobj('Kommunenummer', boadresse.kommunenr),\n\t\t\t\t\t\tobj('Bruksenhetsnummer', boadresse.bolignr),\n\t\t\t\t\t\tobj('Flyttedato', Formatters.formatDate(boadresse.flyttedato))\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\tdata.push(adresse)\n\t\t\t}\n\t\t\tif (boadresse.tilleggsadresse) {\n\t\t\t\tconst tilleggsadresse = {\n\t\t\t\t\theader: 'Tilleggsadresse',\n\t\t\t\t\titems: [\n\t\t\t\t\t\tobj('Tilfeldig adresse', boadresse.tilleggsadresse === {} && 'Ja'),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Tilleggstype',\n\t\t\t\t\t\t\tFormatters.showLabel('tilleggstype', boadresse.tilleggsadresse.tilleggType)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj('Nummer', boadresse.tilleggsadresse.nummer)\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\tdata.push(tilleggsadresse)\n\t\t\t}\n\t\t}\n\n\t\tif (postadresse) {\n\t\t\tconst postadr = bestillingData.tpsf.postadresse[0]\n\t\t\tconst postadresse = {\n\t\t\t\theader: 'Postadresse',\n\t\t\t\titems: [\n\t\t\t\t\tobj('Land', postadr.postLand),\n\t\t\t\t\tobj('Adresselinje 1', postadr.postLinje1),\n\t\t\t\t\tobj('Adresselinje 2', postadr.postLinje2),\n\t\t\t\t\tobj('Adresselinje 3', postadr.postLinje3)\n\t\t\t\t]\n\t\t\t}\n\t\t\tdata.push(postadresse)\n\t\t}\n\n\t\tif (midlertidigAdresse) {\n\t\t\tlet typeGateadresse = null\n\t\t\tif (midlertidigAdresse.adressetype === 'GATE') {\n\t\t\t\tif (midlertidigAdresse.gateadresseNrInfo) {\n\t\t\t\t\ttypeGateadresse = `Tilfeldig, basert på ${Formatters.showLabel(\n\t\t\t\t\t\t'adresseNrType',\n\t\t\t\t\t\tmidlertidigAdresse.gateadresseNrInfo.nummertype\n\t\t\t\t\t)}`\n\t\t\t\t} else if (midlertidigAdresse.norskAdresse && midlertidigAdresse.norskAdresse.gatenavn) {\n\t\t\t\t\ttypeGateadresse = 'Detaljert'\n\t\t\t\t} else {\n\t\t\t\t\ttypeGateadresse = 'Tilfeldig'\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst midlertidigAdresseObj = {\n\t\t\t\theader: 'Midlertidig adresse',\n\t\t\t\titems: [\n\t\t\t\t\tobj('Adressetype', Formatters.showLabel('adresseType', midlertidigAdresse.adressetype)),\n\t\t\t\t\tobj('Gyldig t.o.m.', Formatters.formatDate(midlertidigAdresse.gyldigTom)),\n\t\t\t\t\tobj('Type gateadresse', typeGateadresse),\n\t\t\t\t\tobj(\n\t\t\t\t\t\tmidlertidigAdresse.gateadresseNrInfo &&\n\t\t\t\t\t\t\tFormatters.showLabel(\n\t\t\t\t\t\t\t\t'adresseNrType',\n\t\t\t\t\t\t\t\tmidlertidigAdresse.gateadresseNrInfo.nummertype\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tmidlertidigAdresse.gateadresseNrInfo && midlertidigAdresse.gateadresseNrInfo.nummer\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Gatenavn',\n\t\t\t\t\t\tmidlertidigAdresse.norskAdresse && midlertidigAdresse.norskAdresse.gatenavn\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Husnummer',\n\t\t\t\t\t\tmidlertidigAdresse.norskAdresse && midlertidigAdresse.norskAdresse.husnr\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Eiendomsnavn',\n\t\t\t\t\t\tmidlertidigAdresse.norskAdresse && midlertidigAdresse.norskAdresse.eiendomsnavn\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Postboksnummer',\n\t\t\t\t\t\tmidlertidigAdresse.norskAdresse && midlertidigAdresse.norskAdresse.postboksnr\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Postboksanlegg',\n\t\t\t\t\t\tmidlertidigAdresse.norskAdresse && midlertidigAdresse.norskAdresse.postboksAnlegg\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Postnummer',\n\t\t\t\t\t\tmidlertidigAdresse.norskAdresse && midlertidigAdresse.norskAdresse.postnr\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Postlinje 1',\n\t\t\t\t\t\tmidlertidigAdresse.utenlandskAdresse && midlertidigAdresse.utenlandskAdresse.postLinje1\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Postlinje 2',\n\t\t\t\t\t\tmidlertidigAdresse.utenlandskAdresse && midlertidigAdresse.utenlandskAdresse.postLinje2\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Postlinje 3',\n\t\t\t\t\t\tmidlertidigAdresse.utenlandskAdresse && midlertidigAdresse.utenlandskAdresse.postLinje3\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Land',\n\t\t\t\t\t\tmidlertidigAdresse.utenlandskAdresse && midlertidigAdresse.utenlandskAdresse.postLand,\n\t\t\t\t\t\tAdresseKodeverk.PostadresseLand\n\t\t\t\t\t)\n\t\t\t\t]\n\t\t\t}\n\t\t\tdata.push(midlertidigAdresseObj)\n\n\t\t\tif (midlertidigAdresse.norskAdresse && midlertidigAdresse.norskAdresse.tilleggsadresse) {\n\t\t\t\tconst midlertidigTilleggsadresseObj = {\n\t\t\t\t\theader: 'Midlertidig tilleggsadresse',\n\t\t\t\t\titems: [\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Tilleggstype',\n\t\t\t\t\t\t\tFormatters.showLabel(\n\t\t\t\t\t\t\t\t'tilleggstypeMidlertidig',\n\t\t\t\t\t\t\t\tmidlertidigAdresse.norskAdresse.tilleggsadresse.tilleggType\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj('Nummer', midlertidigAdresse.norskAdresse.tilleggsadresse.nummer)\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\tdata.push(midlertidigTilleggsadresseObj)\n\t\t\t}\n\t\t}\n\n\t\tif (identHistorikk) {\n\t\t\tconst identhistorikkData = {\n\t\t\t\theader: 'Identhistorikk',\n\t\t\t\titemRows: identHistorikk.map((ident, idx) => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnumberHeader: `Identhistorikk ${idx + 1}`\n\t\t\t\t\t\t},\n\t\t\t\t\t\tobj('Identtype', ident.identtype),\n\t\t\t\t\t\tobj('Kjønn', Formatters.kjonnToString(ident.kjonn)),\n\t\t\t\t\t\tobj('Utgått dato', Formatters.formatDate(ident.regdato)),\n\t\t\t\t\t\tobj('Født før', Formatters.formatDate(ident.foedtFoer)),\n\t\t\t\t\t\tobj('Født Etter', Formatters.formatDate(ident.foedtEtter))\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t}\n\t\t\tdata.push(identhistorikkData)\n\t\t}\n\n\t\tif (relasjoner) {\n\t\t\tconst partnere = relasjoner.partner || relasjoner.partnere\n\t\t\tconst barn = relasjoner.barn\n\t\t\tconst foreldre = relasjoner.foreldre\n\n\t\t\tif (partnere) {\n\t\t\t\tconst partner = {\n\t\t\t\t\theader: 'Partner',\n\t\t\t\t\titemRows: []\n\t\t\t\t}\n\n\t\t\t\tpartnere.forEach((item, j) => {\n\t\t\t\t\tconst sivilstander = _get(item, 'sivilstander', [])\n\t\t\t\t\tconst sisteSivilstand = _takeRight(sivilstander)\n\n\t\t\t\t\tconst tidligereSivilstander = _dropRight(sivilstander)\n\t\t\t\t\t\t.reverse()\n\t\t\t\t\t\t.map(s => s.sivilstand)\n\n\t\t\t\t\tpartner.itemRows.push([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\t\tvalue: `#${j + 1}`,\n\t\t\t\t\t\t\twidth: 'x-small'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t..._getTpsfBestillingData(item),\n\t\t\t\t\t\tobj('Fnr/dnr/bost', item.ident),\n\t\t\t\t\t\tobj('Bor sammen', Formatters.oversettBoolean(item.harFellesAdresse)),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Sivilstand',\n\t\t\t\t\t\t\tsisteSivilstand.length > 0 && sisteSivilstand[0].sivilstand,\n\t\t\t\t\t\t\tPersoninformasjonKodeverk.Sivilstander\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj('Tidligere sivilstander', Formatters.arrayToString(tidligereSivilstander))\n\t\t\t\t\t])\n\t\t\t\t})\n\n\t\t\t\tdata.push(partner)\n\t\t\t}\n\n\t\t\tif (barn && barn.length > 0) {\n\t\t\t\tconst barn = {\n\t\t\t\t\theader: 'Barn',\n\t\t\t\t\titemRows: []\n\t\t\t\t}\n\n\t\t\t\trelasjoner.barn.forEach((item, i) => {\n\t\t\t\t\tbarn.itemRows.push([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\t\tvalue: `#${i + 1}`,\n\t\t\t\t\t\t\twidth: 'x-small'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t..._getTpsfBestillingData(item),\n\t\t\t\t\t\tobj('Fnr/dnr/bost', item.ident),\n\t\t\t\t\t\tobj('Forelder 2', item.partnerIdent),\n\t\t\t\t\t\tobj('Foreldre', Formatters.showLabel('barnType', item.barnType)), //Bruke samme funksjon som i bestillingsveileder\n\t\t\t\t\t\tobj('Bor hos', Formatters.showLabel('barnBorHos', item.borHos)),\n\t\t\t\t\t\tobj('Er adoptert', Formatters.oversettBoolean(item.erAdoptert)),\n\t\t\t\t\t\tobj('Fødselsdato', Formatters.formatDate(item.foedselsdato))\n\t\t\t\t\t])\n\t\t\t\t})\n\n\t\t\t\tdata.push(barn)\n\t\t\t}\n\t\t\tif (foreldre && foreldre.length > 0) {\n\t\t\t\tconst foreldreRows = {\n\t\t\t\t\theader: 'Foreldre',\n\t\t\t\t\titemRows: []\n\t\t\t\t}\n\n\t\t\t\trelasjoner.foreldre.forEach((item, i) => {\n\t\t\t\t\tforeldreRows.itemRows.push([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\t\tvalue: `#${i + 1}`,\n\t\t\t\t\t\t\twidth: 'x-small'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t..._getTpsfBestillingData(item),\n\t\t\t\t\t\tobj('Fnr/dnr/bost', item.ident),\n\t\t\t\t\t\tobj('ForeldreType', Formatters.showLabel('foreldreType', item.foreldreType)),\n\t\t\t\t\t\tobj('Foreldre bor sammen', Formatters.oversettBoolean(item.harFellesAdresse)),\n\t\t\t\t\t\tobj('Diskresjonskoder', item.spesreg !== 'UFB' && item.spesreg, 'Diskresjonskoder'),\n\t\t\t\t\t\tobj('Fødselsdato', Formatters.formatDate(item.foedselsdato))\n\t\t\t\t\t])\n\t\t\t\t})\n\n\t\t\t\tdata.push(foreldreRows)\n\t\t\t}\n\t\t}\n\n\t\tif (vergemaal) {\n\t\t\tconst vergemaalKriterier = {\n\t\t\t\theader: 'Vergemål',\n\t\t\t\titems: [\n\t\t\t\t\tobj('Fylkesmannsembete', vergemaal.embete, VergemaalKodeverk.Fylkesmannsembeter),\n\t\t\t\t\tobj('Sakstype', vergemaal.sakType, VergemaalKodeverk.Sakstype),\n\t\t\t\t\tobj('Mandattype', vergemaal.mandatType, VergemaalKodeverk.Mandattype),\n\t\t\t\t\tobj('Vedtaksdato', Formatters.formatDate(vergemaal.vedtakDato)),\n\t\t\t\t\tobj('Verges identtype', vergemaal.identType),\n\t\t\t\t\tobj('Verge har mellomnavn', Formatters.oversettBoolean(vergemaal.harMellomnavn))\n\t\t\t\t]\n\t\t\t}\n\t\t\tdata.push(vergemaalKriterier)\n\t\t}\n\n\t\tif (fullmakt) {\n\t\t\tconst fullmaktKriterier = {\n\t\t\t\theader: 'Fullmakt',\n\t\t\t\titems: [\n\t\t\t\t\tobj('Kilde', fullmakt.kilde),\n\t\t\t\t\tobj('Områder', Formatters.omraaderArrayToString(fullmakt.omraader)),\n\t\t\t\t\tobj('Gyldig fra og med', Formatters.formatDate(fullmakt.gyldigFom)),\n\t\t\t\t\tobj('Gyldig til og med', Formatters.formatDate(fullmakt.gyldigTom)),\n\t\t\t\t\tobj('Fullmektiges identtype', fullmakt.identType),\n\t\t\t\t\tobj('Fullmektig har mellomnavn', Formatters.oversettBoolean(fullmakt.harMellomnavn))\n\t\t\t\t]\n\t\t\t}\n\t\t\tdata.push(fullmaktKriterier)\n\t\t}\n\t}\n\n\tconst aaregKriterier = bestillingData.aareg\n\tif (aaregKriterier) {\n\t\tconst aareg = {\n\t\t\theader: 'Arbeidsforhold (Aareg)',\n\t\t\titems: [],\n\t\t\titemRows: [],\n\t\t\tpaginering: [],\n\t\t\tpagineringPages: []\n\t\t}\n\n\t\tconst harAmelding = _has(aaregKriterier[0], 'amelding')\n\t\tconst arbeidsforholdVisning = (arbeidsforhold, i) => [\n\t\t\t{\n\t\t\t\tnumberHeader: `Arbeidsforhold ${i + 1}`\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Type arbeidsforhold',\n\t\t\t\tvalue:\n\t\t\t\t\tarbeidsforhold.arbeidsforholdstype ||\n\t\t\t\t\t(!harAmelding && aaregKriterier.arbeidsforholdstype),\n\t\t\t\tapiKodeverkId: ArbeidKodeverk.Arbeidsforholdstyper\n\t\t\t},\n\t\t\tobj('Orgnummer', arbeidsforhold.arbeidsgiver?.orgnummer),\n\t\t\tobj('Arbeidsgiver ident', arbeidsforhold.arbeidsgiver?.ident),\n\t\t\tobj('Arbeidsforhold-ID', arbeidsforhold.arbeidsforholdID),\n\t\t\tobj('Ansatt fra', Formatters.formatDate(arbeidsforhold.ansettelsesPeriode?.fom)),\n\t\t\tobj('Ansatt til', Formatters.formatDate(arbeidsforhold.ansettelsesPeriode?.tom)),\n\t\t\t{\n\t\t\t\tlabel: 'Sluttårsak',\n\t\t\t\tvalue: arbeidsforhold.ansettelsesPeriode?.sluttaarsak,\n\t\t\t\tapiKodeverkId: ArbeidKodeverk.SluttaarsakAareg\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Yrke',\n\t\t\t\tvalue: arbeidsforhold.arbeidsavtale?.yrke,\n\t\t\t\tapiKodeverkId: ArbeidKodeverk.Yrker\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ansettelsesform',\n\t\t\t\tvalue: arbeidsforhold.arbeidsavtale?.ansettelsesform,\n\t\t\t\tapiKodeverkId: ArbeidKodeverk.AnsettelsesformAareg\n\t\t\t},\n\t\t\tobj(\n\t\t\t\t'Stillingprosent',\n\t\t\t\tarbeidsforhold.arbeidsavtale?.stillingsprosent === 0\n\t\t\t\t\t? '0'\n\t\t\t\t\t: arbeidsforhold.arbeidsavtale?.stillingsprosent\n\t\t\t),\n\t\t\tobj(\n\t\t\t\t'Endringsdato stillingprosent',\n\t\t\t\tFormatters.formatDate(arbeidsforhold.arbeidsavtale?.endringsdatoStillingsprosent)\n\t\t\t),\n\t\t\tobj(\n\t\t\t\t'Endringsdato lønn',\n\t\t\t\tFormatters.formatDate(arbeidsforhold.arbeidsavtale?.sisteLoennsendringsdato)\n\t\t\t),\n\t\t\t{\n\t\t\t\tlabel: 'Arbeidstidsordning',\n\t\t\t\tvalue: arbeidsforhold.arbeidsavtale?.arbeidstidsordning,\n\t\t\t\tapiKodeverkId: ArbeidKodeverk.Arbeidstidsordninger\n\t\t\t},\n\t\t\tobj('Avtalte arbeidstimer per uke', arbeidsforhold.arbeidsavtale?.avtaltArbeidstimerPerUke),\n\t\t\t{\n\t\t\t\tlabel: 'Skipsregister',\n\t\t\t\tvalue: arbeidsforhold.fartoy?.[0].skipsregister,\n\t\t\t\tapiKodeverkId: ArbeidKodeverk.Skipsregistre\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Fartøystype',\n\t\t\t\tvalue: arbeidsforhold.fartoy?.[0].skipstype,\n\t\t\t\tapiKodeverkId: ArbeidKodeverk.Skipstyper\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Fartsområde',\n\t\t\t\tvalue: arbeidsforhold.fartoy?.[0].fartsomraade,\n\t\t\t\tapiKodeverkId: ArbeidKodeverk.Fartsområder\n\t\t\t},\n\t\t\tobj(\n\t\t\t\t'Perioder med antall timer for timelønnet',\n\t\t\t\tarbeidsforhold.antallTimerForTimeloennet?.length\n\t\t\t),\n\t\t\tobj('Perioder med utenlandsopphold', arbeidsforhold.utenlandsopphold?.length),\n\t\t\tobj('Perioder med permisjon', arbeidsforhold.permisjon?.length),\n\t\t\tobj('Perioder med permittering', arbeidsforhold.permittering?.length)\n\t\t]\n\n\t\tif (harAmelding) {\n\t\t\taareg.items.push(\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Type arbeidsforhold',\n\t\t\t\t\tvalue: aaregKriterier[0]?.arbeidsforholdstype,\n\t\t\t\t\tapiKodeverkId: ArbeidKodeverk.Arbeidsforholdstyper\n\t\t\t\t},\n\t\t\t\tobj('F.o.m. kalendermåned', Formatters.formatDate(aaregKriterier[0]?.genererPeriode?.fom)),\n\t\t\t\tobj('T.o.m. kalendermåned', Formatters.formatDate(aaregKriterier[0]?.genererPeriode?.tom))\n\t\t\t)\n\t\t\taaregKriterier[0]?.amelding.forEach(maaned => {\n\t\t\t\tconst data = {\n\t\t\t\t\titemRows: []\n\t\t\t\t}\n\t\t\t\tmaaned.arbeidsforhold.forEach((arbeidsforhold, i) => {\n\t\t\t\t\tdata.itemRows.push(arbeidsforholdVisning(arbeidsforhold, i))\n\t\t\t\t})\n\t\t\t\taareg.pagineringPages.push(maaned.maaned)\n\t\t\t\taareg.paginering.push(data)\n\t\t\t})\n\t\t} else if (aaregKriterier[0]?.arbeidsgiver) {\n\t\t\taaregKriterier.forEach((arbeidsforhold, i) => {\n\t\t\t\taareg.itemRows.push(arbeidsforholdVisning(arbeidsforhold, i))\n\t\t\t})\n\t\t}\n\n\t\tdata.push(aareg)\n\t}\n\n\tconst sigrunStubKriterier = bestillingData.sigrunstub\n\n\tif (sigrunStubKriterier) {\n\t\t// Flatter ut sigrunKriterier for å gjøre det lettere å mappe\n\t\tconst flatSigrunStubKriterier = []\n\t\tsigrunStubKriterier.forEach(inntekt => {\n\t\t\tconst inntektObj = { inntektsaar: inntekt.inntektsaar, tjeneste: inntekt.tjeneste }\n\t\t\tinntekt.grunnlag &&\n\t\t\t\tinntekt.grunnlag.forEach(gr => {\n\t\t\t\t\tflatSigrunStubKriterier.push({\n\t\t\t\t\t\t...inntektObj,\n\t\t\t\t\t\tgrunnlag: gr.tekniskNavn,\n\t\t\t\t\t\tverdi: gr.verdi,\n\t\t\t\t\t\tinntektssted: 'Fastlands-Norge'\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\tinntekt.svalbardGrunnlag &&\n\t\t\t\tinntekt.svalbardGrunnlag.forEach(gr => {\n\t\t\t\t\tflatSigrunStubKriterier.push({\n\t\t\t\t\t\t...inntektObj,\n\t\t\t\t\t\tsvalbardGrunnlag: gr.tekniskNavn,\n\t\t\t\t\t\tverdi: gr.verdi,\n\t\t\t\t\t\tinntektssted: 'Svalbard'\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t})\n\n\t\tconst sigrunStub = {\n\t\t\theader: 'Skatteoppgjør (Sigrun)',\n\t\t\titemRows: []\n\t\t}\n\n\t\tflatSigrunStubKriterier.forEach((inntekt, i) => {\n\t\t\tsigrunStub.itemRows.push([\n\t\t\t\t{\n\t\t\t\t\tnumberHeader: `Inntekt ${i + 1}`\n\t\t\t\t},\n\t\t\t\tobj('År', inntekt.inntektsaar),\n\t\t\t\tobj('Beløp', inntekt.verdi),\n\t\t\t\tobj('Tjeneste', Formatters.uppercaseAndUnderscoreToCapitalized(inntekt.tjeneste)),\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Grunnlag (Fastlands-Norge)',\n\t\t\t\t\tvalue: inntekt.grunnlag,\n\t\t\t\t\twidth: 'xlarge',\n\t\t\t\t\tapiKodeverkId: SigrunKodeverk[inntekt.tjeneste]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Grunnlag (Svalbard)',\n\t\t\t\t\tvalue: inntekt.svalbardGrunnlag,\n\t\t\t\t\twidth: 'xlarge',\n\t\t\t\t\tapiKodeverkId: SigrunKodeverk[inntekt.tjeneste]\n\t\t\t\t}\n\t\t\t])\n\t\t})\n\n\t\tdata.push(sigrunStub)\n\t}\n\n\tconst inntektStubKriterier = bestillingData.inntektstub\n\n\tif (inntektStubKriterier) {\n\t\tconst inntektStub = {\n\t\t\theader: 'A-ordningen (Inntektskomponenten)',\n\t\t\t// items: [\n\t\t\t// \tobj('Prosentøkning per år', inntektStubKriterier.prosentOekningPerAaar)\n\t\t\t// ],\n\t\t\titemRows: []\n\t\t}\n\n\t\tinntektStubKriterier.inntektsinformasjon &&\n\t\t\tinntektStubKriterier.inntektsinformasjon.forEach((inntektsinfo, i) => {\n\t\t\t\tinntektStub.itemRows.push([\n\t\t\t\t\t{ numberHeader: `Inntektsinformasjon ${i + 1}` },\n\t\t\t\t\tobj('År/måned', inntektsinfo.sisteAarMaaned),\n\t\t\t\t\tobj('Generer antall måneder', inntektsinfo.antallMaaneder),\n\t\t\t\t\tobj('Virksomhet (orgnr/id)', inntektsinfo.virksomhet),\n\t\t\t\t\tobj('Opplysningspliktig (orgnr/id)', inntektsinfo.opplysningspliktig),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Antall registrerte inntekter',\n\t\t\t\t\t\tinntektsinfo.inntektsliste && inntektsinfo.inntektsliste.length\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Antall registrerte fradrag',\n\t\t\t\t\t\tinntektsinfo.fradragsliste && inntektsinfo.fradragsliste.length\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Antall registrerte forskuddstrekk',\n\t\t\t\t\t\tinntektsinfo.forskuddstrekksliste && inntektsinfo.forskuddstrekksliste.length\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Antall registrerte arbeidsforhold',\n\t\t\t\t\t\tinntektsinfo.arbeidsforholdsliste && inntektsinfo.arbeidsforholdsliste.length\n\t\t\t\t\t),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Antall registrerte inntektsendringer (historikk)',\n\t\t\t\t\t\tinntektsinfo.historikk && inntektsinfo.historikk.length\n\t\t\t\t\t)\n\t\t\t\t])\n\t\t\t})\n\n\t\tdata.push(inntektStub)\n\t}\n\n\tconst sykemeldingKriterier = _get(bestillingData, 'sykemelding')\n\n\tif (sykemeldingKriterier) {\n\t\tconst sykemelding = {\n\t\t\theader: 'Sykemelding',\n\t\t\titems: sykemeldingKriterier.syntSykemelding\n\t\t\t\t? [\n\t\t\t\t\t\tobj('Startdato', Formatters.formatDate(sykemeldingKriterier.syntSykemelding.startDato)),\n\t\t\t\t\t\tobj('Organisasjonsnummer', sykemeldingKriterier.syntSykemelding.orgnummer),\n\t\t\t\t\t\tobj('Arbeidsforhold-ID', sykemeldingKriterier.syntSykemelding.arbeidsforholdId)\n\t\t\t\t  ]\n\t\t\t\t: sykemeldingKriterier.detaljertSykemelding\n\t\t\t\t? [\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Startdato',\n\t\t\t\t\t\t\tFormatters.formatDate(sykemeldingKriterier.detaljertSykemelding.startDato)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Trenger umiddelbar bistand',\n\t\t\t\t\t\t\tsykemeldingKriterier.detaljertSykemelding.umiddelbarBistand ? 'JA' : 'NEI'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Manglende tilrettelegging på arbeidsplassen',\n\t\t\t\t\t\t\tsykemeldingKriterier.detaljertSykemelding.manglendeTilretteleggingPaaArbeidsplassen\n\t\t\t\t\t\t\t\t? 'JA'\n\t\t\t\t\t\t\t\t: 'NEI'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Diagnose',\n\t\t\t\t\t\t\t_get(sykemeldingKriterier.detaljertSykemelding, 'hovedDiagnose.diagnose')\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Diagnosekode',\n\t\t\t\t\t\t\t_get(sykemeldingKriterier.detaljertSykemelding, 'hovedDiagnose.diagnosekode')\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Antall registrerte bidiagnoser',\n\t\t\t\t\t\t\tsykemeldingKriterier.detaljertSykemelding.biDiagnoser &&\n\t\t\t\t\t\t\t\tsykemeldingKriterier.detaljertSykemelding.biDiagnoser.length\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Helsepersonell navn',\n\t\t\t\t\t\t\tsykemeldingKriterier.detaljertSykemelding.helsepersonell &&\n\t\t\t\t\t\t\t\t`${sykemeldingKriterier.detaljertSykemelding.helsepersonell.fornavn} ${\n\t\t\t\t\t\t\t\t\tsykemeldingKriterier.detaljertSykemelding.helsepersonell.mellomnavn\n\t\t\t\t\t\t\t\t\t\t? sykemeldingKriterier.detaljertSykemelding.helsepersonell.mellomnavn\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t} ${sykemeldingKriterier.detaljertSykemelding.helsepersonell.etternavn}`\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Helsepersonell ident',\n\t\t\t\t\t\t\t_get(sykemeldingKriterier.detaljertSykemelding, 'helsepersonell.ident')\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'HPR-nummer',\n\t\t\t\t\t\t\t_get(sykemeldingKriterier.detaljertSykemelding, 'helsepersonell.hprId')\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'SamhandlerType',\n\t\t\t\t\t\t\t_get(sykemeldingKriterier.detaljertSykemelding, 'helsepersonell.samhandlerType')\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Arbeidsgiver',\n\t\t\t\t\t\t\t_get(sykemeldingKriterier.detaljertSykemelding, 'arbeidsgiver.navn')\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Yrkesbetegnelse',\n\t\t\t\t\t\t\t_get(sykemeldingKriterier.detaljertSykemelding, 'arbeidsgiver.yrkesbetegnelse'),\n\t\t\t\t\t\t\tArbeidKodeverk.Yrker\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Stillingsprosent',\n\t\t\t\t\t\t\t_get(sykemeldingKriterier.detaljertSykemelding, 'arbeidsgiver.stillingsprosent')\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Antall registrerte perioder',\n\t\t\t\t\t\t\tsykemeldingKriterier.detaljertSykemelding.perioder.length\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Tiltak fra NAV',\n\t\t\t\t\t\t\t_get(sykemeldingKriterier.detaljertSykemelding, 'detaljer.tiltakNav')\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Tiltak på arbeidsplass',\n\t\t\t\t\t\t\t_get(sykemeldingKriterier.detaljertSykemelding, 'detaljer.tiltakArbeidsplass')\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Hensyn på arbeidsplass',\n\t\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\t\tsykemeldingKriterier.detaljertSykemelding,\n\t\t\t\t\t\t\t\t'detaljer.beskrivHensynArbeidsplassen'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tobj(\n\t\t\t\t\t\t\t'Arbeidsfør etter endt periode',\n\t\t\t\t\t\t\tsykemeldingKriterier.detaljertSykemelding.detaljer &&\n\t\t\t\t\t\t\t\t(sykemeldingKriterier.detaljertSykemelding.detaljer.arbeidsforEtterEndtPeriode\n\t\t\t\t\t\t\t\t\t? 'JA'\n\t\t\t\t\t\t\t\t\t: 'NEI')\n\t\t\t\t\t\t)\n\t\t\t\t  ]\n\t\t\t\t: null\n\t\t}\n\t\tdata.push(sykemelding)\n\t}\n\n\tconst brregstubKriterier = bestillingData.brregstub\n\n\tif (brregstubKriterier) {\n\t\tconst brregstub = {\n\t\t\theader: 'Brønnøysundregistrene',\n\t\t\titems: [obj('Understatuser', Formatters.arrayToString(brregstubKriterier.understatuser))],\n\t\t\titemRows: []\n\t\t}\n\t\tbrregstubKriterier.enheter.forEach((enhet, i) => {\n\t\t\tbrregstub.itemRows.push([\n\t\t\t\t{ numberHeader: `Enhet ${i + 1}` },\n\t\t\t\tobj('Rolle', enhet.rolle),\n\t\t\t\tobj('Registreringsdato', Formatters.formatDate(enhet.registreringsdato)),\n\t\t\t\tobj('Organisasjonsnummer', enhet.orgNr),\n\t\t\t\tobj('Foretaksnavn', enhet.foretaksNavn.navn1),\n\t\t\t\tobj('Antall registrerte personroller', enhet.personroller && enhet.personroller.length)\n\t\t\t])\n\t\t})\n\n\t\tdata.push(brregstub)\n\t}\n\n\tconst krrKriterier = bestillingData.krrstub\n\n\tif (krrKriterier) {\n\t\tconst krrStub = {\n\t\t\theader: 'Kontaktinformasjon og reservasjon',\n\t\t\titems: [\n\t\t\t\tobj('Registrert i KRR', krrKriterier.registrert ? 'JA' : 'NEI'),\n\t\t\t\t{\n\t\t\t\t\tlabel: 'RESERVERT MOT DIGITALKOMMUNIKASJON',\n\t\t\t\t\tvalue: krrKriterier.reservert === null ? null : krrKriterier.reservert ? 'JA' : 'NEI',\n\t\t\t\t\twidth: 'medium'\n\t\t\t\t},\n\t\t\t\tobj('Epost', krrKriterier.epost),\n\t\t\t\tobj('Mobilnummer', krrKriterier.mobil),\n\t\t\t\tobj('Språk', Formatters.showLabel('spraaktype', krrKriterier.spraak)),\n\t\t\t\tobj('Gyldig fra', Formatters.formatDate(krrKriterier.gyldigFra)),\n\t\t\t\tobj('Adresse', krrKriterier.sdpAdresse),\n\t\t\t\tobj('Leverandør', krrKriterier.sdpLeverandoer)\n\t\t\t]\n\t\t}\n\n\t\tdata.push(krrStub)\n\t}\n\n\tconst pdlforvalterKriterier = bestillingData.pdlforvalter\n\n\tif (pdlforvalterKriterier) {\n\t\tconst doedsboKriterier = pdlforvalterKriterier.kontaktinformasjonForDoedsbo\n\t\tif (doedsboKriterier) {\n\t\t\tconst navnType = doedsboKriterier.adressat.navn\n\t\t\t\t? 'navn'\n\t\t\t\t: doedsboKriterier.adressat.kontaktperson\n\t\t\t\t? 'kontaktperson'\n\t\t\t\t: null\n\t\t\tconst doedsbo = {\n\t\t\t\theader: 'Kontaktinformasjon for dødsbo',\n\t\t\t\titems: [\n\t\t\t\t\tobj('Fornavn', navnType && doedsboKriterier.adressat[navnType].fornavn),\n\t\t\t\t\tobj('Mellomnavn', navnType && doedsboKriterier.adressat[navnType].mellomnavn),\n\t\t\t\t\tobj('Etternavn', navnType && doedsboKriterier.adressat[navnType].etternavn),\n\t\t\t\t\tobj('Fnr/dnr/BOST', doedsboKriterier.adressat.idnummer),\n\t\t\t\t\tobj('Fødselsdato', Formatters.formatDate(doedsboKriterier.adressat.foedselsdato)),\n\t\t\t\t\tobj('Organisasjonsnavn', doedsboKriterier.adressat.organisasjonsnavn),\n\t\t\t\t\tobj('Organisasjonsnummer', doedsboKriterier.adressat.organisasjonsnummer),\n\t\t\t\t\tobj('Adresselinje 1', doedsboKriterier.adresselinje1),\n\t\t\t\t\tobj('Adresselinje 2', doedsboKriterier.adresselinje2),\n\t\t\t\t\tobj(\n\t\t\t\t\t\t'Postnummer og -sted',\n\t\t\t\t\t\t`${doedsboKriterier.postnummer} ${doedsboKriterier.poststedsnavn}`\n\t\t\t\t\t),\n\t\t\t\t\tobj('Land', doedsboKriterier.landkode, AdresseKodeverk.PostadresseLand),\n\t\t\t\t\tobj('Skifteform', doedsboKriterier.skifteform),\n\t\t\t\t\tobj('Dato utstedt', Formatters.formatDate(doedsboKriterier.utstedtDato)),\n\t\t\t\t\tobj('Gyldig fra', Formatters.formatDate(doedsboKriterier.gyldigFom)),\n\t\t\t\t\tobj('Gyldig til', Formatters.formatDate(doedsboKriterier.gyldigTom))\n\t\t\t\t]\n\t\t\t}\n\t\t\tdata.push(doedsbo)\n\t\t}\n\n\t\tif (pdlforvalterKriterier.utenlandskIdentifikasjonsnummer) {\n\t\t\tconst uidnr = pdlforvalterKriterier.utenlandskIdentifikasjonsnummer\n\n\t\t\tconst flatUidnrKriterier = []\n\t\t\tuidnr.forEach(ui => {\n\t\t\t\tflatUidnrKriterier.push({\n\t\t\t\t\tidentifikasjonsnummer: ui.identifikasjonsnummer,\n\t\t\t\t\tkilde: ui.kilde,\n\t\t\t\t\topphoert: ui.opphoert,\n\t\t\t\t\tutstederland: ui.utstederland\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tconst uidnrObj = {\n\t\t\t\theader: 'Utenlandsk identifikasjonsnummer',\n\t\t\t\titemRows: []\n\t\t\t}\n\n\t\t\tflatUidnrKriterier.forEach((uidr, i) => {\n\t\t\t\tuidnrObj.itemRows.push([\n\t\t\t\t\t{\n\t\t\t\t\t\tnumberHeader: `Utenlandsk identifikasjonsnummer ${i + 1}`\n\t\t\t\t\t},\n\t\t\t\t\tobj('Utenlandsk ID', uidr.identifikasjonsnummer),\n\t\t\t\t\tobj('Kilde', uidr.kilde),\n\t\t\t\t\tobj('Utenlandsk ID opphørt', Formatters.oversettBoolean(uidr.opphoert)),\n\t\t\t\t\tobj('Utstederland', uidr.utstederland, AdresseKodeverk.Utstederland)\n\t\t\t\t])\n\t\t\t})\n\t\t\tdata.push(uidnrObj)\n\t\t}\n\n\t\tif (pdlforvalterKriterier.falskIdentitet) {\n\t\t\tconst falskIdData = pdlforvalterKriterier.falskIdentitet.rettIdentitet\n\n\t\t\tif (falskIdData.identitetType === 'UKJENT') {\n\t\t\t\tconst falskId = {\n\t\t\t\t\theader: 'Falsk identitet',\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Rett identitet',\n\t\t\t\t\t\t\tvalue: 'Ukjent'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\tdata.push(falskId)\n\t\t\t} else if (falskIdData.identitetType === 'ENTYDIG') {\n\t\t\t\tconst falskId = {\n\t\t\t\t\theader: 'Falsk identitet',\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Rett fødselsnummer',\n\t\t\t\t\t\t\tvalue: falskIdData.rettIdentitetVedIdentifikasjonsnummer\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\tdata.push(falskId)\n\t\t\t} else if (falskIdData.identitetType === 'OMTRENTLIG') {\n\t\t\t\tconst falskId = {\n\t\t\t\t\theader: 'Falsk identitet',\n\t\t\t\t\titems: [\n\t\t\t\t\t\tobj('Rett identitet', 'Kjent ved personopplysninger'),\n\t\t\t\t\t\tobj('Fornavn', falskIdData.personnavn.fornavn),\n\t\t\t\t\t\tobj('Mellomnavn', falskIdData.personnavn.mellomnavn),\n\t\t\t\t\t\tobj('Etternavn', falskIdData.personnavn.etternavn),\n\t\t\t\t\t\tobj('Kjønn', falskIdData.kjoenn),\n\t\t\t\t\t\tobj('Fødselsdato', Formatters.formatDate(falskIdData.foedselsdato)),\n\t\t\t\t\t\tobj('Statsborgerskap', Formatters.arrayToString(falskIdData.statsborgerskap))\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\tdata.push(falskId)\n\t\t\t}\n\t\t}\n\t}\n\tconst arenaKriterier = bestillingData.arenaforvalter\n\n\tif (arenaKriterier) {\n\t\tconst arenaforvalter = {\n\t\t\theader: 'Arbeidsytelser',\n\t\t\titems: [\n\t\t\t\tobj(\n\t\t\t\t\t'Brukertype',\n\t\t\t\t\tFormatters.uppercaseAndUnderscoreToCapitalized(arenaKriterier.arenaBrukertype)\n\t\t\t\t),\n\t\t\t\tobj('Servicebehov', arenaKriterier.kvalifiseringsgruppe),\n\t\t\t\tobj(\n\t\t\t\t\t'Automatisk innsending av meldekort',\n\t\t\t\t\tFormatters.oversettBoolean(arenaKriterier.automatiskInnsendingAvMeldekort)\n\t\t\t\t),\n\t\t\t\tobj('Inaktiv fra dato', Formatters.formatDate(arenaKriterier.inaktiveringDato)),\n\t\t\t\tobj('Har 11-5 vedtak', Formatters.oversettBoolean(arenaKriterier.aap115?.[0] && true)),\n\t\t\t\tobj(\n\t\t\t\t\t'AAP 11-5 fra dato',\n\t\t\t\t\tarenaKriterier.aap115?.[0] && Formatters.formatDate(arenaKriterier.aap115[0].fraDato)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Har AAP vedtak UA - positivt utfall',\n\t\t\t\t\tFormatters.oversettBoolean(arenaKriterier.aap?.[0] && true)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'AAP fra dato',\n\t\t\t\t\tarenaKriterier.aap?.[0] && Formatters.formatDate(arenaKriterier.aap[0].fraDato)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'AAP til dato',\n\t\t\t\t\tarenaKriterier.aap?.[0] && Formatters.formatDate(arenaKriterier.aap[0].tilDato)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Har dagpengevedtak',\n\t\t\t\t\tFormatters.oversettBoolean(arenaKriterier.dagpenger?.[0] && true)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'RettighetKode',\n\t\t\t\t\tarenaKriterier.dagpenger?.[0] &&\n\t\t\t\t\t\tFormatters.showLabel('rettighetKode', arenaKriterier.dagpenger[0].rettighetKode)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Dagpenger fra dato',\n\t\t\t\t\tarenaKriterier.dagpenger?.[0] &&\n\t\t\t\t\t\tFormatters.formatDate(arenaKriterier.dagpenger[0].fraDato)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Dagpenger til dato',\n\t\t\t\t\tarenaKriterier.dagpenger?.[0] &&\n\t\t\t\t\t\tFormatters.formatDate(arenaKriterier.dagpenger[0].tilDato)\n\t\t\t\t)\n\t\t\t]\n\t\t}\n\t\tdata.push(arenaforvalter)\n\t}\n\n\tconst instKriterier = bestillingData.instdata\n\n\tif (instKriterier) {\n\t\t// Flater ut instKriterier for å gjøre det lettere å mappe\n\n\t\tconst flatInstKriterier = []\n\t\tinstKriterier.forEach(i => {\n\t\t\tflatInstKriterier.push({\n\t\t\t\tinstitusjonstype: i.institusjonstype,\n\t\t\t\tvarighet: i.varighet,\n\t\t\t\tstartdato: i.startdato,\n\t\t\t\tsluttdato: i.sluttdato\n\t\t\t})\n\t\t})\n\n\t\tconst instObj = {\n\t\t\theader: 'Institusjonsopphold',\n\t\t\titemRows: []\n\t\t}\n\n\t\tflatInstKriterier.forEach((inst, i) => {\n\t\t\tinstObj.itemRows.push([\n\t\t\t\t{\n\t\t\t\t\tnumberHeader: `Institusjonsopphold ${i + 1}`\n\t\t\t\t},\n\t\t\t\tobj('Institusjonstype', Formatters.showLabel('institusjonstype', inst.institusjonstype)),\n\t\t\t\tobj('Varighet', inst.varighet && Formatters.showLabel('varighet', inst.varighet)),\n\t\t\t\tobj('Startdato', Formatters.formatDate(inst.startdato)),\n\t\t\t\tobj('Sluttdato', Formatters.formatDate(inst.sluttdato))\n\t\t\t])\n\t\t})\n\t\tdata.push(instObj)\n\t}\n\n\tconst udiStubKriterier = bestillingData.udistub\n\n\tif (udiStubKriterier) {\n\t\tconst oppholdKriterier = udiStubKriterier.oppholdStatus\n\t\tconst arbeidsadgangKriterier = udiStubKriterier.arbeidsadgang\n\n\t\tconst oppholdsrettTyper = [\n\t\t\t'eosEllerEFTABeslutningOmOppholdsrett',\n\t\t\t'eosEllerEFTAVedtakOmVarigOppholdsrett',\n\t\t\t'eosEllerEFTAOppholdstillatelse'\n\t\t]\n\t\tconst currentOppholdsrettType =\n\t\t\toppholdKriterier && oppholdsrettTyper.find(type => oppholdKriterier[type])\n\n\t\tconst currentTredjelandsborgereStatus =\n\t\t\toppholdKriterier && oppholdKriterier.oppholdSammeVilkaar\n\t\t\t\t? 'Oppholdstillatelse eller opphold på samme vilkår'\n\t\t\t\t: oppholdKriterier && oppholdKriterier.uavklart\n\t\t\t\t? 'Uavklart'\n\t\t\t\t: udiStubKriterier.harOppholdsTillatelse === false\n\t\t\t\t? 'Ikke oppholdstillatelse eller ikke opphold på samme vilkår'\n\t\t\t\t: null\n\n\t\tconst oppholdsrett = Boolean(currentOppholdsrettType)\n\t\tconst tredjelandsborger = Boolean(currentTredjelandsborgereStatus)\n\n\t\tconst aliaserListe = []\n\t\tudiStubKriterier.aliaser &&\n\t\t\tudiStubKriterier.aliaser.forEach((alias, i) => {\n\t\t\t\tif (alias.nyIdent === false) {\n\t\t\t\t\taliaserListe.push(`#${i + 1} Navn\\n`)\n\t\t\t\t} else {\n\t\t\t\t\taliaserListe.push(`#${i + 1} ID-nummer - ${alias.identtype}\\n`)\n\t\t\t\t}\n\t\t\t})\n\n\t\tconst udistub = {\n\t\t\theader: 'UDI',\n\t\t\titems: [\n\t\t\t\tobj(\n\t\t\t\t\t'Oppholdsstatus',\n\t\t\t\t\toppholdsrett ? 'EØS-eller EFTA-opphold' : tredjelandsborger ? 'Tredjelandsborger' : null\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Type opphold',\n\t\t\t\t\toppholdsrett && Formatters.showLabel('eosEllerEFTAtypeOpphold', currentOppholdsrettType)\n\t\t\t\t),\n\t\t\t\tobj('Status', currentTredjelandsborgereStatus),\n\t\t\t\tobj(\n\t\t\t\t\t'Oppholdstillatelse fra dato',\n\t\t\t\t\tFormatters.formatDate(\n\t\t\t\t\t\t_get(oppholdKriterier, `${currentOppholdsrettType}Periode.fra`) ||\n\t\t\t\t\t\t\t_get(oppholdKriterier, 'oppholdSammeVilkaar.oppholdSammeVilkaarPeriode.fra')\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Oppholdstillatelse til dato',\n\t\t\t\t\tFormatters.formatDate(\n\t\t\t\t\t\t_get(oppholdKriterier, `${currentOppholdsrettType}Periode.til`) ||\n\t\t\t\t\t\t\t_get(oppholdKriterier, 'oppholdSammeVilkaar.oppholdSammeVilkaarPeriode.til')\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Effektueringsdato',\n\t\t\t\t\tFormatters.formatDate(\n\t\t\t\t\t\t_get(oppholdKriterier, `${currentOppholdsrettType}Effektuering`) ||\n\t\t\t\t\t\t\t_get(oppholdKriterier, 'oppholdSammeVilkaar.oppholdSammeVilkaarEffektuering')\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Grunnlag for opphold',\n\t\t\t\t\toppholdsrett &&\n\t\t\t\t\t\tFormatters.showLabel(currentOppholdsrettType, oppholdKriterier[currentOppholdsrettType])\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Type oppholdstillatelse',\n\t\t\t\t\tFormatters.showLabel(\n\t\t\t\t\t\t'oppholdstillatelseType',\n\t\t\t\t\t\t_get(oppholdKriterier, 'oppholdSammeVilkaar.oppholdstillatelseType')\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Vedtaksdato',\n\t\t\t\t\tFormatters.formatDate(\n\t\t\t\t\t\t_get(oppholdKriterier, 'oppholdSammeVilkaar.oppholdstillatelseVedtaksDato')\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Avgjørelsesdato',\n\t\t\t\t\tFormatters.formatDate(\n\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\toppholdKriterier,\n\t\t\t\t\t\t\t'ikkeOppholdstilatelseIkkeVilkaarIkkeVisum.avslagEllerBortfall.avgjorelsesDato'\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Har arbeidsadgang',\n\t\t\t\t\tFormatters.allCapsToCapitalized(\n\t\t\t\t\t\tarbeidsadgangKriterier && arbeidsadgangKriterier.harArbeidsAdgang\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Type arbeidsadgang',\n\t\t\t\t\tFormatters.showLabel(\n\t\t\t\t\t\t'typeArbeidsadgang',\n\t\t\t\t\t\tarbeidsadgangKriterier && arbeidsadgangKriterier.typeArbeidsadgang\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Arbeidsomfang',\n\t\t\t\t\tFormatters.showLabel(\n\t\t\t\t\t\t'arbeidsOmfang',\n\t\t\t\t\t\tarbeidsadgangKriterier && arbeidsadgangKriterier.arbeidsOmfang\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Arbeidsadgang fra dato',\n\t\t\t\t\tFormatters.formatDate(_get(arbeidsadgangKriterier, 'periode.fra'))\n\t\t\t\t),\n\t\t\t\tobj(\n\t\t\t\t\t'Arbeidsadgang til dato',\n\t\t\t\t\tFormatters.formatDate(_get(arbeidsadgangKriterier, 'periode.til'))\n\t\t\t\t),\n\t\t\t\tobj('Hjemmel', _get(arbeidsadgangKriterier, 'hjemmel')),\n\t\t\t\tobj('Forklaring', _get(arbeidsadgangKriterier, 'forklaring')),\n\t\t\t\tobj('Alias', aliaserListe.length > 0 && aliaserListe),\n\t\t\t\tobj('Flyktningstatus', Formatters.oversettBoolean(udiStubKriterier.flyktning)),\n\t\t\t\tobj(\n\t\t\t\t\t'Asylsøker',\n\t\t\t\t\tFormatters.showLabel(\n\t\t\t\t\t\t'jaNeiUavklart',\n\t\t\t\t\t\tudiStubKriterier.soeknadOmBeskyttelseUnderBehandling\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t]\n\t\t}\n\t\tdata.push(udistub)\n\t}\n\n\tconst pensjonKriterier = bestillingData.pensjonforvalter\n\n\tif (pensjonKriterier) {\n\t\tconst pensjonforvalter = {\n\t\t\theader: 'Pensjonsgivende inntekt (POPP)',\n\t\t\titems: [\n\t\t\t\tobj('Fra og med år', pensjonKriterier.inntekt.fomAar),\n\t\t\t\tobj('Til og med år', pensjonKriterier.inntekt.tomAar),\n\t\t\t\tobj('Beløp', pensjonKriterier.inntekt.belop),\n\t\t\t\tobj(\n\t\t\t\t\t'Nedjuster med grunnbeløp',\n\t\t\t\t\tFormatters.oversettBoolean(pensjonKriterier.inntekt.redusertMedGrunnbelop)\n\t\t\t\t)\n\t\t\t]\n\t\t}\n\n\t\tdata.push(pensjonforvalter)\n\t}\n\n\tconst inntektsmeldingKriterier = bestillingData.inntektsmelding\n\n\tconst mapInntektsmeldingKriterier = meldinger => ({\n\t\theader: 'Inntektsmelding (fra Altinn)',\n\t\titemRows: meldinger.map((inntekt, i) => [\n\t\t\t{\n\t\t\t\tnumberHeader: `Inntekt ${i + 1}`\n\t\t\t},\n\t\t\tobj('Årsak til innsending', Formatters.codeToNorskLabel(inntekt.aarsakTilInnsending)),\n\t\t\tobj('Ytelse', Formatters.codeToNorskLabel(inntekt.ytelse)),\n\t\t\tobj('Nær relasjon', Formatters.oversettBoolean(inntekt.naerRelasjon)),\n\t\t\tobj(\n\t\t\t\t'Innsendingstidspunkt',\n\t\t\t\tFormatters.formatDate(inntekt.avsendersystem.innsendingstidspunkt)\n\t\t\t),\n\n\t\t\tobj('Arbeidsgiver (orgnr)', inntekt.arbeidsgiver && inntekt.arbeidsgiver.virksomhetsnummer),\n\t\t\tobj(\n\t\t\t\t'Arbeidsgiver (fnr/dnr/bost)',\n\t\t\t\tinntekt.arbeidsgiverPrivat && inntekt.arbeidsgiverPrivat.arbeidsgiverFnr\n\t\t\t),\n\t\t\tobj('Arbeidsforhold-ID', inntekt.arbeidsforhold.arbeidsforholdId),\n\t\t\tobj('Beløp', inntekt.arbeidsforhold.beregnetInntekt.beloep),\n\t\t\tobj(\n\t\t\t\t'Årsak ved endring',\n\t\t\t\tFormatters.codeToNorskLabel(inntekt.arbeidsforhold.aarsakVedEndring)\n\t\t\t),\n\t\t\tobj('Første fraværsdag', Formatters.formatDate(inntekt.arbeidsforhold.foersteFravaersdag)),\n\t\t\tobj(\n\t\t\t\t'Avtalte ferier',\n\t\t\t\tinntekt.arbeidsforhold.avtaltFerieListe && inntekt.arbeidsforhold.avtaltFerieListe.length\n\t\t\t),\n\t\t\t//Refusjon\n\t\t\tobj('Refusjonsbeløp per måned', inntekt.refusjon.refusjonsbeloepPrMnd),\n\t\t\tobj('Opphørsdato refusjon', Formatters.formatDate(inntekt.refusjon.refusjonsopphoersdato)),\n\t\t\tobj(\n\t\t\t\t'Endring i refusjon',\n\t\t\t\t_has(inntekt, 'refusjon.endringIRefusjonListe') && inntekt.refusjon.endringIRefusjonListe\n\t\t\t),\n\t\t\t//Omsorg\n\t\t\tobj('Har utbetalt pliktige dager', _get(inntekt, 'omsorgspenger.harUtbetaltPliktigeDager')),\n\t\t\tobj(\n\t\t\t\t'Fraværsperioder',\n\t\t\t\t_has(inntekt, 'omsorgspenger.fravaersPerioder') &&\n\t\t\t\t\tinntekt.omsorgspenger.fravaersPerioder.length\n\t\t\t),\n\t\t\tobj(\n\t\t\t\t'Delvis fravær',\n\t\t\t\t_has(inntekt, 'omsorgspenger.delvisFravaersListe') &&\n\t\t\t\t\tinntekt.omsorgspenger.delvisFravaersListe.length\n\t\t\t),\n\t\t\t//Sykepenger\n\t\t\tobj('Brutto utbetalt', _get(inntekt, 'sykepengerIArbeidsgiverperioden.bruttoUtbetalt')),\n\t\t\tobj(\n\t\t\t\t'Begrunnelse for reduksjon eller ikke utbetalt',\n\t\t\t\tFormatters.codeToNorskLabel(\n\t\t\t\t\t_get(inntekt, 'sykepengerIArbeidsgiverperioden.begrunnelseForReduksjonEllerIkkeUtbetalt')\n\t\t\t\t)\n\t\t\t),\n\t\t\tobj(\n\t\t\t\t'Arbeidsgiverperioder',\n\t\t\t\t_has(inntekt, 'sykepengerIArbeidsgiverperioden.arbeidsgiverperiodeListe') &&\n\t\t\t\t\tinntekt.sykepengerIArbeidsgiverperioden.arbeidsgiverperiodeListe.length\n\t\t\t),\n\t\t\t//Foreldrepenger\n\t\t\tobj('Startdato foreldrepenger', Formatters.formatDate(inntekt.startdatoForeldrepengeperiode)),\n\t\t\t//Pleiepenger\n\t\t\tobj('Pleiepengerperioder', inntekt.pleiepengerPerioder && inntekt.pleiepengerPerioder.length),\n\t\t\t//Naturalytelse\n\t\t\tobj(\n\t\t\t\t'Gjenopptagelse Naturalytelse',\n\t\t\t\tinntekt.gjenopptakelseNaturalytelseListe && inntekt.gjenopptakelseNaturalytelseListe.length\n\t\t\t),\n\t\t\tobj(\n\t\t\t\t'Opphør av Naturalytelse',\n\t\t\t\tinntekt.opphoerAvNaturalytelseListe && inntekt.opphoerAvNaturalytelseListe.length\n\t\t\t)\n\t\t])\n\t})\n\n\tconst tomInntektsmelding = {\n\t\theader: 'Inntektsmelding (fra Altinn)',\n\t\titems: [obj('Inntektsmelding', 'Tom bestilling')]\n\t}\n\n\tif (inntektsmeldingKriterier) {\n\t\tif (_isEmpty(inntektsmeldingKriterier.inntekter)) {\n\t\t\tdata.push(tomInntektsmelding)\n\t\t} else data.push(mapInntektsmeldingKriterier(inntektsmeldingKriterier.inntekter))\n\t}\n\n\tconst dokarkivKriterier = bestillingData.dokarkiv\n\n\tif (dokarkivKriterier) {\n\t\tconst dokarkiv = {\n\t\t\theader: 'Dokumenter',\n\t\t\titems: [\n\t\t\t\tobj('Brevkode', dokarkivKriterier.dokumenter[0].brevkode),\n\t\t\t\tobj('Tittel', dokarkivKriterier.tittel),\n\t\t\t\tobj('Tema', dokarkivKriterier.tema),\n\t\t\t\tobj('Journalførende enhet', dokarkivKriterier.journalfoerendeEnhet),\n\t\t\t\tobj('Antall vedlegg', dokarkivKriterier.dokumenter.length)\n\t\t\t]\n\t\t}\n\n\t\tdata.push(dokarkiv)\n\t}\n\n\tconst organisasjonKriterier = bestillingData.organisasjon\n\n\tif (organisasjonKriterier) {\n\t\tconst forretningsadresse = organisasjonKriterier[0].forretningsadresse\n\t\tconst postadresse = organisasjonKriterier[0].postadresse\n\t\tconst organisasjon = {\n\t\t\theader: 'Organisasjonsdetaljer',\n\t\t\titems: [\n\t\t\t\tobj('Enhetstype', organisasjonKriterier[0].enhetstype),\n\t\t\t\tobj('Næringskode', organisasjonKriterier[0].naeringskode),\n\t\t\t\tobj('Sektorkode', organisasjonKriterier[0].sektorkode),\n\t\t\t\tobj('Formål', organisasjonKriterier[0].formaal),\n\t\t\t\tobj('Stiftelsesdato', Formatters.formatDate(organisasjonKriterier[0].stiftelsesdato)),\n\t\t\t\tobj('Målform', Formatters.showLabel('maalform', organisasjonKriterier[0].maalform)),\n\t\t\t\tobj('Telefon', organisasjonKriterier[0].telefon),\n\t\t\t\tobj('E-postadresse', organisasjonKriterier[0].epost),\n\t\t\t\tobj('Internettadresse', organisasjonKriterier[0].nettside)\n\t\t\t]\n\t\t}\n\n\t\tconst forretningsadresseKriterier = {\n\t\t\theader: 'Forretningsadresse',\n\t\t\titems: [\n\t\t\t\tobj('Land', forretningsadresse && forretningsadresse.landkode),\n\t\t\t\tobj('Postnummer', forretningsadresse && forretningsadresse.postnr),\n\t\t\t\tobj('Poststed', forretningsadresse && forretningsadresse.poststed),\n\t\t\t\tobj('Kommunenummer', forretningsadresse && forretningsadresse.kommunenr),\n\t\t\t\tobj('Adresselinje 1', forretningsadresse && forretningsadresse.adresselinjer[0]),\n\t\t\t\tobj('Adresselinje 2', forretningsadresse && forretningsadresse.adresselinjer[1]),\n\t\t\t\tobj('Adresselinje 3', forretningsadresse && forretningsadresse.adresselinjer[2])\n\t\t\t]\n\t\t}\n\n\t\tconst postadresseKriterier = {\n\t\t\theader: 'Postadresse',\n\t\t\titems: [\n\t\t\t\tobj('Land', postadresse && postadresse.landkode),\n\t\t\t\tobj('Postnummer', postadresse && postadresse.postnr),\n\t\t\t\tobj('Poststed', postadresse && postadresse.poststed),\n\t\t\t\tobj('Kommunenummer', postadresse && postadresse.kommunenr),\n\t\t\t\tobj('Adresselinje 1', postadresse && postadresse.adresselinjer[0]),\n\t\t\t\tobj('Adresselinje 2', postadresse && postadresse.adresselinjer[1]),\n\t\t\t\tobj('Adresselinje 3', postadresse && postadresse.adresselinjer[2])\n\t\t\t]\n\t\t}\n\n\t\tdata.push(organisasjon)\n\t\tforretningsadresse && data.push(forretningsadresseKriterier)\n\t\tpostadresse && data.push(postadresseKriterier)\n\t}\n\n\tconst importFraTps = bestillingData.importFraTps\n\n\tif (importFraTps) {\n\t\tconst importData = {\n\t\t\theader: 'Import',\n\t\t\titems: [\n\t\t\t\tobj('Identer', Formatters.arrayToString(importFraTps)),\n\t\t\t\tobj('Importert fra', bestillingData.kildeMiljoe.toUpperCase())\n\t\t\t]\n\t\t}\n\n\t\tdata.push(importData)\n\t}\n\n\treturn data\n}\n","import React, { useState } from 'react'\nimport { Enhetstre, OrgTree } from '~/components/enhetstre'\nimport { mapBestillingData } from './BestillingKriterieMapper'\nimport { EnhetBestilling } from '~/components/fagsystem/organisasjoner/types'\n\ntype OrganisasjonKriterier = {\n\tdata: EnhetBestilling\n\trender: Function\n}\n\nexport const OrganisasjonKriterier = ({ data, render }: OrganisasjonKriterier) => {\n\tif (!data) return null\n\n\tconst [selectedId, setSelectedId] = useState('0')\n\n\tconst orgTree = new OrgTree(data, '0')\n\n\treturn (\n\t\t<div>\n\t\t\t<h4>Organisasjonsoversikt</h4>\n\t\t\t<Enhetstre enheter={[orgTree]} selectedEnhet={selectedId} onNodeClick={setSelectedId} />\n\t\t\t{render(mapBestillingData({ organisasjon: [orgTree.find(selectedId)] }))}\n\t\t</div>\n\t)\n}\n","import React, { Fragment, useState } from 'react'\nimport cn from 'classnames'\nimport SubOverskrift from '~/components/ui/subOverskrift/SubOverskrift'\nimport { TitleValue } from '~/components/ui/titleValue/TitleValue'\nimport { mapBestillingData } from './BestillingKriterieMapper'\nimport { OrganisasjonKriterier } from './OrganisasjonKriterier'\nimport DollyKjede from '~/components/dollyKjede/DollyKjede'\n\nconst _renderBestillingsDetaljer = data => {\n\tconst [selectedIndex, setSelectedIndex] = useState(0)\n\n\treturn data.map((kategori, j) => {\n\t\tconst bottomBorder = j != data.length - 1\n\t\tconst cssClass = cn('flexbox--align-start info-text', {\n\t\t\t'bottom-border': bottomBorder\n\t\t})\n\t\tif (kategori.header) {\n\t\t\treturn (\n\t\t\t\t<Fragment key={j}>\n\t\t\t\t\t<h4>{kategori.header} </h4>\n\t\t\t\t\t{kategori.items && (\n\t\t\t\t\t\t<div className={cssClass}>{kategori.items.map(_renderStaticValue)}</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{kategori.paginering?.length > 0 && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<DollyKjede\n\t\t\t\t\t\t\t\tobjectList={kategori.pagineringPages}\n\t\t\t\t\t\t\t\titemLimit={10}\n\t\t\t\t\t\t\t\tselectedIndex={selectedIndex}\n\t\t\t\t\t\t\t\tsetSelectedIndex={setSelectedIndex}\n\t\t\t\t\t\t\t\tisLocked={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className={cn('info-text', { 'bottom-border': bottomBorder })}>\n\t\t\t\t\t\t\t\t{kategori.paginering[selectedIndex].itemRows.map((row, i) => (\n\t\t\t\t\t\t\t\t\t<div className=\"dfa-blokk\" key={i}>\n\t\t\t\t\t\t\t\t\t\t{row[0].numberHeader && <h4>{row[0].numberHeader}</h4>}\n\t\t\t\t\t\t\t\t\t\t<div className={'flexbox--align-start flexbox--wrap'} key={i}>\n\t\t\t\t\t\t\t\t\t\t\t{row.map(_renderStaticValue)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t{kategori.itemRows && (\n\t\t\t\t\t\t<div className={cn('info-text', { 'bottom-border': bottomBorder })}>\n\t\t\t\t\t\t\t{kategori.itemRows.map((row, i) => (\n\t\t\t\t\t\t\t\t<div className=\"dfa-blokk\" key={i}>\n\t\t\t\t\t\t\t\t\t{/*className endres under styling. Kun eksempel*/}\n\t\t\t\t\t\t\t\t\t{row[0].numberHeader && <h4>{row[0].numberHeader}</h4>}\n\t\t\t\t\t\t\t\t\t<div className={'flexbox--align-start flexbox--wrap'} key={i}>\n\t\t\t\t\t\t\t\t\t\t{row.map(_renderStaticValue)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Fragment>\n\t\t\t)\n\t\t}\n\t})\n}\n\nconst _renderStaticValue = (attributt, key) => {\n\tif (!attributt.value) return false\n\treturn (\n\t\t<TitleValue\n\t\t\tkey={key}\n\t\t\ttitle={attributt.label}\n\t\t\tvalue={attributt.value}\n\t\t\tkodeverk={attributt.apiKodeverkId}\n\t\t\tsize={attributt.width ? attributt.width : 'small'}\n\t\t/>\n\t)\n}\n\nexport default function Bestillingskriterier({ bestilling, bestillingsinformasjon, header }) {\n\tif (bestilling.organisasjon || bestilling.enhetstype) {\n\t\treturn (\n\t\t\t<div className=\"bestilling-detaljer\">\n\t\t\t\t{header && <SubOverskrift label={header} />}\n\t\t\t\t<OrganisasjonKriterier\n\t\t\t\t\tdata={bestilling.organisasjon || bestilling}\n\t\t\t\t\trender={_renderBestillingsDetaljer}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst data = mapBestillingData(bestilling, bestillingsinformasjon)\n\n\tif (!data) return <p>Kunne ikke hente bestillingsdata</p>\n\n\treturn (\n\t\t<div className=\"bestilling-detaljer\">\n\t\t\t{header && <SubOverskrift label={header} />}\n\t\t\t{_renderBestillingsDetaljer(data)}\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper'\nimport { InstApi } from '~/service/Api'\nimport { ArenaApi } from '~/service/Api'\nimport { PensjonApi } from '~/service/Api'\nimport TilgjengeligeMiljoer from './TilgjengeligeMiljoer'\n\nexport const MiljoeInfo = ({ bestillingsdata, dollyEnvironments }) => {\n\tconst {\n\t\tinstdata,\n\t\tpdlforvalter,\n\t\tarenaforvalter,\n\t\tpensjonforvalter,\n\t\tsykemelding,\n\t\tudistub\n\t} = bestillingsdata\n\tif (\n\t\t!instdata &&\n\t\t!pdlforvalter &&\n\t\t!arenaforvalter &&\n\t\t!pensjonforvalter &&\n\t\t!sykemelding &&\n\t\t!_get(udistub, 'oppholdStatus')\n\t)\n\t\treturn null\n\n\treturn (\n\t\t<AlertStripeInfo>\n\t\t\tDu har valgt egenskaper som ikke blir distribuert til alle miljøer. For hver av følgende\n\t\t\tegenskaper må derfor ett eller flere av miljøene under velges:\n\t\t\t<ul>\n\t\t\t\t{instdata && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\tInstitusjonsopphold:&nbsp;\n\t\t\t\t\t\t<TilgjengeligeMiljoer\n\t\t\t\t\t\t\tendepunkt={InstApi.getTilgjengeligeMiljoer}\n\t\t\t\t\t\t\tdollyEnvironments={dollyEnvironments}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\n\t\t\t\t{pdlforvalter && pdlforvalter.falskIdentitet && <li>Falsk identitet: Q2</li>}\n\t\t\t\t{pdlforvalter && pdlforvalter.utenlandskIdentifikasjonsnummer && (\n\t\t\t\t\t<li>Utenlandsk identifikasjonsnummer: Q2</li>\n\t\t\t\t)}\n\t\t\t\t{pdlforvalter && pdlforvalter.kontaktinformasjonForDoedsbo && (\n\t\t\t\t\t<li>Kontaktinformasjon for dødsbo: Q2</li>\n\t\t\t\t)}\n\n\t\t\t\t{arenaforvalter && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\tArena:&nbsp;\n\t\t\t\t\t\t<TilgjengeligeMiljoer\n\t\t\t\t\t\t\tendepunkt={ArenaApi.getTilgjengeligeMiljoer}\n\t\t\t\t\t\t\tdollyEnvironments={dollyEnvironments}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\n\t\t\t\t{pensjonforvalter && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\tPOPP:&nbsp;\n\t\t\t\t\t\t<TilgjengeligeMiljoer\n\t\t\t\t\t\t\tendepunkt={PensjonApi.getTilgjengeligeMiljoer}\n\t\t\t\t\t\t\tdollyEnvironments={dollyEnvironments}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\n\t\t\t\t{sykemelding && <li>Sykemelding: Både Q1 og Q2 må velges</li>}\n\n\t\t\t\t{udistub && udistub.oppholdStatus && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\tOppholdsstatus i PDL: Q1, Q2 (Dersom du kun ønsker å sende oppholdsstatus til UDI-stub\n\t\t\t\t\t\ter det ingen krav til valg av miljø.)\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</AlertStripeInfo>\n\t)\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ErrorMessage, FieldArray } from 'formik'\nimport LinkButton from '~/components/ui/button/LinkButton/LinkButton'\nimport { DollyCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\nimport { MiljoeInfo } from './MiljoeInfo/MiljoeInfo'\n\nimport './MiljoVelger.less'\n\nexport const MiljoVelger = ({ bestillingsdata, heading }) => {\n\tconst filterEnvironments = (miljoer, erOrg) => {\n\t\tif (!erOrg) return miljoer\n\t\tconst filtrerteMiljoer = { ...miljoer }\n\t\tfiltrerteMiljoer.Q = filtrerteMiljoer.Q.filter(env => !env.id.includes('qx'))\n\t\treturn filtrerteMiljoer\n\t}\n\n\tconst environments = useSelector(state => state.environments.data)\n\n\tif (!environments) return null\n\tconst erOrganisasjon = bestillingsdata?.hasOwnProperty('organisasjon')\n\tconst filteredEnvironments = filterEnvironments(environments, erOrganisasjon)\n\n\tconst order = ['T', 'Q']\n\n\treturn (\n\t\t<div className=\"miljo-velger\">\n\t\t\t<h2>{heading}</h2>\n\t\t\t{bestillingsdata && (\n\t\t\t\t<MiljoeInfo bestillingsdata={bestillingsdata} dollyEnvironments={filteredEnvironments} />\n\t\t\t)}\n\n\t\t\t<FieldArray name=\"environments\">\n\t\t\t\t{({ push, remove, form }) => {\n\t\t\t\t\tconst values = form.values.environments\n\n\t\t\t\t\tconst isChecked = id => values.includes(id)\n\n\t\t\t\t\tconst onClick = e => {\n\t\t\t\t\t\tconst { id } = e.target\n\t\t\t\t\t\tisChecked(id) ? remove(values.indexOf(id)) : push(id)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst velgAlle = type => {\n\t\t\t\t\t\tconst c = filteredEnvironments[type].filter(f => !isChecked(f.id)).map(a => a.id)\n\t\t\t\t\t\tconst n = values.concat(c)\n\t\t\t\t\t\tform.setFieldValue('environments', n)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst fjernAlle = type => {\n\t\t\t\t\t\tform.setFieldValue(\n\t\t\t\t\t\t\t'environments',\n\t\t\t\t\t\t\tvalues.filter(id => !filteredEnvironments[type].map(a => a.id).includes(id))\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tbestillingsdata &&\n\t\t\t\t\t\tbestillingsdata.sykemelding &&\n\t\t\t\t\t\t!isChecked('q1') &&\n\t\t\t\t\t\t!isChecked('q2')\n\t\t\t\t\t) {\n\t\t\t\t\t\tpush('q1')\n\t\t\t\t\t\tpush('q2')\n\t\t\t\t\t}\n\n\t\t\t\t\treturn order.map(type => {\n\t\t\t\t\t\tconst category = filteredEnvironments[type]\n\t\t\t\t\t\tif (!category) return null\n\n\t\t\t\t\t\tconst allDisabled = category.some(f => f.disabled)\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<fieldset key={type} name={`Liste over ${type}-miljøer`}>\n\t\t\t\t\t\t\t\t<h3>{type}-miljøer</h3>\n\t\t\t\t\t\t\t\t<div className=\"miljo-velger_checkboxes\">\n\t\t\t\t\t\t\t\t\t{category.map(env => (\n\t\t\t\t\t\t\t\t\t\t<DollyCheckbox\n\t\t\t\t\t\t\t\t\t\t\tkey={env.id}\n\t\t\t\t\t\t\t\t\t\t\tid={env.id}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={env.disabled}\n\t\t\t\t\t\t\t\t\t\t\tlabel={env.id}\n\t\t\t\t\t\t\t\t\t\t\tchecked={values.includes(env.id)}\n\t\t\t\t\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => {}}\n\t\t\t\t\t\t\t\t\t\t\tsize={'xxsmall'}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{!allDisabled && (\n\t\t\t\t\t\t\t\t\t<div className=\"miljo-velger_buttons\">\n\t\t\t\t\t\t\t\t\t\t<LinkButton text=\"Velg alle\" onClick={() => velgAlle(type)} />\n\t\t\t\t\t\t\t\t\t\t<LinkButton text=\"Fjern alle\" onClick={() => fjernAlle(type)} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t</FieldArray>\n\n\t\t\t<ErrorMessage name=\"environments\" className=\"error-message\" component=\"div\" />\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport cn from 'classnames'\nimport Icon from '~/components/ui/icon/Icon'\n\nimport './header.less'\n\nexport const Header = ({ icon = 'man', iconSize = 36, className, iconClassName, children }) => {\n\treturn (\n\t\t<header className={cn('content-header', className)}>\n\t\t\t<div className={`content-header_icon ${iconClassName}`}>\n\t\t\t\t<Icon kind={icon} size={iconSize} />\n\t\t\t</div>\n\t\t\t<div className=\"content-header_content\">{children}</div>\n\t\t</header>\n\t)\n}\n\nHeader.TitleValue = ({ title, value }) => (\n\t<dl>\n\t\t<dt>{title}</dt>\n\t\t<dd>{value}</dd>\n\t</dl>\n)\n","import * as Yup from 'yup'\nimport _get from 'lodash/get'\nimport { addDays, isAfter, isBefore } from 'date-fns'\nimport Dataformatter from '~/utils/DataFormatter'\nimport {\n\tifKeyHasValue,\n\tifPresent,\n\tmessages,\n\trequiredDate,\n\trequiredNumber,\n\trequiredString\n} from '~/utils/YupValidations'\n\nconst boadresse = Yup.object({\n\tgateadresse: ifKeyHasValue(\n\t\t'$tpsf.boadresse.adressetype',\n\t\t['GATE'],\n\t\tifKeyHasValue(\n\t\t\t'$tpsf.adresseNrInfo',\n\t\t\t[null],\n\t\t\tifKeyHasValue(\n\t\t\t\t'$tpsf.boadresse.tilleggsadresse',\n\t\t\t\t[undefined],\n\t\t\t\tifKeyHasValue(\n\t\t\t\t\t'$tpsf.utenFastBopel',\n\t\t\t\t\t[undefined, false],\n\t\t\t\t\tYup.string().required(\n\t\t\t\t\t\t'Bruk adressevelgeren over for å hente gyldige adresser og velge et av forslagene'\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t),\n\tbolignr: Yup.string()\n\t\t.matches(\n\t\t\t/^[HULK]\\d{4}$/,\n\t\t\t'Bruksenhetsnummer består av bokstaven H, L, U eller K etterfulgt av 4 sifre'\n\t\t)\n\t\t.transform((i, j) => (j === '' ? null : i))\n\t\t.nullable(),\n\tadressetype: requiredString,\n\tgardsnr: Yup.mixed().when('adressetype', {\n\t\tis: 'MATR',\n\t\tthen: ifKeyHasValue(\n\t\t\t'$tpsf.boadresse.tilleggsadresse',\n\t\t\t[undefined],\n\t\t\tYup.string()\n\t\t\t\t.required(messages.required)\n\t\t\t\t.max(5, 'Gårdsnummeret må være under 99999')\n\t\t)\n\t}),\n\tbruksnr: Yup.mixed().when('adressetype', {\n\t\tis: 'MATR',\n\t\tthen: ifKeyHasValue(\n\t\t\t'$tpsf.boadresse.tilleggsadresse',\n\t\t\t[undefined],\n\t\t\tYup.string()\n\t\t\t\t.required(messages.required)\n\t\t\t\t.max(4, 'Bruksnummeret må være under 9999')\n\t\t)\n\t}),\n\tfestnr: Yup.string().max(4, 'Festenummer må være under 9999'),\n\tundernr: Yup.string().max(3, 'Undernummer må være under 999'),\n\tpostnr: Yup.mixed().when('adressetype', {\n\t\tis: 'MATR',\n\t\tthen: ifKeyHasValue('$tpsf.boadresse.tilleggsadresse', [undefined], requiredString)\n\t}),\n\tkommunenr: Yup.mixed()\n\t\t.when('adressetype', {\n\t\t\tis: 'MATR',\n\t\t\tthen: ifKeyHasValue('$tpsf.boadresse.tilleggsadresse', [undefined], requiredString)\n\t\t})\n\t\t.nullable(),\n\ttilleggsadresse: Yup.object({\n\t\ttilleggType: ifPresent('$tpsf.boadresse.tilleggsadresse', requiredString),\n\t\tnummer: ifKeyHasValue(\n\t\t\t'$tpsf.boadresse.tilleggsadresse.tilleggType',\n\t\t\t['LEILIGHET_NR', 'SEKSJON_NR', 'BOLIG_NR'],\n\t\t\trequiredNumber.transform(num => (isNaN(num) ? undefined : num))\n\t\t)\n\t})\n})\n\nconst adresseNrInfo = Yup.object({\n\tnummer: Yup.mixed().when('nummertype', {\n\t\tis: v => v,\n\t\tthen: ifKeyHasValue('$tpsf.boadresse.tilleggsadresse', [undefined], requiredString)\n\t})\n}).nullable()\n\nconst midlertidigAdresse = Yup.object({\n\tadressetype: requiredString,\n\tgyldigTom: Yup.string().test(\n\t\t'is-within-one-year-from-today',\n\t\t'Dato må være innen ett år fra i dag',\n\t\tfunction validDate(dato) {\n\t\t\tif (!dato) return true\n\t\t\tconst ettAarFraIDag = new Date(new Date().setFullYear(new Date().getFullYear() + 1))\n\t\t\tconst dateValid =\n\t\t\t\tisAfter(new Date(dato), addDays(new Date(), -1)) && isBefore(new Date(dato), ettAarFraIDag)\n\t\t\treturn dateValid\n\t\t}\n\t),\n\tgateadresseNrInfo: Yup.object({\n\t\tnummertype: ifPresent('$tpsf.midlertidigAdresse.gateadresseNrInfo', requiredString),\n\t\tnummer: ifPresent('$tpsf.midlertidigAdresse.gateadresseNrInfo', requiredString)\n\t}),\n\tnorskAdresse: Yup.object({\n\t\ttilleggsadresse: Yup.object({\n\t\t\ttilleggType: ifPresent(\n\t\t\t\t'$tpsf.midlertidigAdresse.norskAdresse.tilleggsadresse.tilleggType',\n\t\t\t\trequiredString\n\t\t\t),\n\t\t\tnummer: ifKeyHasValue(\n\t\t\t\t'$tpsf.midlertidigAdresse.norskAdresse.tilleggsadresse.tilleggType',\n\t\t\t\t'BOLIG_NR',\n\t\t\t\trequiredString\n\t\t\t)\n\t\t}),\n\t\tpostnr: ifPresent('$tpsf.midlertidigAdresse.norskAdresse.postnr', requiredString),\n\t\tgatenavn: ifKeyHasValue(\n\t\t\t'$tpsf.midlertidigAdresse.adressetype',\n\t\t\t['GATE'],\n\t\t\tifPresent(\n\t\t\t\t'$tpsf.midlertidigAdresse.norskAdresse.gatenavn',\n\t\t\t\tYup.string().required(\n\t\t\t\t\t'Bruk adressevelgeren over for å hente gyldige adresser og velge et av forslagene'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\tgatekode: Yup.string(),\n\t\thusnr: Yup.string(),\n\t\teiendomsnavn: ifKeyHasValue('$tpsf.midlertidigAdresse.adressetype', 'STED', requiredString),\n\t\tpostboksnr: Yup.string()\n\t\t\t.min(1, 'Feltet er påkrevd')\n\t\t\t.max(5, 'Nummer kan ha maks fem siffer'),\n\t\tpostboksAnlegg: ifKeyHasValue('$tpsf.midlertidigAdresse.adressetype', 'PBOX', requiredString)\n\t}),\n\tutenlandskAdresse: Yup.object({\n\t\tpostLinje1: ifPresent('$tpsf.midlertidigAdresse.utenlandskAdresse', requiredString),\n\t\tpostLinje2: Yup.string(),\n\t\tpostLinje3: Yup.string(),\n\t\tpostLand: ifPresent('$tpsf.midlertidigAdresse.utenlandskAdresse', requiredString)\n\t})\n})\n\nexport const sivilstander = Yup.array().of(\n\tYup.object({\n\t\tsivilstand: Yup.string().required(messages.required),\n\t\tsivilstandRegdato: Yup.date()\n\t\t\t.transform((i, j) => (j === null || j === '' ? undefined : i))\n\t\t\t.test(\n\t\t\t\t'is-after-last',\n\t\t\t\t'Dato må være etter tidligere forhold (eldste forhold settes først)',\n\t\t\t\tfunction validDate(dato) {\n\t\t\t\t\tif (!dato) return true\n\t\t\t\t\tconst values = this.options.context\n\t\t\t\t\tconst path = this.options.path\n\n\t\t\t\t\t// Finn index av current partner og sivilstand\n\t\t\t\t\t// Ex path: tpsf.relasjoner.partnere[0].sivilstander[0].sivilstandRegdato\n\t\t\t\t\tconst partnerIdx = parseInt(path.match(/partnere\\[(.*?)\\].sivilstander/i)[1])\n\t\t\t\t\tconst sivilstandIdx = parseInt(path.match(/sivilstander\\[(.*?)\\].sivilstandRegdato/i)[1])\n\n\t\t\t\t\t// Da vi skal validere mot \"forrige forhold\" trenger vi ikke sjekke første\n\t\t\t\t\tif (partnerIdx === 0 && sivilstandIdx === 0) return true\n\n\t\t\t\t\tconst getSisteForholdDato = () => {\n\t\t\t\t\t\tif (!values.personFoerLeggTil?.tpsf?.sivilstander) {\n\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst datoer = values.personFoerLeggTil.tpsf.sivilstander\n\t\t\t\t\t\t\t.filter(sivstand => sivstand.sivilstandRegdato)\n\t\t\t\t\t\t\t.map(sivilstand => new Date(sivilstand.sivilstandRegdato))\n\t\t\t\t\t\t\t.sort((a, b) => b.getTime() - a.getTime()) // Seneste dato på første index\n\t\t\t\t\t\treturn datoer && datoer.length > 0 && datoer[0].toISOString().substring(0, 10)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst getSivilstandRegdato = (pIdx, sIdx) =>\n\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\tvalues.tpsf.relasjoner.partnere,\n\t\t\t\t\t\t\t`[${pIdx}].sivilstander[${sIdx}].sivilstandRegdato`\n\t\t\t\t\t\t)\n\n\t\t\t\t\tlet prevDato\n\n\t\t\t\t\tif (sivilstandIdx > 0) {\n\t\t\t\t\t\tprevDato = getSivilstandRegdato(partnerIdx, sivilstandIdx - 1)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst prevPartnerSivilstandArr = _get(\n\t\t\t\t\t\t\tvalues.tpsf.relasjoner.partnere,\n\t\t\t\t\t\t\t`[${partnerIdx - 1}].sivilstander`\n\t\t\t\t\t\t)\n\t\t\t\t\t\tprevDato = getSivilstandRegdato(partnerIdx - 1, prevPartnerSivilstandArr.length - 1)\n\t\t\t\t\t}\n\t\t\t\t\tif (!prevDato) {\n\t\t\t\t\t\tprevDato = getSisteForholdDato()\n\t\t\t\t\t}\n\n\t\t\t\t\t// Selve testen\n\t\t\t\t\tconst dateValidAfter = isAfter(new Date(dato), addDays(new Date(prevDato), 2))\n\t\t\t\t\tconst dateValidBeforeToday = isBefore(new Date(dato), Date.now())\n\t\t\t\t\treturn (\n\t\t\t\t\t\t(dateValidAfter && dateValidBeforeToday) ||\n\t\t\t\t\t\tthis.createError({\n\t\t\t\t\t\t\tmessage: !dateValidAfter\n\t\t\t\t\t\t\t\t? `Dato må være etter tidligere forhold (${Dataformatter.formatDate(\n\t\t\t\t\t\t\t\t\t\tprevDato\n\t\t\t\t\t\t\t\t  )}), og det må minst være 2 dager i mellom`\n\t\t\t\t\t\t\t\t: 'Dato kan ikke være etter dagens dato',\n\t\t\t\t\t\t\tpath: path\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t\t.required(messages.required)\n\t})\n)\n\nconst innvandringUtvandringDatoTest = schema => {\n\treturn schema.test(\n\t\t'datoEtterSisteInnUtvandring',\n\t\t`Datoen må være etter siste inn-/utvandring (${''})`,\n\t\tfunction erEtterSisteDato(dato) {\n\t\t\tconst values = this.options.context\n\t\t\tconst personFoerLeggTil = values.personFoerLeggTil\n\t\t\tif (!dato || !personFoerLeggTil) return true\n\n\t\t\tconst sisteDato = _get(personFoerLeggTil, 'tpsf.innvandretUtvandret[0].flyttedato')\n\t\t\tconst dateValid = isAfter(new Date(dato), new Date(sisteDato))\n\n\t\t\treturn (\n\t\t\t\tdateValid ||\n\t\t\t\tthis.createError({\n\t\t\t\t\tmessage: `Dato må være etter siste inn-/utvandring (${Dataformatter.formatDate(\n\t\t\t\t\t\tsisteDato\n\t\t\t\t\t)})`,\n\t\t\t\t\tpath: this.options.path\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t)\n}\n\nconst foedtFoerOgEtterTest = (validation, validerFoedtFoer) => {\n\tconst errorMsgFoedtFoer =\n\t\t'Født Før dato kan ikke være før Født Etter dato eller etter dagens dato'\n\tconst errorMsgFoedtEtter =\n\t\t'Født Etter dato kan ikke være etter Født Før dato eller etter dagens dato.'\n\n\treturn validation.test(\n\t\t'range',\n\t\tvaliderFoedtFoer ? errorMsgFoedtFoer : errorMsgFoedtEtter,\n\t\tfunction isWithinTest(val) {\n\t\t\tif (!val) return true\n\n\t\t\tconst values = this.options.context\n\t\t\tconst path = this.path.substring(0, this.path.lastIndexOf('.'))\n\n\t\t\tconst selectedDato = new Date(new Date(val).toDateString())\n\t\t\tconst foedtEtterValue = _get(values, `${path}.foedtEtter`)\n\t\t\tconst foedtFoerValue = _get(values, `${path}.foedtFoer`)\n\n\t\t\tconst foedtEtterDato = new Date(foedtEtterValue)\n\t\t\tconst foedtFoerDato = new Date(foedtFoerValue)\n\n\t\t\tconst identtype = _get(values, `${path}.identtype`)\n\t\t\tif (identtype === 'FDAT') {\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t(!validerFoedtFoer && foedtEtterDato > Date.now()) ||\n\t\t\t\t(validerFoedtFoer && foedtFoerDato > Date.now())\n\t\t\t)\n\t\t\t\treturn false\n\n\t\t\tif (foedtEtterDato)\n\t\t\t\tif (validerFoedtFoer) {\n\t\t\t\t\tif (foedtEtterValue !== '' && foedtEtterValue !== undefined) {\n\t\t\t\t\t\tfoedtEtterDato.setDate(foedtEtterDato.getDate())\n\t\t\t\t\t\tif (selectedDato < new Date(foedtEtterDato.toDateString())) return false\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (foedtFoerValue !== '' && foedtFoerValue !== undefined) {\n\t\t\t\t\t\tfoedtFoerDato.setDate(foedtFoerDato.getDate())\n\t\t\t\t\t\tif (selectedDato > new Date(foedtFoerDato.toDateString())) return false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\treturn true\n\t\t}\n\t)\n}\n\nconst partnere = Yup.array()\n\t.of(\n\t\tYup.object({\n\t\t\tidenttype: Yup.string(),\n\t\t\tkjonn: Yup.string().nullable(),\n\t\t\talder: Yup.number()\n\t\t\t\t.transform(num => (isNaN(num) ? undefined : num))\n\t\t\t\t.min(0, 'Alder må være et positivt tall')\n\t\t\t\t.max(119, 'Alder må være under 120'),\n\t\t\tfoedtEtter: foedtFoerOgEtterTest(Yup.date().nullable(), false),\n\t\t\tfoedtFoer: foedtFoerOgEtterTest(Yup.date().nullable(), true),\n\t\t\tspesreg: Yup.string()\n\t\t\t\t.when('utenFastBopel', {\n\t\t\t\t\tis: true,\n\t\t\t\t\tthen: Yup.string().test(\n\t\t\t\t\t\t'is-not-kode6',\n\t\t\t\t\t\t'Kan ikke være \"Kode 6\" når \"Uten fast bopel\" er valgt.',\n\t\t\t\t\t\tvalue => value !== 'SPSF'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t\t.nullable(),\n\t\t\tutenFastBopel: Yup.boolean(),\n\t\t\tboadresse: Yup.object({\n\t\t\t\tkommunenr: Yup.string().nullable()\n\t\t\t}),\n\t\t\tsivilstander: ifPresent('$tpsf.relasjoner.partnere[0].sivilstander', sivilstander),\n\t\t\tharFellesAdresse: Yup.boolean()\n\t\t})\n\t)\n\t.nullable()\n\nconst requiredHvisIkkeDoed = path =>\n\tifPresent(\n\t\tpath,\n\t\tYup.mixed().when('doedsdato', {\n\t\t\tis: val => val === undefined || val === null,\n\t\t\tthen: requiredString\n\t\t})\n\t)\n\nconst requiredHvisDoedfoedt = path =>\n\tifPresent(\n\t\tpath,\n\t\tYup.mixed().when('identtype', {\n\t\t\tis: val => val === 'FDAT',\n\t\t\tthen: requiredDate\n\t\t})\n\t)\n\nconst barn = Yup.array()\n\t.of(\n\t\tYup.object({\n\t\t\tidenttype: Yup.string(),\n\t\t\tkjonn: Yup.string().nullable(),\n\t\t\tbarnType: ifPresent('$tpsf.relasjoner.barn[0].barnType', requiredString),\n\t\t\tpartnerNr: Yup.number().nullable(),\n\t\t\tborHos: requiredHvisIkkeDoed('$tpsf.relasjoner.barn[0].borHos'),\n\t\t\terAdoptert: Yup.boolean(),\n\t\t\talder: Yup.number()\n\t\t\t\t.transform(num => (isNaN(num) ? undefined : num))\n\t\t\t\t.min(0, 'Alder må være et positivt tall')\n\t\t\t\t.max(119, 'Alder må være under 120'),\n\t\t\tfoedtEtter: foedtFoerOgEtterTest(Yup.date().nullable(), false),\n\t\t\tfoedtFoer: foedtFoerOgEtterTest(Yup.date().nullable(), true),\n\t\t\tspesreg: Yup.string()\n\t\t\t\t.when('utenFastBopel', {\n\t\t\t\t\tis: true,\n\t\t\t\t\tthen: Yup.string().test(\n\t\t\t\t\t\t'is-not-kode6',\n\t\t\t\t\t\t'Kan ikke være \"Kode 6\" når \"Uten fast bopel\" er valgt.',\n\t\t\t\t\t\tvalue => value !== 'SPSF'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t\t.nullable(),\n\t\t\tutenFastBopel: Yup.boolean(),\n\t\t\tboadresse: Yup.object({\n\t\t\t\tkommunenr: Yup.string().nullable()\n\t\t\t}),\n\t\t\tfoedselsdato: requiredHvisDoedfoedt('$tpsf.relasjoner.barn[0].foedselsdato'),\n\t\t\tdoedsdato: Yup.date().nullable()\n\t\t})\n\t)\n\t.nullable()\n\nconst foreldre = Yup.array()\n\t.of(\n\t\tYup.object({\n\t\t\tidenttype: Yup.string(),\n\t\t\tkjonn: Yup.string().nullable(),\n\t\t\tforeldreType: ifPresent('$tpsf.relasjoner.foreldre[0].foreldreType', requiredString),\n\t\t\talder: Yup.number()\n\t\t\t\t.transform(num => (isNaN(num) ? undefined : num))\n\t\t\t\t.min(0, 'Alder må være et positivt tall')\n\t\t\t\t.max(119, 'Alder må være under 120'),\n\t\t\tfoedtEtter: foedtFoerOgEtterTest(Yup.date().nullable(), false),\n\t\t\tfoedtFoer: foedtFoerOgEtterTest(Yup.date().nullable(), true),\n\t\t\tspesreg: Yup.string(),\n\t\t\tboadresse: Yup.object({\n\t\t\t\tkommunenr: Yup.string().nullable()\n\t\t\t}),\n\t\t\tdoedsdato: Yup.date().nullable()\n\t\t})\n\t)\n\t.nullable()\n\nconst testTelefonnummer = nr =>\n\tYup.string()\n\t\t.max(20, 'Telefonnummer kan ikke ha mer enn 20 sifre')\n\t\t.when(`telefonLandskode_${nr}`, {\n\t\t\tis: '+47',\n\t\t\tthen: Yup.string().length(8, 'Norsk telefonnummer må ha 8 sifre')\n\t\t})\n\t\t.required(messages.required)\n\t\t.matches(/^[1-9][0-9]*$/, 'Telefonnummer må være numerisk, og kan ikke starte med 0')\n\nexport const validation = {\n\ttpsf: ifPresent(\n\t\t'$tpsf',\n\t\tYup.object({\n\t\t\talder: Yup.number()\n\t\t\t\t.min(0, 'Alder må være et positivt tall')\n\t\t\t\t.max(119, 'Alder må være under 120')\n\t\t\t\t.typeError(messages.required),\n\t\t\tfoedtEtter: foedtFoerOgEtterTest(Yup.date().nullable(), false),\n\t\t\tfoedtFoer: foedtFoerOgEtterTest(Yup.date().nullable(), true),\n\t\t\tdoedsdato: Yup.date().nullable(),\n\t\t\tkjonn: ifPresent('$tpsf.kjonn', requiredString),\n\t\t\tstatsborgerskap: ifPresent('$tpsf.statsborgerskap', requiredString),\n\t\t\tstatsborgerskapRegdato: Yup.date().nullable(),\n\t\t\tstatsborgerskapTildato: Yup.date().nullable(),\n\t\t\tinnvandretFraLand: ifPresent('$tpsf.innvandretFraLand', requiredString),\n\t\t\tinnvandretFraLandFlyttedato: ifPresent(\n\t\t\t\t'$tpsf.innvandretFraLandFlyttedato',\n\t\t\t\tinnvandringUtvandringDatoTest(Yup.date().nullable())\n\t\t\t),\n\t\t\tutvandretTilLand: ifPresent('$tpsf.utvandretTilLand', requiredString),\n\t\t\tutvandretTilLandFlyttedato: ifPresent(\n\t\t\t\t'$tpsf.utvandretTilLandFlyttedato',\n\t\t\t\tinnvandringUtvandringDatoTest(Yup.date().nullable())\n\t\t\t),\n\t\t\tsprakKode: ifPresent('$tpsf.sprakKode', requiredString),\n\t\t\tegenAnsattDatoFom: ifPresent(\n\t\t\t\t'$tpsf.egenAnsattDatoFom',\n\t\t\t\tYup.string().test(\n\t\t\t\t\t'is-before-today',\n\t\t\t\t\t'Dato kan ikke være etter dagens dato',\n\t\t\t\t\tfunction validDate(dato) {\n\t\t\t\t\t\treturn isBefore(new Date(dato), new Date())\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t),\n\t\t\tegenAnsattDatoTom: ifPresent(\n\t\t\t\t'$tpsf.egenAnsattDatoTom',\n\t\t\t\tYup.string().test('is-after-dato-fom', 'Dato må være etter fra-dato', function validDate(\n\t\t\t\t\tdato\n\t\t\t\t) {\n\t\t\t\t\tconst values = this.options.context\n\t\t\t\t\treturn isAfter(new Date(dato), new Date(_get(values, 'tpsf.egenAnsattDatoFom')))\n\t\t\t\t})\n\t\t\t),\n\t\t\ttelefonLandskode_1: ifPresent('$tpsf.telefonLandskode_1', requiredString),\n\t\t\ttelefonnummer_1: ifPresent('$tpsf.telefonnummer_1', testTelefonnummer('1')),\n\t\t\ttelefonLandskode_2: ifPresent('$tpsf.telefonLandskode_2', requiredString).nullable(),\n\t\t\ttelefonnummer_2: ifPresent('$tpsf.telefonnummer_2', testTelefonnummer('2')).nullable(),\n\t\t\tspesreg: ifPresent(\n\t\t\t\t'$tpsf.spesreg',\n\t\t\t\tYup.string().when('utenFastBopel', {\n\t\t\t\t\tis: true,\n\t\t\t\t\tthen: Yup.string().test(\n\t\t\t\t\t\t'is-not-kode6',\n\t\t\t\t\t\t'Kan ikke være \"Kode 6\" når \"Uten fast bopel\" er valgt.',\n\t\t\t\t\t\tvalue => value !== 'SPSF'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t).nullable(),\n\t\t\tvergemaal: ifPresent(\n\t\t\t\t'$tpsf.vergemaal',\n\t\t\t\tYup.object({\n\t\t\t\t\tembete: requiredString.nullable(),\n\t\t\t\t\tsakType: requiredString.nullable(),\n\t\t\t\t\tvedtakDato: requiredDate\n\t\t\t\t})\n\t\t\t),\n\t\t\tfullmakt: ifPresent(\n\t\t\t\t'$tpsf.fullmakt',\n\t\t\t\tYup.object({\n\t\t\t\t\tkilde: requiredString,\n\t\t\t\t\tomraader: Yup.array()\n\t\t\t\t\t\t.of(Yup.string())\n\t\t\t\t\t\t.required('Velg minst ett område'),\n\t\t\t\t\tgyldigFom: requiredDate,\n\t\t\t\t\tgyldigTom: requiredDate\n\t\t\t\t})\n\t\t\t),\n\t\t\tboadresse: ifPresent('$tpsf.boadresse', boadresse),\n\t\t\tadresseNrInfo: ifPresent('$tpsf.adresseNrInfo', adresseNrInfo),\n\t\t\tmidlertidigAdresse: ifPresent('$tpsf.midlertidigAdresse', midlertidigAdresse),\n\t\t\tpostadresse: Yup.array().of(\n\t\t\t\tYup.object({\n\t\t\t\t\tpostLinje3: Yup.string().when('postLand', {\n\t\t\t\t\t\tis: 'NOR',\n\t\t\t\t\t\tthen: requiredString\n\t\t\t\t\t}),\n\t\t\t\t\tpostLand: requiredString\n\t\t\t\t})\n\t\t\t),\n\t\t\trelasjoner: Yup.object({\n\t\t\t\tpartnere: ifPresent('$tpsf.relasjoner.partnere', partnere),\n\t\t\t\tbarn: ifPresent('$tpsf.relasjoner.barn', barn),\n\t\t\t\tforeldre: ifPresent('$tpsf.relasjoner.foreldre', foreldre)\n\t\t\t}),\n\t\t\tidenttype: ifPresent('$tpsf.identtype', requiredString)\n\t\t})\n\t)\n}\n","import React from 'react'\nimport cn from 'classnames'\nimport Etikett, { EtikettBaseProps } from 'nav-frontend-etiketter'\n\nimport './etikett.less'\n\ninterface ImportFraEtikett {\n\timportFra: string\n\ttype: EtikettBaseProps\n\tvenstreMargin?: boolean\n}\n\nconst importType = (fra: string) => {\n\tif (fra === 'TPS') return 'Mini-Norge'\n\telse return 'Ukjent'\n}\n\nconst ImportFraEtikett = ({ importFra, type, venstreMargin }: ImportFraEtikett) => {\n\tif (!importFra) return null\n\n\tconst css = cn('dolly-etikett', { 'dolly-etikett--venstre-margin': venstreMargin })\n\treturn (\n\t\t<Etikett mini className={css} type={type} title={`Importert fra ${importType(importFra)}`}>\n\t\t\t{importType(importFra)}\n\t\t</Etikett>\n\t)\n}\n\nexport { ImportFraEtikett }\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { FormikProps } from 'formik'\nimport { addDays } from 'date-fns'\nimport { DollyDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { DollySelect } from '~/components/ui/form/inputs/select/Select'\nimport { statuser as SivilstandStatuser } from './SivilstandOptions'\nimport { Sivilstand } from '../partnere/partnerTypes'\n\ninterface SivilstandForm {\n\tformikPath: string\n\tsivilstand: Sivilstand\n\toptions: Array<Options>\n\treadOnly: boolean\n\tformikBag: FormikProps<{}>\n\tminimumDato: string\n\ttidligereSivilstand: boolean\n}\n\ntype Options = {\n\tvalue: string\n\tlabel: string\n}\n\nexport default ({\n\tformikPath,\n\tsivilstand,\n\toptions,\n\treadOnly,\n\tformikBag,\n\ttidligereSivilstand,\n\tminimumDato = null\n}: SivilstandForm) => (\n\t<div\n\t\tclassName=\"flexbox\"\n\t\ttitle={\n\t\t\ttidligereSivilstand\n\t\t\t\t? 'Du kan ikke endre sivilstand fra tidligere bestilling'\n\t\t\t\t: readOnly\n\t\t\t\t? 'Du kan kun endre siste sivilstand på siste partner'\n\t\t\t\t: undefined\n\t\t}\n\t>\n\t\t<DollySelect\n\t\t\tname={`${formikPath}.sivilstand`}\n\t\t\tvalue={sivilstand.sivilstand}\n\t\t\tonChange={(e: Options) => formikBag.setFieldValue(`${formikPath}.sivilstand`, e.value)}\n\t\t\tlabel=\"Forhold til partner (sivilstand)\"\n\t\t\toptions={readOnly ? Object.values(SivilstandStatuser) : options}\n\t\t\tisClearable={false}\n\t\t\tdisabled={readOnly}\n\t\t\tfastfield={false}\n\t\t\tfeil={getFeilmelding(formikBag, `${formikPath}.sivilstand`)}\n\t\t/>\n\t\t<DollyDatepicker\n\t\t\tvalue={sivilstand.sivilstandRegdato}\n\t\t\tonChange={(e: string) => formikBag.setFieldValue(`${formikPath}.sivilstandRegdato`, e)}\n\t\t\tlabel=\"Sivilstand fra dato\"\n\t\t\tisClearable={false}\n\t\t\tdisabled={readOnly}\n\t\t\tfastfield={false}\n\t\t\tminDate={addDays(new Date(minimumDato), 3)}\n\t\t\tfeil={getFeilmelding(formikBag, `${formikPath}.sivilstandRegdato`)}\n\t\t/>\n\t</div>\n)\n\nconst getFeilmelding = (formikBag: FormikProps<{}>, path: string) => {\n\tconst feilmelding = _get(formikBag.errors, path)\n\treturn feilmelding ? { feilmelding: feilmelding } : null\n}\n","import React from 'react'\nimport { FieldArray } from 'formik'\nimport _has from 'lodash/has'\nimport {\n\tDollyFaBlokk,\n\tDollyFieldArrayWrapper,\n\tFieldArrayAddButton\n} from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { nesteGyldigStatuser, tomSisteSivilstand } from './SivilstandOptions'\nimport SivilstandForm from './sivilstandForm'\nimport { ErrorBoundary } from '~/components/ui/appError/ErrorBoundary'\n\nconst isSivilstandNy = sivilstand => sivilstand.ny || !sivilstand.hasOwnProperty('ny')\nconst initialValues = { sivilstand: '', sivilstandRegdato: '' }\n\nexport const Sivilstand = ({ basePath, formikBag, locked, sivilstander, minDatoSivilstand }) => (\n\t<FieldArray name={basePath}>\n\t\t{arrayHelpers => {\n\t\t\tconst antallTidligereSivilstander = sivilstander.filter(\n\t\t\t\tsivilstand => !isSivilstandNy(sivilstand)\n\t\t\t).length\n\n\t\t\t// Sjekk forrige (nest siste) sivilstandstatus, for å sette\n\t\t\t// gyldige options for current sivilstandstatus\n\t\t\tconst options = nesteGyldigStatuser(sivilstander)\n\n\t\t\tconst ugyldigSisteSivilstand =\n\t\t\t\t_has(formikBag.errors, basePath) || tomSisteSivilstand(formikBag, basePath)\n\n\t\t\tconst addNewEntry = () => arrayHelpers.push(initialValues)\n\n\t\t\treturn (\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<DollyFieldArrayWrapper header=\"Forhold\" nested>\n\t\t\t\t\t\t{sivilstander.map((sivilstand, idx) => {\n\t\t\t\t\t\t\tconst formikIdx = idx - antallTidligereSivilstander\n\t\t\t\t\t\t\tconst formikPath = `${basePath}[${formikIdx}]`\n\t\t\t\t\t\t\tconst isLast = idx === sivilstander.length - 1\n\t\t\t\t\t\t\tconst ny = isSivilstandNy(sivilstand)\n\n\t\t\t\t\t\t\t// Det er kun mulig å slette siste forhold\n\t\t\t\t\t\t\tconst showRemove = idx > 0 && isLast && !locked && ny\n\t\t\t\t\t\t\tconst clickRemove = () => {\n\t\t\t\t\t\t\t\tarrayHelpers.remove(formikIdx)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<DollyFaBlokk\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\t\t\theader=\"Forhold\"\n\t\t\t\t\t\t\t\t\thandleRemove={clickRemove}\n\t\t\t\t\t\t\t\t\tshowDeleteButton={showRemove}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<SivilstandForm\n\t\t\t\t\t\t\t\t\t\tformikPath={formikPath}\n\t\t\t\t\t\t\t\t\t\tsivilstand={sivilstand}\n\t\t\t\t\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\t\t\t\ttidligereSivilstand={!ny}\n\t\t\t\t\t\t\t\t\t\treadOnly={!isLast || !ny || locked}\n\t\t\t\t\t\t\t\t\t\tminimumDato={minDatoSivilstand}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</DollyFaBlokk>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<FieldArrayAddButton\n\t\t\t\t\t\t\taddEntryButtonText=\"Nytt forhold\"\n\t\t\t\t\t\t\thoverText={\n\t\t\t\t\t\t\t\tugyldigSisteSivilstand\n\t\t\t\t\t\t\t\t\t? 'Siste sivilstand må være gyldig før du kan legge til en ny'\n\t\t\t\t\t\t\t\t\t: locked\n\t\t\t\t\t\t\t\t\t? 'Du kan kun endre siste partner'\n\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdisabled={ugyldigSisteSivilstand || locked}\n\t\t\t\t\t\t\tonClick={addNewEntry}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</DollyFieldArrayWrapper>\n\t\t\t\t</ErrorBoundary>\n\t\t\t)\n\t\t}}\n\t</FieldArray>\n)\n","import React, { ReactChildren } from 'react'\nimport NavButton from '~/components/ui/button/NavButton/NavButton'\nimport useBoolean from '~/utils/hooks/useBoolean'\nimport DollyModal from '~/components/ui/modal/DollyModal'\nimport Icon from '~/components/ui/icon/Icon'\n\nimport './AvbrytModal.less'\n\ntype data = {\n\taction: Function\n\tchildren: ReactChildren\n}\n\nexport const AvbrytButton = ({ action, children }: data) => {\n\tconst [modalIsOpen, openModal, closeModal] = useBoolean(false)\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<NavButton type={'fare'} onClick={openModal}>\n\t\t\t\tAVBRYT\n\t\t\t</NavButton>\n\t\t\t<DollyModal isOpen={modalIsOpen} closeModal={closeModal} width=\"fit-content\" overflow=\"auto\">\n\t\t\t\t<div className=\"avbrytModal\">\n\t\t\t\t\t<div className=\"avbrytModal avbrytModal-content\">\n\t\t\t\t\t\t<Icon size={50} kind=\"report-problem-circle\" />\n\t\t\t\t\t\t<h1>Avbryt bestilling</h1>\n\t\t\t\t\t\t<h4>{children}</h4>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"avbrytModal-actions\">\n\t\t\t\t\t\t<NavButton onClick={closeModal}>NEI</NavButton>\n\t\t\t\t\t\t<NavButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tcloseModal()\n\t\t\t\t\t\t\t\treturn action()\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype=\"hoved\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tJA, JEG ER SIKKER\n\t\t\t\t\t\t</NavButton>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</DollyModal>\n\t\t</React.Fragment>\n\t)\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { go } from 'connected-react-router'\nimport NavButton from '~/components/ui/button/NavButton/NavButton'\n\nimport './Navigation.less'\nimport { AvbrytButton } from '~/components/ui/button/AvbrytButton/AvbrytButton'\n\nexport const Navigation = ({ showPrevious, onPrevious, isLastStep, formikBag }) => {\n\tconst dispatch = useDispatch()\n\tconst { isSubmitting, handleSubmit } = formikBag\n\n\tconst onAbort = () => dispatch(go(-1))\n\n\treturn (\n\t\t<div className=\"step-navknapper-wrapper\">\n\t\t\t<div className=\"step-navknapper\">\n\t\t\t\t<AvbrytButton action={onAbort}>\n\t\t\t\t\tEr du sikker på at du vil avbryte bestillingen?\n\t\t\t\t</AvbrytButton>\n\n\t\t\t\t<div className=\"step-navknapper--right\">\n\t\t\t\t\t{showPrevious && <NavButton onClick={onPrevious}>Tilbake</NavButton>}\n\t\t\t\t\t{!isLastStep && (\n\t\t\t\t\t\t<NavButton type=\"hoved\" disabled={isSubmitting} onClick={handleSubmit}>\n\t\t\t\t\t\t\tVidere\n\t\t\t\t\t\t</NavButton>\n\t\t\t\t\t)}\n\t\t\t\t\t{isLastStep && (\n\t\t\t\t\t\t<NavButton type=\"hoved\" onClick={handleSubmit} disabled={isSubmitting}>\n\t\t\t\t\t\t\tOPPRETT\n\t\t\t\t\t\t</NavButton>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import _has from 'lodash/has'\nimport _set from 'lodash/fp/set'\nimport _omit from 'lodash/omit'\nimport _isEmpty from 'lodash/isEmpty'\n\nexport const stateModifierFns = (initial, setInitial, options = null) => {\n\tconst opts = options\n\tconst set = (path, value) => setInitial(_set(path, value, initial))\n\tconst has = path => _has(initial, path)\n\tconst del = path => {\n\t\tlet newObj = _omit(initial, path)\n\n\t\t// Ingen tomme objekter guard\n\t\tconst rootPath = Array.isArray(path) ? path[0].split('.')[0] : path.split('.')[0]\n\t\tif (_isEmpty(newObj[rootPath])) newObj = _omit(newObj, rootPath)\n\n\t\tsetInitial(newObj)\n\t}\n\tconst setMulti = (...arrays) => {\n\t\tconst newInitial = arrays.reduce((acc, curr) => {\n\t\t\tconst [path, val] = curr\n\t\t\treturn _set(path, val, acc)\n\t\t}, initial)\n\t\tsetInitial(newInitial)\n\t}\n\n\tconst allCheckedLabels = attrs =>\n\t\tObject.values(attrs)\n\t\t\t.filter(a => a.checked)\n\t\t\t.map(b => b.label)\n\n\tconst batchUpdate = (attrs, fn, ignoreKeys = [], key = 'add') => {\n\t\tconst state = Object.keys(attrs).reduce((acc, curr) => {\n\t\t\t// Handle ignored keys\n\t\t\tconst ignores = Array.isArray(ignoreKeys) ? ignoreKeys : [ignoreKeys]\n\t\t\tif (ignores.includes(curr)) return acc\n\n\t\t\tconst sm_local = stateModifierFns(acc, newState => (acc = newState), opts)(fn)\n\t\t\tsm_local.attrs[curr][key]()\n\t\t\treturn acc\n\t\t}, Object.assign({}, initial))\n\n\t\tsetInitial(state)\n\t}\n\n\treturn fn => {\n\t\tconst attrs = fn({ set, setMulti, del, has, opts, initial, setInitial }) || {}\n\t\tconst checked = allCheckedLabels(attrs)\n\t\treturn {\n\t\t\tattrs,\n\t\t\tchecked,\n\t\t\tbatchAdd: ignoreKeys => batchUpdate(attrs, fn, ignoreKeys, 'add'),\n\t\t\tbatchRemove: ignoreKeys => batchUpdate(attrs, fn, ignoreKeys, 'remove')\n\t\t}\n\t}\n}\n","import React, { useContext } from 'react'\nimport { Header } from '~/components/ui/header/Header'\nimport Formatter from '~/utils/DataFormatter'\nimport { BestillingsveilederContext } from './Bestillingsveileder'\nimport { ImportFraEtikett } from '~/components/ui/etikett'\n\nexport const BestillingsveilederHeader = () => {\n\tconst opts = useContext(BestillingsveilederContext)\n\n\tif (opts.is.nyOrganisasjon || opts.is.nyStandardOrganisasjon) {\n\t\tconst titleValue = opts.is.nyStandardOrganisasjon ? 'Standard organisasjon' : 'Organisasjon'\n\t\treturn (\n\t\t\t<Header icon=\"organisasjon\" iconClassName=\"org\">\n\t\t\t\t<div className=\"flexbox\">\n\t\t\t\t\t<Header.TitleValue title=\"Opprett ny\" value={titleValue} />\n\t\t\t\t</div>\n\t\t\t</Header>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Header>\n\t\t\t<div className=\"flexbox\">\n\t\t\t\t<Header.TitleValue\n\t\t\t\t\ttitle=\"Antall\"\n\t\t\t\t\tvalue={`${opts.antall} ${opts.antall > 1 ? 'personer' : 'person'}`}\n\t\t\t\t/>\n\t\t\t\t{!opts.is.opprettFraIdenter && (\n\t\t\t\t\t<Header.TitleValue title=\"Identtype\" value={opts.identtype} />\n\t\t\t\t)}\n\t\t\t\t{opts.is.opprettFraIdenter && (\n\t\t\t\t\t<Header.TitleValue\n\t\t\t\t\t\ttitle=\"Opprett fra eksisterende personer\"\n\t\t\t\t\t\tvalue={Formatter.arrayToString(opts.opprettFraIdenter)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{opts.is.nyBestillingFraMal && (\n\t\t\t\t\t<Header.TitleValue title=\"Basert på mal\" value={opts.mal.malNavn} />\n\t\t\t\t)}\n\t\t\t\t{opts.is.leggTil && (\n\t\t\t\t\t<Header.TitleValue\n\t\t\t\t\t\ttitle=\"Legg til/endre på person\"\n\t\t\t\t\t\tvalue={opts.personFoerLeggTil.tpsf.ident}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{opts.is.leggTil && opts.personFoerLeggTil.tpsf.importFra && (\n\t\t\t\t\t<Header.TitleValue\n\t\t\t\t\t\ttitle=\"Importert fra\"\n\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t<ImportFraEtikett type=\"fokus\" importFra={opts.personFoerLeggTil.tpsf.importFra} />\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Header>\n\t)\n}\n","import React from 'react'\nimport './Utvalg.less'\n\nexport const Utvalg = ({ checked }) => {\n\tconst renderPanel = ({ label, values }, idx) => (\n\t\t<ul key={idx}>\n\t\t\t<li>\n\t\t\t\t<span>{label}</span>\n\t\t\t\t<ul>{values.map(renderItem)}</ul>\n\t\t\t</li>\n\t\t</ul>\n\t)\n\n\tconst renderItem = (item, idx) => (\n\t\t<li key={idx}>\n\t\t\t<span>{item}</span>\n\t\t</li>\n\t)\n\n\tconst renderEmptyResult = () => <span className=\"utvalg--empty-result\">Ingenting er valgt</span>\n\n\treturn (\n\t\t<div className=\"utvalg-container\">\n\t\t\t<div className=\"utvalg\">\n\t\t\t\t<h2>Du har lagt til følgende egenskaper:</h2>\n\t\t\t\t{checked.length ? checked.map(renderPanel) : renderEmptyResult()}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { Utvalg } from './utvalg/Utvalg'\n\nimport './AttributtVelger.less'\n\nexport const AttributtVelger = ({ checked, children }) => {\n\treturn (\n\t\t<div className=\"attributt-velger\">\n\t\t\t<div className=\"flexbox\">\n\t\t\t\t<div className=\"attributt-velger_panels\">{children}</div>\n\t\t\t\t<Utvalg checked={checked} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { DollyCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\nimport { CheckboxGruppe } from 'nav-frontend-skjema'\n\nexport const Attributt = ({ attr, vis = true, disabled = false, title = null }) => {\n\treturn (\n\t\tvis && (\n\t\t\t<div title={title}>\n\t\t\t\t<DollyCheckbox\n\t\t\t\t\tlabel={attr.label}\n\t\t\t\t\tsize=\"grow\"\n\t\t\t\t\tattributtCheckbox={true}\n\t\t\t\t\tonChange={attr.checked ? attr.remove : attr.add}\n\t\t\t\t\tchecked={attr.checked}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t)\n}\n\nexport const AttributtKategori = ({ title, children }) => {\n\tconst attributter = Array.isArray(children) ? children : [children]\n\tconst attributterSomSkalVises = attributter.some(\n\t\tattr => attr.props.vis || !attr.props.hasOwnProperty('vis')\n\t)\n\treturn (\n\t\tattributterSomSkalVises && (\n\t\t\t<CheckboxGruppe>\n\t\t\t\t{title && <h3>{title}</h3>}\n\t\t\t\t<div className=\"attributt-velger_panelsubcontent\">{children}</div>\n\t\t\t</CheckboxGruppe>\n\t\t)\n\t)\n}\n","import React, { useContext } from 'react'\nimport _get from 'lodash/get'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\nimport Formatters from '~/utils/DataFormatter'\nimport { BestillingsveilederContext } from '~/components/bestillingsveileder/Bestillingsveileder'\n\nconst innvandret = personFoerLeggTil =>\n\t_get(personFoerLeggTil, 'tpsf.innvandretUtvandret[0].innutvandret') === 'INNVANDRET'\n\nexport const PersoninformasjonPanel = ({ stateModifier }) => {\n\tconst sm = stateModifier(PersoninformasjonPanel.initialValues)\n\tconst opts = useContext(BestillingsveilederContext)\n\tconst opprettFraEksisterende = opts.is.opprettFraIdenter\n\tconst leggTil = opts.is.leggTil\n\tconst { personFoerLeggTil } = opts\n\t//Noen egenskaper kan ikke endres når personen opprettes fra eksisterende eller videreføres med legg til\n\n\treturn (\n\t\t<Panel\n\t\t\theading={PersoninformasjonPanel.heading}\n\t\t\tstartOpen\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType={'personinformasjon'}\n\t\t>\n\t\t\t<AttributtKategori title=\"Alder\">\n\t\t\t\t<Attributt attr={sm.attrs.alder} vis={!opprettFraEksisterende && !leggTil} />\n\t\t\t\t<Attributt attr={sm.attrs.doedsdato} />\n\t\t\t</AttributtKategori>\n\n\t\t\t<AttributtKategori title=\"Nasjonalitet\">\n\t\t\t\t<Attributt attr={sm.attrs.statsborgerskap} />\n\t\t\t\t<Attributt\n\t\t\t\t\tattr={sm.attrs.innvandretFraLand}\n\t\t\t\t\tdisabled={innvandret(personFoerLeggTil)}\n\t\t\t\t\ttitle={\n\t\t\t\t\t\tinnvandret(personFoerLeggTil)\n\t\t\t\t\t\t\t? 'Personen må utvandre før den kan innvandre igjen'\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Attributt\n\t\t\t\t\tattr={sm.attrs.utvandretTilLand}\n\t\t\t\t\tdisabled={leggTil && !innvandret(personFoerLeggTil)}\n\t\t\t\t\ttitle={\n\t\t\t\t\t\tleggTil && !innvandret(personFoerLeggTil)\n\t\t\t\t\t\t\t? 'Personen må innvandre før den kan utvandre igjen'\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</AttributtKategori>\n\t\t\t<AttributtKategori title=\"Diverse\">\n\t\t\t\t<Attributt attr={sm.attrs.identtype} vis={leggTil} />\n\t\t\t\t<Attributt attr={sm.attrs.identHistorikk} />\n\t\t\t\t<Attributt attr={sm.attrs.kjonn} vis={!opprettFraEksisterende && !leggTil} />\n\t\t\t\t<Attributt attr={sm.attrs.harMellomnavn} />\n\t\t\t\t<Attributt attr={sm.attrs.sprakKode} />\n\t\t\t\t<Attributt attr={sm.attrs.egenAnsattDatoFom} />\n\t\t\t\t<Attributt attr={sm.attrs.erForsvunnet} />\n\t\t\t\t<Attributt attr={sm.attrs.harBankkontonr} />\n\t\t\t\t<Attributt attr={sm.attrs.telefonnummer_1} />\n\t\t\t\t<Attributt attr={sm.attrs.spesreg} />\n\t\t\t\t<Attributt attr={sm.attrs.vergemaal} />\n\t\t\t\t<Attributt attr={sm.attrs.fullmakt} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nPersoninformasjonPanel.heading = 'Personinformasjon'\n\nPersoninformasjonPanel.initialValues = ({ set, setMulti, del, has, opts }) => {\n\tconst { personFoerLeggTil } = opts\n\n\treturn {\n\t\talder: {\n\t\t\tlabel: 'Alder',\n\t\t\tchecked: has('tpsf.alder') || has('tpsf.foedtEtter') || has('tpsf.foedtFoer'),\n\t\t\tadd: () => set('tpsf.alder', Formatters.randomIntInRange(30, 60)),\n\t\t\tremove: () => del(['tpsf.alder', 'tpsf.foedtEtter', 'tpsf.foedtFoer'])\n\t\t},\n\t\tdoedsdato: {\n\t\t\tlabel: 'Dødsdato',\n\t\t\tchecked: has('tpsf.doedsdato'),\n\t\t\tadd: () => set('tpsf.doedsdato', null),\n\t\t\tremove: () => del('tpsf.doedsdato')\n\t\t},\n\t\tstatsborgerskap: {\n\t\t\tlabel: 'Statsborgerskap',\n\t\t\tchecked: has('tpsf.statsborgerskap'),\n\t\t\tadd() {\n\t\t\t\tsetMulti(\n\t\t\t\t\t['tpsf.statsborgerskap', ''],\n\t\t\t\t\t['tpsf.statsborgerskapRegdato', null],\n\t\t\t\t\t['tpsf.statsborgerskapTildato', null]\n\t\t\t\t)\n\t\t\t},\n\t\t\tremove() {\n\t\t\t\tdel(\n\t\t\t\t\t['tpsf.statsborgerskap', 'tpsf.statsborgerskapRegdato'],\n\t\t\t\t\t['tpsf.statsborgerskap', 'tpsf.statsborgerskapTildato']\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tinnvandretFraLand: {\n\t\t\tlabel: 'Innvandret fra',\n\t\t\tchecked: has('tpsf.innvandretFraLand'),\n\t\t\tadd() {\n\t\t\t\tsetMulti(['tpsf.innvandretFraLand', ''], ['tpsf.innvandretFraLandFlyttedato', null])\n\t\t\t},\n\t\t\tremove() {\n\t\t\t\tdel(['tpsf.innvandretFraLand', 'tpsf.innvandretFraLandFlyttedato'])\n\t\t\t}\n\t\t},\n\t\tutvandretTilLand: {\n\t\t\tlabel: 'Utvandret til',\n\t\t\tchecked: has('tpsf.utvandretTilLand'),\n\t\t\tadd() {\n\t\t\t\tsetMulti(['tpsf.utvandretTilLand', ''], ['tpsf.utvandretTilLandFlyttedato', null])\n\t\t\t},\n\t\t\tremove() {\n\t\t\t\tdel(['tpsf.utvandretTilLand', 'tpsf.utvandretTilLandFlyttedato'])\n\t\t\t}\n\t\t},\n\t\tidentHistorikk: {\n\t\t\tlabel: 'Identhistorikk',\n\t\t\tchecked: has('tpsf.identHistorikk'),\n\t\t\tadd: () =>\n\t\t\t\tset('tpsf.identHistorikk', [\n\t\t\t\t\t{\n\t\t\t\t\t\tfoedtEtter: null,\n\t\t\t\t\t\tfoedtFoer: null,\n\t\t\t\t\t\tidenttype: null,\n\t\t\t\t\t\tkjonn: null,\n\t\t\t\t\t\tregdato: null\n\t\t\t\t\t}\n\t\t\t\t]),\n\t\t\tremove: () => del('tpsf.identHistorikk')\n\t\t},\n\t\tkjonn: {\n\t\t\tlabel: 'Kjønn',\n\t\t\tchecked: has('tpsf.kjonn'),\n\t\t\tadd: () => set('tpsf.kjonn', ''),\n\t\t\tremove: () => del('tpsf.kjonn')\n\t\t},\n\t\tharMellomnavn: {\n\t\t\tlabel: 'Har mellomnavn',\n\t\t\tchecked: has('tpsf.harMellomnavn'),\n\t\t\tadd: () => set('tpsf.harMellomnavn', true),\n\t\t\tremove: () => del('tpsf.harMellomnavn')\n\t\t},\n\t\tsprakKode: {\n\t\t\tlabel: 'Språk',\n\t\t\tchecked: has('tpsf.sprakKode'),\n\t\t\tadd: () => set('tpsf.sprakKode', ''),\n\t\t\tremove: () => del('tpsf.sprakKode')\n\t\t},\n\t\tegenAnsattDatoFom: {\n\t\t\tlabel: 'Skjerming',\n\t\t\tchecked: has('tpsf.egenAnsattDatoFom'),\n\t\t\tadd() {\n\t\t\t\tsetMulti(\n\t\t\t\t\t[\n\t\t\t\t\t\t'tpsf.egenAnsattDatoFom',\n\t\t\t\t\t\t_get(personFoerLeggTil, 'tpsf.egenAnsattDatoFom') || new Date()\n\t\t\t\t\t],\n\t\t\t\t\t['tpsf.egenAnsattDatoTom', undefined]\n\t\t\t\t)\n\t\t\t},\n\t\t\tremove() {\n\t\t\t\tdel(['tpsf.egenAnsattDatoFom', 'tpsf.egenAnsattDatoTom'])\n\t\t\t}\n\t\t},\n\t\terForsvunnet: {\n\t\t\tlabel: 'Forsvunnet',\n\t\t\tchecked: has('tpsf.erForsvunnet'),\n\t\t\tadd() {\n\t\t\t\tsetMulti(['tpsf.erForsvunnet', true], ['tpsf.forsvunnetDato', null])\n\t\t\t},\n\t\t\tremove() {\n\t\t\t\tdel(['tpsf.erForsvunnet', 'tpsf.forsvunnetDato'])\n\t\t\t}\n\t\t},\n\t\tharBankkontonr: {\n\t\t\tlabel: 'Bankkontonummer',\n\t\t\tchecked: has('tpsf.harBankkontonr'),\n\t\t\tadd() {\n\t\t\t\tsetMulti(['tpsf.harBankkontonr', true], ['tpsf.bankkontonrRegdato', null])\n\t\t\t},\n\t\t\tremove() {\n\t\t\t\tdel(['tpsf.harBankkontonr', 'tpsf.bankkontonrRegdato'])\n\t\t\t}\n\t\t},\n\t\ttelefonnummer_1: {\n\t\t\tlabel: 'Telefonnummer',\n\t\t\tchecked: has('tpsf.telefonnummer_1'),\n\t\t\tadd() {\n\t\t\t\tsetMulti(['tpsf.telefonLandskode_1', ''], ['tpsf.telefonnummer_1', ''])\n\t\t\t},\n\t\t\tremove() {\n\t\t\t\tdel([\n\t\t\t\t\t'tpsf.telefonLandskode_1',\n\t\t\t\t\t'tpsf.telefonnummer_1',\n\t\t\t\t\t'tpsf.telefonLandskode_2',\n\t\t\t\t\t'tpsf.telefonnummer_2'\n\t\t\t\t])\n\t\t\t}\n\t\t},\n\t\tspesreg: {\n\t\t\tlabel: 'Diskresjonskode',\n\t\t\tchecked: has('tpsf.spesreg') || has('tpsf.utenFastBopel'),\n\t\t\tadd() {\n\t\t\t\tsetMulti(['tpsf.spesreg', ''], ['tpsf.utenFastBopel', false])\n\t\t\t},\n\t\t\tremove() {\n\t\t\t\tdel(['tpsf.spesreg', 'tpsf.utenFastBopel'])\n\t\t\t}\n\t\t},\n\t\tidenttype: {\n\t\t\tlabel: 'Identtype',\n\t\t\tchecked: has('tpsf.identtype'),\n\t\t\tadd: () => setMulti(['tpsf.identtype', ''], ['tpsf.alder', personFoerLeggTil?.tpsf?.alder]),\n\t\t\tremove: () => del(['tpsf.identtype', 'tpsf.alder', 'tpsf.foedtEtter', 'tpsf.foedtFoer'])\n\t\t},\n\t\tvergemaal: {\n\t\t\tlabel: 'Vergemål',\n\t\t\tchecked: has('tpsf.vergemaal'),\n\t\t\tadd: () =>\n\t\t\t\tset('tpsf.vergemaal', {\n\t\t\t\t\tembete: null,\n\t\t\t\t\tsakType: null,\n\t\t\t\t\tmandatType: null,\n\t\t\t\t\tvedtakDato: null,\n\t\t\t\t\tidentType: null,\n\t\t\t\t\tharMellomnavn: null\n\t\t\t\t}),\n\t\t\tremove: () => del('tpsf.vergemaal')\n\t\t},\n\t\tfullmakt: {\n\t\t\tlabel: 'Fullmakt',\n\t\t\tchecked: has('tpsf.fullmakt'),\n\t\t\tadd: () =>\n\t\t\t\tset('tpsf.fullmakt', {\n\t\t\t\t\tkilde: '',\n\t\t\t\t\tomraader: [],\n\t\t\t\t\tgyldigFom: null,\n\t\t\t\t\tgyldigTom: null,\n\t\t\t\t\tidentType: null,\n\t\t\t\t\tharMellomnavn: null\n\t\t\t\t}),\n\t\t\tremove: () => del('tpsf.fullmakt')\n\t\t}\n\t}\n}\n","import React from 'react'\nimport Hjelpetekst from '~/components/hjelpetekst'\nimport cn from 'classnames'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\n\nimport './kategori.less'\n\nexport const Kategori = ({\n\ttitle = 'Kategori',\n\tflex = true,\n\tvis = null,\n\thjelpetekst = null,\n\tchildren\n}) => {\n\tconst css = cn({\n\t\t'form-kategori-flex': flex\n\t})\n\tconst render = (\n\t\t<div className=\"form-kategori\">\n\t\t\t{title && (\n\t\t\t\t<h4>\n\t\t\t\t\t{title} {hjelpetekst && <Hjelpetekst hjelpetekstFor={title}>{hjelpetekst}</Hjelpetekst>}\n\t\t\t\t</h4>\n\t\t\t)}\n\t\t\t<div className={css}>{children}</div>\n\t\t</div>\n\t)\n\n\treturn vis ? <Vis attributt={vis}>{render}</Vis> : render\n}\n","import React, { useState } from 'react'\n// @ts-ignore\nimport { DollyTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { DollySelect } from '~/components/ui/form/inputs/select/Select'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport Hjelpetekst from '~/components/hjelpetekst'\nimport styled from 'styled-components'\n\nimport { Søkeknapp } from 'nav-frontend-ikonknapper'\n\ntype Props = {\n\tonSubmit: (search: { adressenavn?: string; postnummer?: string; kommunenummer?: string }) => void\n\tloading?: boolean\n}\n\nconst InputGroup = styled.div`\n\tdisplay: flex;\n`\nconst HeaderGroup = styled.div`\n\tdisplay: flex;\n`\n\nexport default ({ onSubmit, loading = false }: Props) => {\n\tconst [adressenavn, setAdressenavn] = useState<string>('')\n\tconst [postnummer, setPostnummer] = useState<string>(null)\n\tconst [kommunenummer, setKommunenummer] = useState<string>(null)\n\n\tconst informasjonstekst =\n\t\t'Vi er avhengig av at adressen er helt korrekt. Bruk ingen, ett eller flere av søkefeltene for å få forslag til adresse.'\n\n\treturn (\n\t\t<div>\n\t\t\t<HeaderGroup>\n\t\t\t\t<h4>Søk etter gyldig adresse</h4>\n\t\t\t\t<Hjelpetekst hjelpetekstFor=\"Søk etter gyldig adresse\">{informasjonstekst}</Hjelpetekst>\n\t\t\t</HeaderGroup>\n\t\t\t<InputGroup>\n\t\t\t\t<DollyTextInput\n\t\t\t\t\tname=\"adressenavn\"\n\t\t\t\t\tlabel=\"Adressenavn\"\n\t\t\t\t\tvalue={adressenavn}\n\t\t\t\t\tonChange={(e: any) => setAdressenavn(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<DollySelect\n\t\t\t\t\tname=\"postnummer\"\n\t\t\t\t\tlabel=\"Postnummer\"\n\t\t\t\t\tkodeverk={AdresseKodeverk.PostnummerUtenPostboks}\n\t\t\t\t\tsize=\"grow\"\n\t\t\t\t\tvalue={postnummer}\n\t\t\t\t\tonChange={(e: any) => setPostnummer(e ? e.value : null)}\n\t\t\t\t/>\n\t\t\t\t<DollySelect\n\t\t\t\t\tname=\"kommunenummer\"\n\t\t\t\t\tlabel=\"Kommunenummer\"\n\t\t\t\t\tkodeverk={AdresseKodeverk.Kommunenummer}\n\t\t\t\t\tsize=\"grow\"\n\t\t\t\t\tvalue={kommunenummer}\n\t\t\t\t\tonChange={(e: any) => setKommunenummer(e ? e.value : null)}\n\t\t\t\t/>\n\t\t\t</InputGroup>\n\t\t\t<Søkeknapp\n\t\t\t\tonClick={() => onSubmit({ adressenavn, postnummer, kommunenummer })}\n\t\t\t\tdisabled={loading}\n\t\t\t\tspinner={loading}\n\t\t\t>\n\t\t\t\t<span>Hent gyldige adresser</span>\n\t\t\t</Søkeknapp>\n\t\t</div>\n\t)\n}\n","import api from '@/api'\n\ntype AdresseRequest = {\n\tmatrikkelId?: string\n\tadressenavn?: string\n\thusnummer?: number\n\thusbokstav?: string\n\tpostnummer?: string\n\tpoststed?: string\n\tkommunenummer?: string\n\tkommunenavn?: string\n\tbydelsnummer?: string\n\tbydelsnavn?: string\n\ttilleggsnavn?: string\n\tfritekst?: string\n}\n\ntype MatrikkelAdresseRequest = {\n\tmatrikkelId?: string\n\tkommunenummer?: string\n\tgaardsnummer?: string\n\tbruksnummer?: string\n\tpostnummer?: string\n\tpoststed?: string\n\ttilleggsnavn?: string\n}\n\nexport type Adresse = {\n\tmatrikkelId: string\n\tadressekode: string\n\tadressenavn: string\n\thusnummer: number\n\thusbokstav?: string\n\tpostnummer: string\n\tpoststed: string\n\tkommunenummer: string\n\tkommunenavn: string\n\tbydelsnummer?: string\n\tbydelsnavn?: string\n\ttilleggsnavn?: string\n\tfylkesnummer: string\n\tfylkesnavn: string\n}\n\nexport type MatrikkelAdresse = {\n\tmatrikkelId: string\n\tkommunenummer: string\n\tgaardsnummer: string\n\tbruksnummer: string\n\tpostnummer: string\n\tpoststed: string\n\ttilleggsnavn: string\n}\n\nconst getQueryParms = (request: any) => {\n\tconst keys = Object.keys(request).filter(\n\t\t(key: keyof Request) => request[key] && request[key] !== ''\n\t)\n\tif (keys.length === 0) {\n\t\treturn ''\n\t}\n\treturn '?' + keys.map((key: keyof Request) => `${key}=${request[key]}`).join('&')\n}\n\nexport default {\n\thentAdresser(request: AdresseRequest, antall: number = 1): Promise<Adresse[]> {\n\t\treturn api.fetchJson(`/testnav-adresse-service/api/v1/adresser/veg${getQueryParms(request)}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: { antall: antall.toString() }\n\t\t})\n\t},\n\thentMatrikkelAdresser(\n\t\trequest: MatrikkelAdresseRequest,\n\t\tantall: number = 10\n\t): Promise<MatrikkelAdresse[]> {\n\t\treturn api.fetchJson(\n\t\t\t`/testnav-adresse-service/api/v1/adresser/matrikkeladresse${getQueryParms(request)}`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: { antall: antall.toString() }\n\t\t\t}\n\t\t)\n\t}\n}\n","import React, { useState } from 'react'\nimport AdresseSok from './AdresseSok'\nimport { AlertStripeFeil, AlertStripeAdvarsel } from 'nav-frontend-alertstriper'\nimport styled from 'styled-components'\nimport AdresseService, { Adresse } from '~/service/services/AdresseService'\nimport { DollySelect } from '~/components/ui/form/inputs/select/Select'\nimport { NotFoundError } from '~/error'\n\nconst StyledAdresseVelger = styled.div`\n\tbackground-color: #edf2ff;\n\tpadding: 10px 20px;\n\tmargin-bottom: 20px;\n`\ntype Search = {\n\tadressenavn?: string\n\tpostnummer?: string\n\tkommunenummer?: string\n}\n\nconst Feil = styled(AlertStripeFeil)`\n\tmargin-top: 15px;\n`\nconst Advarsel = styled(AlertStripeAdvarsel)`\n\tmargin-top: 15px;\n`\n\ntype Props = {\n\tonSelect: (adresse: Adresse) => void\n}\n\nexport default ({ onSelect }: Props) => {\n\tconst [adresser, setAdresser] = useState<Adresse[]>()\n\tconst [adresse, setAdresse] = useState<Adresse>()\n\tconst [loading, setLoading] = useState<boolean>(false)\n\tconst [notFound, setNotFound] = useState<boolean>(false)\n\tconst [error, setError] = useState<boolean>(false)\n\n\tconst findAdresse = (matrikkelId: string) =>\n\t\tadresser.find(value => value.matrikkelId === matrikkelId)\n\n\tconst getLabel = ({ adressenavn, husnummer, husbokstav, postnummer, poststed }: Adresse) =>\n\t\t`${adressenavn} ${husnummer}${husbokstav ? husbokstav : ''}, ${postnummer} ${poststed}`\n\n\tconst onSubmit = (search: Search) => {\n\t\tsetLoading(true)\n\t\tsetNotFound(false)\n\t\tsetError(false)\n\t\tsetAdresser(null)\n\t\treturn AdresseService.hentAdresser(search, 10)\n\t\t\t.then(adresser => {\n\t\t\t\tsetAdresser(adresser)\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t\t\t.catch((e: Error) => {\n\t\t\t\tsetLoading(false)\n\t\t\t\tif (e && (e instanceof NotFoundError || e.name == 'NotFoundError')) {\n\t\t\t\t\tsetNotFound(true)\n\t\t\t\t} else {\n\t\t\t\t\tsetError(true)\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<StyledAdresseVelger>\n\t\t\t<AdresseSok onSubmit={onSubmit} loading={loading} />\n\t\t\t{error && <Feil>Noe gikk galt! Prøv på nytt eller kontakt team Dolly.</Feil>}\n\t\t\t{notFound && (\n\t\t\t\t<Advarsel>Fant ikke et resultat. Prøv å endre kombinasjon av felter i søket.</Advarsel>\n\t\t\t)}\n\t\t\t{adresser && (\n\t\t\t\t<>\n\t\t\t\t\t<h4>Velg adresse</h4>\n\t\t\t\t\t<DollySelect\n\t\t\t\t\t\tname=\"adresse\"\n\t\t\t\t\t\tlabel=\"Adresse\"\n\t\t\t\t\t\tsize=\"grow\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\toptions={adresser.map(value => ({\n\t\t\t\t\t\t\tvalue: value.matrikkelId,\n\t\t\t\t\t\t\tlabel: getLabel(value)\n\t\t\t\t\t\t}))}\n\t\t\t\t\t\tvalue={adresse ? adresse.matrikkelId : null}\n\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\tconst value = findAdresse(e.value)\n\t\t\t\t\t\t\tsetAdresse(value)\n\t\t\t\t\t\t\tonSelect(value)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</StyledAdresseVelger>\n\t)\n}\n","import React, { useState } from 'react'\n// @ts-ignore\nimport { DollyTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { DollySelect } from '~/components/ui/form/inputs/select/Select'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport Hjelpetekst from '~/components/hjelpetekst'\nimport styled from 'styled-components'\n\nimport { Søkeknapp } from 'nav-frontend-ikonknapper'\n\ntype Props = {\n\tonSubmit: (search: {\n\t\tkommunenummer?: string\n\t\tgaardsnummer?: string\n\t\tbruksnummer?: string\n\t}) => void\n\tloading?: boolean\n}\n\nconst InputGroup = styled.div`\n\tdisplay: flex;\n`\nconst HeaderGroup = styled.div`\n\tdisplay: flex;\n`\n\nexport default ({ onSubmit, loading = false }: Props) => {\n\tconst [kommunenummer, setKommunenummer] = useState<string>('')\n\tconst [gaardsnummer, setGaardsnummer] = useState<string>('')\n\tconst [bruksnummer, setBruksnummer] = useState<string>('')\n\n\tconst informasjonstekst =\n\t\t'Bruk ingen, ett eller flere av søkefeltene for å få en liste med tilfeldige matrikkeladresser.'\n\n\treturn (\n\t\t<div>\n\t\t\t<HeaderGroup>\n\t\t\t\t<h4>Søk etter tilfeldig matrikkeladresse</h4>\n\t\t\t\t<Hjelpetekst hjelpetekstFor=\"Søk etter tilfeldig matrikkeladresse\">\n\t\t\t\t\t{informasjonstekst}\n\t\t\t\t</Hjelpetekst>\n\t\t\t</HeaderGroup>\n\t\t\t<InputGroup>\n\t\t\t\t<DollySelect\n\t\t\t\t\tname=\"kommunenummer\"\n\t\t\t\t\tlabel=\"Kommunenummer\"\n\t\t\t\t\tkodeverk={AdresseKodeverk.Kommunenummer}\n\t\t\t\t\tsize=\"grow\"\n\t\t\t\t\tvalue={kommunenummer}\n\t\t\t\t\tonChange={(e: any) => setKommunenummer(e ? e.value : null)}\n\t\t\t\t/>\n\t\t\t\t<DollyTextInput\n\t\t\t\t\tname=\"gaardsnummer\"\n\t\t\t\t\tlabel=\"Gårdsnummer\"\n\t\t\t\t\tvalue={gaardsnummer}\n\t\t\t\t\tonChange={(e: any) => setGaardsnummer(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<DollyTextInput\n\t\t\t\t\tname=\"bruksnummer\"\n\t\t\t\t\tlabel=\"Bruksnummer\"\n\t\t\t\t\tvalue={bruksnummer}\n\t\t\t\t\tonChange={(e: any) => setBruksnummer(e.target.value)}\n\t\t\t\t/>\n\t\t\t</InputGroup>\n\t\t\t<Søkeknapp\n\t\t\t\tonClick={() => onSubmit({ kommunenummer, gaardsnummer, bruksnummer })}\n\t\t\t\tdisabled={loading}\n\t\t\t\tspinner={loading}\n\t\t\t>\n\t\t\t\t<span>Hent tilfeldige adresser</span>\n\t\t\t</Søkeknapp>\n\t\t</div>\n\t)\n}\n","import React, { useState } from 'react'\nimport MatrikkelAdresseSok from './MatrikkelAdresseSok'\nimport { AlertStripeFeil, AlertStripeAdvarsel } from 'nav-frontend-alertstriper'\nimport styled from 'styled-components'\nimport AdresseService, { MatrikkelAdresse } from '~/service/services/AdresseService'\nimport { DollySelect } from '~/components/ui/form/inputs/select/Select'\nimport { NotFoundError } from '~/error'\n\nconst StyledAdresseVelger = styled.div`\n\tbackground-color: #edf2ff;\n\tpadding: 10px 20px;\n\tmargin-bottom: 20px;\n`\ntype Search = {\n\tkommunenummer?: string\n\tgaardsnummer?: string\n\tbruksnummer?: string\n}\n\nconst Feil = styled(AlertStripeFeil)`\n\tmargin-top: 15px;\n`\nconst Advarsel = styled(AlertStripeAdvarsel)`\n\tmargin-top: 15px;\n`\n\ntype Props = {\n\tonSelect: (adresse: MatrikkelAdresse) => void\n}\n\nexport default ({ onSelect }: Props) => {\n\tconst [adresser, setAdresser] = useState<MatrikkelAdresse[]>()\n\tconst [adresse, setAdresse] = useState<MatrikkelAdresse>()\n\tconst [loading, setLoading] = useState<boolean>(false)\n\tconst [notFound, setNotFound] = useState<boolean>(false)\n\tconst [error, setError] = useState<boolean>(false)\n\n\tconst findAdresse = (matrikkelId: string) =>\n\t\tadresser.find(value => value.matrikkelId === matrikkelId)\n\n\tconst getLabel = ({\n\t\tkommunenummer,\n\t\tgaardsnummer,\n\t\tbruksnummer,\n\t\tpostnummer,\n\t\tpoststed,\n\t\ttilleggsnavn\n\t}: MatrikkelAdresse) =>\n\t\t`Gårdsnr: ${gaardsnummer}, Bruksnr: ${bruksnummer}, Kommunenr: ${kommunenummer}, ${\n\t\t\ttilleggsnavn ? tilleggsnavn + ',' : ''\n\t\t} ${postnummer} ${poststed}`\n\n\tconst onSubmit = (search: Search) => {\n\t\tsetLoading(true)\n\t\tsetNotFound(false)\n\t\tsetError(false)\n\t\tsetAdresser(null)\n\t\treturn AdresseService.hentMatrikkelAdresser(search, 10)\n\t\t\t.then(adresser => {\n\t\t\t\tsetAdresser(adresser)\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t\t\t.catch((e: Error) => {\n\t\t\t\tsetLoading(false)\n\t\t\t\tif (e && (e instanceof NotFoundError || e.name == 'NotFoundError')) {\n\t\t\t\t\tsetNotFound(true)\n\t\t\t\t} else {\n\t\t\t\t\tsetError(true)\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<StyledAdresseVelger>\n\t\t\t<MatrikkelAdresseSok onSubmit={onSubmit} loading={loading} />\n\t\t\t{error && <Feil>Noe gikk galt! Prøv på nytt eller kontakt team Dolly.</Feil>}\n\t\t\t{notFound && (\n\t\t\t\t<Advarsel>Fant ikke et resultat. Prøv å endre kombinasjon av felter i søket.</Advarsel>\n\t\t\t)}\n\t\t\t{adresser && (\n\t\t\t\t<>\n\t\t\t\t\t<h4>Velg matrikkeladresse</h4>\n\t\t\t\t\t<DollySelect\n\t\t\t\t\t\tname=\"adresse\"\n\t\t\t\t\t\tlabel=\"Matrikkeladresse\"\n\t\t\t\t\t\tsize=\"grow\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\toptions={adresser.map(value => ({\n\t\t\t\t\t\t\tvalue: value.matrikkelId,\n\t\t\t\t\t\t\tlabel: getLabel(value)\n\t\t\t\t\t\t}))}\n\t\t\t\t\t\tvalue={adresse ? adresse.matrikkelId : null}\n\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\tconst value = findAdresse(e.value)\n\t\t\t\t\t\t\tsetAdresse(value)\n\t\t\t\t\t\t\tonSelect(value)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</StyledAdresseVelger>\n\t)\n}\n","import React, { useState } from 'react'\nimport _get from 'lodash/get'\nimport { FormikProps } from 'formik'\nimport { RadioPanelGruppe } from 'nav-frontend-skjema'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { GateadresseDetaljert } from './GateadresseDetaljert'\n\ninterface Gateadresse {\n\tformikBag: FormikProps<{}>\n}\n\nenum GateadresseTyper {\n\tTILFELDIG = 'TILFELDIG',\n\tPOSTNR = 'POSTNR',\n\tKOMMUNENR = 'KOMMUNENR',\n\tGATE = 'GATE'\n}\n\nexport const Gateadresse = ({ formikBag }: Gateadresse) => {\n\tconst gateadresseNrInfo = 'tpsf.midlertidigAdresse.gateadresseNrInfo'\n\tconst norskAdresse = 'tpsf.midlertidigAdresse.norskAdresse'\n\tconst tilleggsadresse = 'tpsf.midlertidigAdresse.norskAdresse.tilleggsadresse'\n\n\tconst getState = () => {\n\t\tif (_get(formikBag.values, gateadresseNrInfo)) {\n\t\t\treturn _get(formikBag.values, `${gateadresseNrInfo}.nummertype`)\n\t\t} else if (_get(formikBag.values, `${norskAdresse}.gatenavn`)) {\n\t\t\treturn GateadresseTyper.GATE\n\t\t} else return GateadresseTyper.TILFELDIG\n\t}\n\n\tconst [gateAdresseType, setGateAdresseType] = useState(getState())\n\n\tconst handleRadioChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst type = event.target.value\n\t\tsetGateAdresseType(type)\n\n\t\tswitch (type) {\n\t\t\tcase GateadresseTyper.TILFELDIG:\n\t\t\t\tformikBag.setFieldValue(norskAdresse, {\n\t\t\t\t\ttilleggsadresse: _get(formikBag.values, tilleggsadresse)\n\t\t\t\t})\n\t\t\t\tformikBag.setFieldValue(gateadresseNrInfo, undefined)\n\t\t\t\tbreak\n\t\t\tcase GateadresseTyper.POSTNR:\n\t\t\t\tformikBag.setFieldValue(norskAdresse, {\n\t\t\t\t\ttilleggsadresse: _get(formikBag.values, tilleggsadresse)\n\t\t\t\t})\n\t\t\t\tformikBag.setFieldValue(gateadresseNrInfo, {\n\t\t\t\t\tnummertype: GateadresseTyper.POSTNR,\n\t\t\t\t\tnummer: ''\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase GateadresseTyper.KOMMUNENR:\n\t\t\t\tformikBag.setFieldValue(norskAdresse, {\n\t\t\t\t\ttilleggsadresse: _get(formikBag.values, tilleggsadresse)\n\t\t\t\t})\n\t\t\t\tformikBag.setFieldValue(gateadresseNrInfo, {\n\t\t\t\t\tnummertype: GateadresseTyper.KOMMUNENR,\n\t\t\t\t\tnummer: ''\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase GateadresseTyper.GATE:\n\t\t\t\tformikBag.setFieldValue(norskAdresse, {\n\t\t\t\t\tpostnr: '',\n\t\t\t\t\tgatenavn: '',\n\t\t\t\t\tgatekode: '',\n\t\t\t\t\thusnr: '',\n\t\t\t\t\ttilleggsadresse: _get(formikBag.values, tilleggsadresse)\n\t\t\t\t})\n\t\t\t\tformikBag.setFieldValue(gateadresseNrInfo, undefined)\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"flexbox--full-width\">\n\t\t\t{/* \n            // @ts-ignore */}\n\t\t\t<RadioPanelGruppe\n\t\t\t\tname=\"gateAdresseType\"\n\t\t\t\tlegend=\"Hva slags midlertidig gateadresse vil du opprette?\"\n\t\t\t\tradios={[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Tilfeldig gateadresse',\n\t\t\t\t\t\tvalue: GateadresseTyper.TILFELDIG,\n\t\t\t\t\t\tid: GateadresseTyper.TILFELDIG\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Tilfeldig gateadresse basert på postnummer ...',\n\t\t\t\t\t\tvalue: GateadresseTyper.POSTNR,\n\t\t\t\t\t\tid: GateadresseTyper.POSTNR\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Tilfeldig gateadresse basert på kommunenummer ...',\n\t\t\t\t\t\tvalue: GateadresseTyper.KOMMUNENR,\n\t\t\t\t\t\tid: GateadresseTyper.KOMMUNENR\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Gateadresse detaljert ...',\n\t\t\t\t\t\tvalue: GateadresseTyper.GATE,\n\t\t\t\t\t\tid: GateadresseTyper.GATE\n\t\t\t\t\t}\n\t\t\t\t]}\n\t\t\t\tchecked={gateAdresseType}\n\t\t\t\tonChange={handleRadioChange}\n\t\t\t/>\n\t\t\t{[GateadresseTyper.POSTNR, GateadresseTyper.KOMMUNENR].includes(gateAdresseType) && (\n\t\t\t\t<Kategori title=\"Generer midlertidig adresse ...\">\n\t\t\t\t\t{gateAdresseType === GateadresseTyper.POSTNR && (\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${gateadresseNrInfo}.nummer`}\n\t\t\t\t\t\t\tlabel=\"Postnummer\"\n\t\t\t\t\t\t\tkodeverk={AdresseKodeverk.PostnummerUtenPostboks}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{gateAdresseType === GateadresseTyper.KOMMUNENR && (\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${gateadresseNrInfo}.nummer`}\n\t\t\t\t\t\t\tlabel=\"Kommunenummer\"\n\t\t\t\t\t\t\tkodeverk={AdresseKodeverk.Kommunenummer}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Kategori>\n\t\t\t)}\n\t\t\t{gateAdresseType === GateadresseTyper.GATE && <GateadresseDetaljert formikBag={formikBag} />}\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport _has from 'lodash/has'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { DollyTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport './Boadresse.less'\nimport { DollyApi } from '~/service/Api'\nimport LoadableComponent from '~/components/ui/loading/LoadableComponent'\nimport { ErrorBoundary } from '~/components/ui/appError/ErrorBoundary'\nimport { AdresseVelger } from '~/components/adresseVelger'\n\nexport const Boadresse = ({ formikBag }) => {\n\tconst settBoadresse = adresse => {\n\t\tformikBag.setFieldValue('tpsf.boadresse', {\n\t\t\tbolignr: formikBag.values.tpsf.boadresse.bolignr,\n\t\t\tflyttedato: formikBag.values.tpsf.boadresse.flyttedato,\n\t\t\ttilleggsadresse: formikBag.values.tpsf.boadresse.tilleggsadresse,\n\t\t\tadressetype: 'GATE',\n\t\t\tmatrikkelId: adresse.matrikkelId,\n\t\t\tpostnr: adresse.postnummer,\n\t\t\tpoststed: adresse.poststed,\n\t\t\tgateadresse: adresse.adressenavn,\n\t\t\tgatekode: adresse.adressekode,\n\t\t\thusnummer: adresse.husnummer,\n\t\t\tkommunenr: adresse.kommunenummer\n\t\t})\n\t}\n\n\tconst renderAdresse = postnummerListe => {\n\t\tconst { gateadresse, husnummer, postnr } = formikBag.values.tpsf.boadresse\n\t\tlet poststed = formikBag.values.tpsf.boadresse.poststed\n\t\tif (!gateadresse) return ''\n\n\t\tif (postnummerListe.koder && postnr && !poststed) {\n\t\t\tfor (let i = 0; i < postnummerListe.koder.length; i++) {\n\t\t\t\tif (postnummerListe.koder[i].value === postnr) {\n\t\t\t\t\tpoststed = postnummerListe.koder[i].label\n\t\t\t\t\tformikBag.setFieldValue('tpsf.boadresse.poststed', poststed)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn `${gateadresse} ${parseInt(husnummer)}, ${postnr} ${poststed}`\n\t}\n\n\tconst feilmelding = feil => {\n\t\tif (\n\t\t\t!_get(formikBag.values, 'tpsf.boadresse.gateadresse') &&\n\t\t\t_has(formikBag.touched, 'tpsf.boadresse.gateadresse')\n\t\t) {\n\t\t\treturn { feilmelding: _get(formikBag.errors, 'tpsf.boadresse.gateadresse') }\n\t\t} else return feil\n\t}\n\treturn (\n\t\t<Kategori title=\"Gateadresse\">\n\t\t\t<div className=\"gateadresse\">\n\t\t\t\t<AdresseVelger onSelect={settBoadresse} formikBag={formikBag} />\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<LoadableComponent\n\t\t\t\t\t\tonFetch={() => DollyApi.getKodeverkByNavn(AdresseKodeverk.PostnummerUtenPostboks)}\n\t\t\t\t\t\trender={(data, feil) => (\n\t\t\t\t\t\t\t<DollyTextInput\n\t\t\t\t\t\t\t\tname=\"boadresse\"\n\t\t\t\t\t\t\t\tsize=\"grow\"\n\t\t\t\t\t\t\t\tvalue={renderAdresse(data.data)}\n\t\t\t\t\t\t\t\tlabel=\"Boadresse\"\n\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t\tplaceholder=\"Ingen valgt adresse\"\n\t\t\t\t\t\t\t\ttitle=\"Endre adressen i adressevelgeren over\"\n\t\t\t\t\t\t\t\tfeil={feilmelding(feil)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</ErrorBoundary>\n\t\t\t</div>\n\t\t</Kategori>\n\t)\n}\n","import React from 'react'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\n\nexport const Postadresser = ({ formikBag }) => {\n\tconst handleAfterChange = selected => {\n\t\treturn formikBag.setFieldValue(\n\t\t\t'tpsf.postadresse[0].postLinje3',\n\t\t\tselected.value + ' ' + selected.data\n\t\t)\n\t}\n\n\treturn (\n\t\t<Kategori title=\"Postadresse\" vis=\"tpsf.postadresse\">\n\t\t\t<FormikSelect\n\t\t\t\tname=\"tpsf.postadresse[0].postLand\"\n\t\t\t\tlabel=\"Land\"\n\t\t\t\tkodeverk={AdresseKodeverk.PostadresseLand}\n\t\t\t\tisClearable={false}\n\t\t\t\tsize=\"large\"\n\t\t\t/>\n\n\t\t\t<FormikTextInput name=\"tpsf.postadresse[0].postLinje1\" label=\"Postlinje 1\" />\n\t\t\t<FormikTextInput name=\"tpsf.postadresse[0].postLinje2\" label=\"Postlinje 2\" />\n\n\t\t\t{formikBag.values.tpsf.postadresse[0].postLand !== 'NOR' && (\n\t\t\t\t<FormikTextInput name=\"tpsf.postadresse[0].postLinje3\" label=\"Postlinje 3\" />\n\t\t\t)}\n\n\t\t\t{formikBag.values.tpsf.postadresse[0].postLand === 'NOR' && (\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"tpsf.postadresse[0].postLinje3\"\n\t\t\t\t\tlabel={'Postnummer/sted'}\n\t\t\t\t\tvalue={formikBag.values.tpsf.postadresse[0].postLinje3.substring(0, 4)}\n\t\t\t\t\tkodeverk={AdresseKodeverk.Postnummer}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tafterChange={handleAfterChange}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Kategori>\n\t)\n}\n","import React from 'react'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\n\nexport const Postboksadresse = () => {\n\tconst norskAdresse = 'tpsf.midlertidigAdresse.norskAdresse'\n\n\treturn (\n\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t<FormikTextInput name={`${norskAdresse}.postboksnr`} label=\"Postboksnummer\" type=\"number\" />\n\t\t\t<FormikTextInput\n\t\t\t\tname={`${norskAdresse}.postboksAnlegg`}\n\t\t\t\tlabel=\"Postboksanlegg\"\n\t\t\t\tsize=\"large\"\n\t\t\t/>\n\t\t\t<FormikSelect\n\t\t\t\tname={`${norskAdresse}.postnr`}\n\t\t\t\tlabel=\"Postnummer\"\n\t\t\t\tkodeverk={AdresseKodeverk.Postnummer}\n\t\t\t\tsize=\"large\"\n\t\t\t\tisClearable={false}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\n\nexport const Stedsadresse = () => {\n\tconst norskAdresse = 'tpsf.midlertidigAdresse.norskAdresse'\n\n\treturn (\n\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t<FormikTextInput name={`${norskAdresse}.eiendomsnavn`} label=\"Eiendomsnavn\" size=\"large\" />\n\t\t\t<FormikSelect\n\t\t\t\tname={`${norskAdresse}.postnr`}\n\t\t\t\tlabel=\"Postnummer\"\n\t\t\t\tkodeverk={AdresseKodeverk.PostnummerUtenPostboks}\n\t\t\t\tsize=\"large\"\n\t\t\t\tisClearable={false}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\n\nexport const UtenlandskAdresse = () => {\n\tconst utenlandskAdresse = 'tpsf.midlertidigAdresse.utenlandskAdresse'\n\n\treturn (\n\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t<FormikTextInput name={`${utenlandskAdresse}.postLinje1`} label=\"Postlinje 1\" size=\"large\" />\n\t\t\t<FormikTextInput name={`${utenlandskAdresse}.postLinje2`} label=\"Postlinje 2\" size=\"large\" />\n\t\t\t<FormikTextInput name={`${utenlandskAdresse}.postLinje3`} label=\"Postlinje 3\" size=\"large\" />\n\t\t\t<FormikSelect\n\t\t\t\tname={`${utenlandskAdresse}.postLand`}\n\t\t\t\tlabel=\"Land\"\n\t\t\t\tkodeverk={AdresseKodeverk.PostadresseLand}\n\t\t\t\tsize=\"large\"\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport _has from 'lodash/has'\nimport { FormikProps } from 'formik'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { DollyTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport LoadableComponent from '~/components/ui/loading/LoadableComponent'\nimport { DollyApi } from '~/service/Api'\nimport { ErrorBoundary } from '~/components/ui/appError/ErrorBoundary'\nimport { Adresse } from '~/service/services/AdresseService'\nimport { AdresseVelger } from '~/components/adresseVelger'\n\ninterface GateadresseDetaljert {\n\tformikBag: FormikProps<{}>\n}\n\nexport const GateadresseDetaljert = ({ formikBag }: GateadresseDetaljert) => {\n\tconst norskAdresse = 'tpsf.midlertidigAdresse.norskAdresse'\n\n\tconst settAdresse = (adresse: Adresse) => {\n\t\tformikBag.setFieldValue(norskAdresse, {\n\t\t\tmatrikkelId: adresse.matrikkelId,\n\t\t\tpostnr: adresse.postnummer,\n\t\t\tpoststed: adresse.poststed,\n\t\t\tgatenavn: adresse.adressenavn,\n\t\t\tgatekode: adresse.adressekode,\n\t\t\thusnr: adresse.husnummer\n\t\t})\n\t}\n\n\tconst renderGateadresse = () => {\n\t\tconst { gatenavn, husnr, postnr, poststed } = _get(formikBag.values, norskAdresse)\n\t\tif (!gatenavn) return ''\n\t\treturn `${gatenavn} ${parseInt(husnr)}, ${postnr} ${poststed}`\n\t}\n\tconst feilmelding = () => {\n\t\tif (\n\t\t\t!_get(formikBag.values, `${norskAdresse}.gatenavn`) &&\n\t\t\t_has(formikBag.touched, `${norskAdresse}.gatenavn`)\n\t\t) {\n\t\t\treturn {\n\t\t\t\tfeilmelding: _get(formikBag.errors, `${norskAdresse}.gatenavn`)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<Kategori title=\"Midlertidig gateadresse\">\n\t\t\t<div className=\"gateadresse\">\n\t\t\t\t<AdresseVelger onSelect={settAdresse} />\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<LoadableComponent\n\t\t\t\t\t\tonFetch={() => DollyApi.getKodeverkByNavn(AdresseKodeverk.PostnummerUtenPostboks)}\n\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t<DollyTextInput\n\t\t\t\t\t\t\t\tname=\"boadresse\"\n\t\t\t\t\t\t\t\tsize=\"grow\"\n\t\t\t\t\t\t\t\tvalue={renderGateadresse()}\n\t\t\t\t\t\t\t\tlabel=\"Boadresse\"\n\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t\tplaceholder=\"Ingen valgt adresse\"\n\t\t\t\t\t\t\t\ttitle=\"Endre adressen i adressevelgeren over\"\n\t\t\t\t\t\t\t\tfeil={feilmelding()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</ErrorBoundary>\n\t\t\t</div>\n\t\t</Kategori>\n\t)\n}\n","import React, { useState } from 'react'\nimport _get from 'lodash/get'\nimport { FormikProps } from 'formik'\nimport { DollyCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport './tilleggsadresse.less'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\n\ninterface TilleggsadresseProps {\n\tformikBag: FormikProps<{ tpsf?: AdresseValues }>\n\ttilleggsadressePath: string\n\toptions: string\n\ttype?: string\n}\n\ninterface AdresseValues {\n\tboadresse?: TilleggsadresseValues\n\tmidlertidigAdresse?: TilleggsadresseValues\n}\n\ninterface TilleggsadresseValues {\n\ttilleggsadresse: {\n\t\ttilleggType: string\n\t\tnummer?: number\n\t}\n}\n\nenum TilleggsTyper {\n\tCoNavn = 'CO_NAVN',\n\tLeilighetsNr = 'LEILIGHET_NR',\n\tSeksjonsNr = 'SEKSJON_NR',\n\tBoligNr = 'BOLIG_NR'\n}\n\nconst initialValues = { tilleggType: '', nummer: '' }\n\nexport const Tilleggsadresse = ({\n\tformikBag,\n\ttilleggsadressePath,\n\toptions,\n\ttype\n}: TilleggsadresseProps) => {\n\tconst [showTilleggsadresse, setShowTilleggsadresse] = useState(\n\t\t_get(formikBag.values, tilleggsadressePath) ? true : false\n\t)\n\n\tconst handleChangeTilleggsadresse = () => {\n\t\tif (!showTilleggsadresse) {\n\t\t\tformikBag.setFieldValue(tilleggsadressePath, initialValues)\n\t\t} else {\n\t\t\tformikBag.setFieldValue(tilleggsadressePath, undefined)\n\t\t}\n\t\tsetShowTilleggsadresse(!showTilleggsadresse)\n\t}\n\n\tconst handleChangeTilleggstype = (type: { value: string; label: string }) => {\n\t\tformikBag.setFieldValue(`${tilleggsadressePath}.tilleggType`, type.value)\n\t\tif (type.value === TilleggsTyper.CoNavn) {\n\t\t\tformikBag.setFieldValue(`${tilleggsadressePath}.nummer`, '')\n\t\t}\n\t}\n\n\tconst showNummer = () => {\n\t\tconst tilleggstype = _get(formikBag.values, `${tilleggsadressePath}.tilleggType`)\n\t\treturn tilleggstype !== TilleggsTyper.CoNavn && tilleggstype !== ''\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"tilleggsadresse-form__switch\">\n\t\t\t\t<h3>Legg til {type}tilleggsadresse </h3>\n\t\t\t\t{\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t<DollyCheckbox\n\t\t\t\t\t\tname=\"aktiver-tilleggsadresse\"\n\t\t\t\t\t\tonChange={handleChangeTilleggsadresse}\n\t\t\t\t\t\tlabel={`Legg til ${type}tilleggsadresse`}\n\t\t\t\t\t\tchecked={showTilleggsadresse}\n\t\t\t\t\t\tisSwitch\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t{showTilleggsadresse && (\n\t\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${tilleggsadressePath}.tilleggType`}\n\t\t\t\t\t\tlabel=\"Tilleggstype\"\n\t\t\t\t\t\toptions={Options(options)}\n\t\t\t\t\t\tonChange={handleChangeTilleggstype}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t\t{showNummer() && (\n\t\t\t\t\t\t<FormikTextInput name={`${tilleggsadressePath}.nummer`} label=\"Nummer\" type=\"number\" />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t)\n}\n","import React, { useState } from 'react'\nimport _get from 'lodash/get'\nimport { FormikProps } from 'formik'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { Postboksadresse } from './partials/midlertidigAdresse/Postboksadresse'\nimport { Stedsadresse } from './partials/midlertidigAdresse/Stedsadresse'\nimport { UtenlandskAdresse } from './partials/midlertidigAdresse/UtenlandskAdresse'\nimport { Gateadresse } from './partials/midlertidigAdresse/Gateadresse'\nimport { Tilleggsadresse } from '~/components/fagsystem/tpsf/form/adresser/partials/Tilleggsadresse/Tilleggsadresse'\nimport { DollySelect } from '~/components/ui/form/inputs/select/Select'\n\ninterface MidlertidigAdresse {\n\tformikBag: FormikProps<{}>\n}\n\ninterface Adressetype {\n\tlabel: string\n\tlowercaseLabel: string\n\tvalue: string\n}\n\nenum AdresseTyper {\n\tGATE = 'GATE',\n\tSTED = 'STED',\n\tPBOX = 'PBOX',\n\tUTAD = 'UTAD'\n}\n\nexport const MidlertidigAdresse = ({ formikBag }: MidlertidigAdresse) => {\n\tconst adressetypePath = 'tpsf.midlertidigAdresse.adressetype'\n\tconst gyldigTom = 'tpsf.midlertidigAdresse.gyldigTom'\n\tconst tilleggsadresse = 'tpsf.midlertidigAdresse.norskAdresse.tilleggsadresse'\n\n\tconst [adressetype, setAdressetype] = useState(_get(formikBag.values, adressetypePath))\n\n\tconst handleAdressetypeChange = (valgt: Adressetype) => {\n\t\tconst type = valgt.value\n\t\tsetAdressetype(type)\n\t\tswitch (type) {\n\t\t\tcase AdresseTyper.GATE:\n\t\t\t\tformikBag.setFieldValue('tpsf.midlertidigAdresse', {\n\t\t\t\t\tadressetype: type,\n\t\t\t\t\tgyldigTom: _get(formikBag.values, gyldigTom),\n\t\t\t\t\tnorskAdresse: {\n\t\t\t\t\t\ttilleggsadresse: _get(formikBag.values, tilleggsadresse)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase AdresseTyper.STED:\n\t\t\t\tformikBag.setFieldValue('tpsf.midlertidigAdresse', {\n\t\t\t\t\tadressetype: type,\n\t\t\t\t\tgyldigTom: _get(formikBag.values, gyldigTom),\n\t\t\t\t\tnorskAdresse: {\n\t\t\t\t\t\tpostnr: '',\n\t\t\t\t\t\teiendomsnavn: '',\n\t\t\t\t\t\ttilleggsadresse: _get(formikBag.values, tilleggsadresse)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase AdresseTyper.PBOX:\n\t\t\t\tformikBag.setFieldValue('tpsf.midlertidigAdresse', {\n\t\t\t\t\tadressetype: type,\n\t\t\t\t\tgyldigTom: _get(formikBag.values, gyldigTom),\n\t\t\t\t\tnorskAdresse: {\n\t\t\t\t\t\tpostnr: '',\n\t\t\t\t\t\tpostboksnr: '',\n\t\t\t\t\t\tpostboksAnlegg: ''\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase AdresseTyper.UTAD:\n\t\t\t\tformikBag.setFieldValue('tpsf.midlertidigAdresse', {\n\t\t\t\t\tadressetype: type,\n\t\t\t\t\tgyldigTom: _get(formikBag.values, gyldigTom),\n\t\t\t\t\tutenlandskAdresse: {\n\t\t\t\t\t\tpostLinje1: '',\n\t\t\t\t\t\tpostLinje2: '',\n\t\t\t\t\t\tpostLinje3: '',\n\t\t\t\t\t\tpostLand: ''\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\t<Kategori title=\"Midlertidig adresse\" vis=\"tpsf.midlertidigAdresse\">\n\t\t\t<DollySelect\n\t\t\t\tname={adressetypePath}\n\t\t\t\tlabel=\"Adressetype\"\n\t\t\t\tvalue={_get(formikBag.values, adressetypePath)}\n\t\t\t\toptions={Options('adresseType')}\n\t\t\t\tsize=\"large\"\n\t\t\t\tisClearable={false}\n\t\t\t\tonChange={handleAdressetypeChange}\n\t\t\t/>\n\t\t\t<FormikDatepicker name={gyldigTom} label=\"Gyldig t.o.m.\" />\n\t\t\t{adressetype === AdresseTyper.GATE && <Gateadresse formikBag={formikBag} />}\n\t\t\t{adressetype === AdresseTyper.STED && <Stedsadresse />}\n\t\t\t{adressetype === AdresseTyper.PBOX && <Postboksadresse />}\n\t\t\t{adressetype === AdresseTyper.UTAD && <UtenlandskAdresse />}\n\t\t\t{(adressetype === AdresseTyper.GATE || adressetype === AdresseTyper.STED) && (\n\t\t\t\t<Tilleggsadresse\n\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\ttilleggsadressePath={tilleggsadresse}\n\t\t\t\t\toptions=\"tilleggstypeMidlertidig\"\n\t\t\t\t\ttype=\"midlertidig \"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Kategori>\n\t)\n}\n","import React from 'react'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { AdresseKodeverk } from '~/config/kodeverk'\n\nexport const MatrikkelAdresse = ({ formikBag }) => {\n\treturn (\n\t\t<Kategori title=\"Matrikkeladresse\">\n\t\t\t<FormikTextInput name=\"tpsf.boadresse.mellomnavn\" label=\"Stedsnavn\" />\n\t\t\t<FormikTextInput name=\"tpsf.boadresse.gardsnr\" label=\"Gårdsnummer\" type=\"number\" min={1} />\n\t\t\t<FormikTextInput name=\"tpsf.boadresse.bruksnr\" label=\"Bruksnummer\" type=\"number\" min={1} />\n\t\t\t<FormikTextInput name=\"tpsf.boadresse.festnr\" label=\"Festenummer\" type=\"number\" min={1} />\n\t\t\t<FormikTextInput name=\"tpsf.boadresse.undernr\" label=\"Undernummer\" type=\"number\" min={1} />\n\t\t\t<FormikSelect\n\t\t\t\tname=\"tpsf.boadresse.postnr\"\n\t\t\t\tlabel=\"Postnummer\"\n\t\t\t\tkodeverk={AdresseKodeverk.PostnummerUtenPostboks}\n\t\t\t\tsize=\"large\"\n\t\t\t\tisClearable={false}\n\t\t\t/>\n\t\t\t<FormikSelect\n\t\t\t\tname=\"tpsf.boadresse.kommunenr\"\n\t\t\t\tlabel=\"Kommunenummer\"\n\t\t\t\tkodeverk={AdresseKodeverk.Kommunenummer}\n\t\t\t\tsize=\"large\"\n\t\t\t\tisClearable={false}\n\t\t\t/>\n\t\t</Kategori>\n\t)\n}\n","import React from 'react'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { AdresseKodeverk } from '~/config/kodeverk'\n\nexport const AdresseNr = ({ formikBag, type }) => {\n\tconst settAdresseNrInfo = adresse => {\n\t\t// Denne bør nok settes fra initalValues i stedet\n\t\tformikBag.setFieldValue('tpsf.boadresse.adressetype', 'MATR')\n\t}\n\n\treturn (\n\t\t<Kategori title=\"Generer adresse ..\">\n\t\t\t{type === 'postnr' && (\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"tpsf.adresseNrInfo.nummer\"\n\t\t\t\t\tlabel=\"Postnummer\"\n\t\t\t\t\tkodeverk={AdresseKodeverk.PostnummerUtenPostboks}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{type === 'kommunenr' && (\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"tpsf.adresseNrInfo.nummer\"\n\t\t\t\t\tlabel=\"Kommunenummer\"\n\t\t\t\t\tkodeverk={AdresseKodeverk.Kommunenummer}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Kategori>\n\t)\n}\n","import React from 'react'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport '../boadresse/Boadresse.less'\nimport { MatrikkelAdresseVelger } from '~/components/adresseVelger'\nimport { FormikProps } from 'formik'\nimport { MatrikkelAdresse } from '~/service/services/AdresseService'\nimport { DollyTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport _get from 'lodash/get'\n\ntype AdresseProps = {\n\tformikBag: FormikProps<{}>\n}\n\nconst renderAdresse = (formikBag: FormikProps<{}>) => {\n\tconst adresseType = _get(formikBag.values, 'tpsf.boadresse.adressetype')\n\tconst kommunenummer = _get(formikBag.values, 'tpsf.boadresse.kommunenr')\n\n\tif (adresseType === 'MATR' && kommunenummer) {\n\t\tconst gaardsnummer = _get(formikBag.values, 'tpsf.boadresse.gardsnr')\n\t\tconst bruksnummer = _get(formikBag.values, 'tpsf.boadresse.bruksnr')\n\t\tconst postnummer = _get(formikBag.values, 'tpsf.boadresse.postnr')\n\t\tconst poststed = _get(formikBag.values, 'tpsf.boadresse.poststed')\n\t\tconst tilleggsnavn = _get(formikBag.values, 'tpsf.boadresse.mellomnavn')\n\t\treturn `Gårdsnr: ${gaardsnummer}, Bruksnr: ${bruksnummer}, Kommunenr: ${kommunenummer}, ${\n\t\t\ttilleggsnavn ? tilleggsnavn + ',' : ''\n\t\t} ${postnummer} ${poststed}`\n\t}\n\treturn 'Ingen valgt adresse'\n}\n\nexport const TilfeldigMatrikkelAdresse = ({ formikBag }: AdresseProps) => {\n\tconst settMatrikkelAdresse = (adresse: MatrikkelAdresse) => {\n\t\tformikBag.setFieldValue('tpsf.boadresse', {\n\t\t\t// @ts-ignore\n\t\t\tbolignr: formikBag.values.tpsf.boadresse.bolignr,\n\t\t\t// @ts-ignore\n\t\t\tflyttedato: formikBag.values.tpsf.boadresse.flyttedato,\n\t\t\t// @ts-ignore\n\t\t\ttilleggsadresse: formikBag.values.tpsf.boadresse.tilleggsadresse,\n\t\t\tmatrikkelId: adresse.matrikkelId,\n\t\t\tadressetype: 'MATR',\n\t\t\tmellomnavn: adresse.tilleggsnavn ? adresse.tilleggsnavn : '',\n\t\t\tgardsnr: adresse.gaardsnummer,\n\t\t\tbruksnr: adresse.bruksnummer,\n\t\t\tfestnr: '',\n\t\t\tundernr: '',\n\t\t\tpostnr: adresse.postnummer,\n\t\t\tpoststed: adresse.poststed,\n\t\t\tkommunenr: adresse.kommunenummer\n\t\t})\n\t}\n\n\treturn (\n\t\t<Kategori title=\"Matrikkeladressse\">\n\t\t\t<div className=\"gateadresse\">\n\t\t\t\t<MatrikkelAdresseVelger onSelect={settMatrikkelAdresse} />\n\t\t\t\t<DollyTextInput\n\t\t\t\t\tname=\"matrikkeladresse\"\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tsize=\"grow\"\n\t\t\t\t\tvalue={renderAdresse(formikBag)}\n\t\t\t\t\tlabel=\"Matrikkeladresse\"\n\t\t\t\t\treadOnly\n\t\t\t\t\ttitle=\"Endre adressen i adressevelgeren over\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Kategori>\n\t)\n}\n","import React, { useState } from 'react'\nimport { RadioPanelGruppe } from 'nav-frontend-skjema'\nimport _get from 'lodash/get'\nimport _has from 'lodash/has'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport Panel from '~/components/ui/panel/Panel'\nimport { panelError, erForste } from '~/components/ui/form/formUtils'\nimport { Boadresse } from './partials/boadresse/Boadresse'\nimport { Postadresser } from './Postadresser'\nimport { MidlertidigAdresse } from './MidlertidigAdresse'\nimport { MatrikkelAdresse } from './partials/matrikkelAdresse/MatrikkelAdresse'\nimport { AdresseNr } from './partials/AdresseNr'\nimport { Tilleggsadresse } from '~/components/fagsystem/tpsf/form/adresser/partials/Tilleggsadresse/Tilleggsadresse'\nimport { TilfeldigMatrikkelAdresse } from '~/components/fagsystem/tpsf/form/adresser/partials/matrikkelAdresse/TilfeldigMatrikkelAdresse'\n\nconst paths = ['tpsf.boadresse', 'tpsf.postadresse', 'tpsf.midlertidigAdresse']\n/* Fordi UFB også bruker boadresse kan vi ikke bare sjekke den. \nFlyttedato er for nye bestillinger. Postnr (detaljert gateadr og matr) og adresseNrInfo er for maler\n*/\nexport const boadressePaths = [\n\t'tpsf.boadresse.bolignr',\n\t'tpsf.boadresse.flyttedato',\n\t'tpsf.boadresse.postnr',\n\t'tpsf.adresseNrInfo'\n]\n\nconst initialBoType = formikBag => {\n\tconst localBoType = sessionStorage.getItem('boType')\n\tconst adresseType = _get(formikBag.values, 'tpsf.boadresse.adressetype')\n\tconst nummertype = _get(formikBag.values, 'tpsf.adresseNrInfo.nummertype')\n\n\tif (nummertype) return nummertype === 'POSTNR' ? 'postnr' : 'kommunenr'\n\telse if (adresseType) {\n\t\tif (adresseType === 'GATE') return 'gate'\n\t\telse if (adresseType === 'MATR') {\n\t\t\treturn localBoType && localBoType === 'matrikkelsok' ? localBoType : 'matrikkel'\n\t\t}\n\t}\n}\n\nexport const Adresser = ({ formikBag }) => {\n\tconst [boType, setBoType] = useState(initialBoType(formikBag))\n\n\t// Sjekker om adresse er valgt på steg 1, da panelet ikke skal vises dersom bare diskresjonskoder (med UFB og kommunenummer) er valgt\n\tconst erValgt = [...boadressePaths, 'tpsf.postadresse', 'tpsf.midlertidigAdresse'].some(path =>\n\t\t_has(formikBag.values, path)\n\t)\n\n\tconst handleRadioChange = e => {\n\t\tconst nyType = e.target.value\n\t\tsetBoType(nyType)\n\t\tsessionStorage.setItem('boType', nyType)\n\n\t\tformikBag.setFieldValue('tpsf.adresseNrInfo', null)\n\t\tformikBag.setFieldValue('tpsf.boadresse', {\n\t\t\tbolignr: _get(formikBag.values.tpsf.boadresse, 'bolignr') || '',\n\t\t\tflyttedato: _get(formikBag.values.tpsf.boadresse, 'flyttedato') || '',\n\t\t\ttilleggsadresse: _get(formikBag.values.tpsf.boadresse, 'tilleggsadresse') || undefined,\n\t\t\tadressetype: 'GATE'\n\t\t})\n\n\t\t// Set and clear values\n\t\tswitch (nyType) {\n\t\t\tcase 'postnr':\n\t\t\t\tformikBag.setFieldValue('tpsf.adresseNrInfo', {\n\t\t\t\t\tnummertype: 'POSTNR',\n\t\t\t\t\tnummer: ''\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase 'kommunenr':\n\t\t\t\tformikBag.setFieldValue('tpsf.adresseNrInfo', {\n\t\t\t\t\tnummertype: 'KOMMUNENR',\n\t\t\t\t\tnummer: ''\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase 'gate':\n\t\t\t\tformikBag.setFieldValue('tpsf.boadresse', {\n\t\t\t\t\tadressetype: 'GATE',\n\t\t\t\t\tgateadresse: '',\n\t\t\t\t\tpostnr: '',\n\t\t\t\t\tpoststed: '',\n\t\t\t\t\tkommunenr: '',\n\t\t\t\t\tgatekode: '',\n\t\t\t\t\thusnummer: '',\n\t\t\t\t\tbolignr: formikBag.values.tpsf.boadresse.bolignr,\n\t\t\t\t\tflyttedato: formikBag.values.tpsf.boadresse.flyttedato,\n\t\t\t\t\ttilleggsadresse: formikBag.values.tpsf.boadresse.tilleggsadresse\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase 'matrikkelsok':\n\t\t\tcase 'matrikkel':\n\t\t\t\tformikBag.setFieldValue('tpsf.boadresse', {\n\t\t\t\t\tadressetype: 'MATR',\n\t\t\t\t\tmellomnavn: '',\n\t\t\t\t\tgardsnr: '',\n\t\t\t\t\tbruksnr: '',\n\t\t\t\t\tfestnr: '',\n\t\t\t\t\tundernr: '',\n\t\t\t\t\tpostnr: '',\n\t\t\t\t\tkommunenr: '',\n\t\t\t\t\tbolignr: formikBag.values.tpsf.boadresse.bolignr,\n\t\t\t\t\tflyttedato: formikBag.values.tpsf.boadresse.flyttedato,\n\t\t\t\t\ttilleggsadresse: formikBag.values.tpsf.boadresse.tilleggsadresse\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\terValgt && (\n\t\t\t<Vis attributt={paths}>\n\t\t\t\t<Panel\n\t\t\t\t\theading=\"Adresser\"\n\t\t\t\t\thasErrors={panelError(formikBag, paths.concat('tpsf.adresseNrInfo'))}\n\t\t\t\t\ticonType=\"adresse\"\n\t\t\t\t\tstartOpen={() => erForste(formikBag.values, paths)}\n\t\t\t\t>\n\t\t\t\t\t<Vis attributt={boadressePaths}>\n\t\t\t\t\t\t<RadioPanelGruppe\n\t\t\t\t\t\t\tname=\"botype\"\n\t\t\t\t\t\t\tlegend=\"Hva slags boadresse vil du opprette?\"\n\t\t\t\t\t\t\tradios={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Tilfeldig gateadresse basert på postnummer ...',\n\t\t\t\t\t\t\t\t\tvalue: 'postnr',\n\t\t\t\t\t\t\t\t\tid: 'postnr'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Tilfeldig gateadresse basert på kommunenummer ...',\n\t\t\t\t\t\t\t\t\tvalue: 'kommunenr',\n\t\t\t\t\t\t\t\t\tid: 'kommunenr'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Tilfeldig matrikkeladressse ...',\n\t\t\t\t\t\t\t\t\tvalue: 'matrikkelsok',\n\t\t\t\t\t\t\t\t\tid: 'matrikkelsok'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ label: 'Gateadresse detaljert ...', value: 'gate', id: 'gate' },\n\t\t\t\t\t\t\t\t{ label: 'Matrikkeladresse detaljert ...', value: 'matrikkel', id: 'matrikkel' }\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tchecked={boType}\n\t\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{['postnr', 'kommunenr'].includes(boType) && (\n\t\t\t\t\t\t\t<AdresseNr formikBag={formikBag} type={boType} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{boType === 'matrikkelsok' && <TilfeldigMatrikkelAdresse formikBag={formikBag} />}\n\t\t\t\t\t\t{boType === 'gate' && <Boadresse formikBag={formikBag} />}\n\t\t\t\t\t\t{boType === 'matrikkel' && <MatrikkelAdresse formikBag={formikBag} />}\n\t\t\t\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t\t\t\t<FormikTextInput name=\"tpsf.boadresse.bolignr\" label=\"Bruksenhetsnummer\" />\n\t\t\t\t\t\t\t<FormikDatepicker name=\"tpsf.boadresse.flyttedato\" label=\"Flyttedato\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Tilleggsadresse\n\t\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\t\ttilleggsadressePath=\"tpsf.boadresse.tilleggsadresse\"\n\t\t\t\t\t\t\toptions=\"tilleggstype\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Vis>\n\n\t\t\t\t\t<Vis attributt=\"tpsf.postadresse\">\n\t\t\t\t\t\t<Postadresser formikBag={formikBag} />\n\t\t\t\t\t</Vis>\n\t\t\t\t\t<Vis attributt=\"tpsf.midlertidigAdresse\">\n\t\t\t\t\t\t<MidlertidigAdresse formikBag={formikBag} />\n\t\t\t\t\t</Vis>\n\t\t\t\t</Panel>\n\t\t\t</Vis>\n\t\t)\n\t)\n}\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { boadressePaths } from '~/components/fagsystem/tpsf/form/adresser/Adresser'\nimport { Attributt, AttributtKategori } from '../Attributt'\n\nexport const AdressePanel = ({ stateModifier }) => {\n\tconst sm = stateModifier(AdressePanel.initialValues)\n\n\treturn (\n\t\t<Panel\n\t\t\theading={AdressePanel.heading}\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType=\"adresse\"\n\t\t>\n\t\t\t<AttributtKategori title=\"Boadresse\">\n\t\t\t\t<Attributt attr={sm.attrs.boadresse} />\n\t\t\t</AttributtKategori>\n\n\t\t\t<AttributtKategori title=\"Postadresse\">\n\t\t\t\t<Attributt attr={sm.attrs.postadresse} />\n\t\t\t</AttributtKategori>\n\n\t\t\t<AttributtKategori title=\"Midlertidig adresse\">\n\t\t\t\t<Attributt attr={sm.attrs.midlertidigAdresse} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nAdressePanel.heading = 'Adresser'\n\nAdressePanel.initialValues = ({ set, setMulti, del, has }) => ({\n\tboadresse: {\n\t\tlabel: 'Har boadresse',\n\t\tchecked: boadressePaths.some(path => has(path)),\n\t\tadd() {\n\t\t\tsetMulti(['tpsf.boadresse', { flyttedato: null, bolignr: '' }], ['tpsf.adresseNrInfo', null])\n\t\t},\n\t\tremove() {\n\t\t\tdel(['tpsf.boadresse', 'tpsf.adresseNrInfo'])\n\t\t}\n\t},\n\tpostadresse: {\n\t\tlabel: 'Har postadresse',\n\t\tchecked: has('tpsf.postadresse'),\n\t\tadd: () =>\n\t\t\tset('tpsf.postadresse', [\n\t\t\t\t{\n\t\t\t\t\tpostLand: 'NOR',\n\t\t\t\t\tpostLinje1: '',\n\t\t\t\t\tpostLinje2: '',\n\t\t\t\t\tpostLinje3: ''\n\t\t\t\t}\n\t\t\t]),\n\t\tremove: () => del('tpsf.postadresse')\n\t},\n\tmidlertidigAdresse: {\n\t\tlabel: 'Har midlertidig adresse',\n\t\tchecked: has('tpsf.midlertidigAdresse'),\n\t\tadd: () =>\n\t\t\tset('tpsf.midlertidigAdresse', {\n\t\t\t\tadressetype: 'GATE',\n\t\t\t\tgyldigTom: ''\n\t\t\t}),\n\t\tremove: () => del('tpsf.midlertidigAdresse')\n\t}\n})\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\n\nexport const IdentifikasjonPanel = ({ stateModifier }) => {\n\tconst sm = stateModifier(IdentifikasjonPanel.initialValues)\n\n\treturn (\n\t\t<Panel\n\t\t\theading={IdentifikasjonPanel.heading}\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType=\"identifikasjon\"\n\t\t>\n\t\t\t<AttributtKategori title=\"Identifikasjon\">\n\t\t\t\t<Attributt attr={sm.attrs.falskIdentitet} />\n\t\t\t\t<Attributt attr={sm.attrs.utenlandskIdentifikasjonsnummer} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nIdentifikasjonPanel.heading = 'Identifikasjon'\n\nIdentifikasjonPanel.initialValues = ({ set, del, has }) => ({\n\tfalskIdentitet: {\n\t\tlabel: 'Har falsk identitet',\n\t\tchecked: has('pdlforvalter.falskIdentitet'),\n\t\tadd() {\n\t\t\tset('pdlforvalter.falskIdentitet', {\n\t\t\t\trettIdentitet: { identitetType: 'UKJENT', rettIdentitetErUkjent: true }\n\t\t\t})\n\t\t},\n\t\tremove() {\n\t\t\tdel('pdlforvalter.falskIdentitet')\n\t\t}\n\t},\n\tutenlandskIdentifikasjonsnummer: {\n\t\tlabel: 'Har utenlandsk ID',\n\t\tchecked: has('pdlforvalter.utenlandskIdentifikasjonsnummer'),\n\t\tadd: () =>\n\t\t\tset('pdlforvalter.utenlandskIdentifikasjonsnummer', [\n\t\t\t\t{ identifikasjonsnummer: '', kilde: '', opphoert: '', utstederland: '' }\n\t\t\t]),\n\t\tremove: () => del('pdlforvalter.utenlandskIdentifikasjonsnummer')\n\t}\n})\n","import React from 'react'\nimport _get from 'lodash/get'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\nimport Formatters from '~/utils/DataFormatter'\n\nexport const FamilierelasjonPanel = ({ stateModifier }) => {\n\tconst sm = stateModifier(FamilierelasjonPanel.initialValues)\n\n\treturn (\n\t\t<Panel\n\t\t\theading={FamilierelasjonPanel.heading}\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType={'relasjoner'}\n\t\t>\n\t\t\t<AttributtKategori title=\"Partner\">\n\t\t\t\t<Attributt attr={sm.attrs.partner} />\n\t\t\t</AttributtKategori>\n\t\t\t<AttributtKategori title=\"Barn\">\n\t\t\t\t<Attributt attr={sm.attrs.barn} />\n\t\t\t</AttributtKategori>\n\t\t\t<AttributtKategori title=\"Foreldre\">\n\t\t\t\t<Attributt attr={sm.attrs.foreldre} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nFamilierelasjonPanel.heading = 'Familierelasjoner'\n\nFamilierelasjonPanel.initialValues = ({ set, del, has, opts }) => ({\n\tpartner: {\n\t\tlabel: 'Har partner',\n\t\tchecked: has('tpsf.relasjoner.partnere'),\n\t\tadd() {\n\t\t\tset('tpsf.relasjoner.partnere', defaultPartner(opts))\n\t\t},\n\t\tremove() {\n\t\t\tdel('tpsf.relasjoner.partnere')\n\t\t\t!has('tpsf.relasjoner.barn') && !has('tpsf.relasjoner.foreldre') && del('tpsf.relasjoner')\n\t\t}\n\t},\n\tbarn: {\n\t\tlabel: 'Har barn',\n\t\tchecked: has('tpsf.relasjoner.barn'),\n\t\tadd() {\n\t\t\tset('tpsf.relasjoner.barn', defaultBarn(opts))\n\t\t},\n\t\tremove() {\n\t\t\tdel('tpsf.relasjoner.barn')\n\t\t\t!has('tpsf.relasjoner.partnere') && !has('tpsf.relasjoner.foreldre') && del('tpsf.relasjoner')\n\t\t}\n\t},\n\tforeldre: {\n\t\tlabel: 'Har foreldre',\n\t\tchecked: has('tpsf.relasjoner.foreldre'),\n\t\tadd() {\n\t\t\tset('tpsf.relasjoner.foreldre', defaultForeldre(opts))\n\t\t},\n\t\tremove() {\n\t\t\tdel('tpsf.relasjoner.foreldre')\n\t\t\t!has('tpsf.relasjoner.partnere') && !has('tpsf.relasjoner.barn') && del('tpsf.relasjoner')\n\t\t}\n\t}\n})\n\nconst defaultPartner = opts => {\n\tconst fullPartner = [\n\t\t{\n\t\t\tidenttype: 'FNR',\n\t\t\tkjonn: '',\n\t\t\tsivilstander: [{ sivilstand: '', sivilstandRegdato: '' }],\n\t\t\tharFellesAdresse: true,\n\t\t\talder: Formatters.randomIntInRange(30, 60),\n\t\t\tdoedsdato: null,\n\t\t\tspesreg: '',\n\t\t\tutenFastBopel: false,\n\t\t\tstatsborgerskap: '',\n\t\t\tstatsborgerskapRegdato: '',\n\t\t\tstatsborgerskapTildato: ''\n\t\t}\n\t]\n\n\tconst eksisterendePartner = [\n\t\t{\n\t\t\tident: _get(opts, 'personFoerLeggTil.tpsf.relasjoner[0].personRelasjonMed.ident'),\n\t\t\tdoedsdato:\n\t\t\t\t_get(opts, 'personFoerLeggTil.tpsf.relasjoner[0].personRelasjonMed.doedsdato') || null,\n\t\t\tsivilstander: []\n\t\t}\n\t]\n\n\tconst harEksisterendePartner = _get(opts, 'personFoerLeggTil.tpsf.relasjoner', []).some(\n\t\trelasjon => relasjon.relasjonTypeNavn === 'PARTNER'\n\t)\n\n\treturn harEksisterendePartner ? eksisterendePartner : fullPartner\n}\n\nconst defaultForeldre = opts => {\n\tconst fullForelder = [\n\t\t{\n\t\t\tidenttype: 'FNR',\n\t\t\tkjonn: '',\n\t\t\tforeldreType: '',\n\t\t\tsivilstander: [{ sivilstand: '', sivilstandRegdato: '' }],\n\t\t\tharFellesAdresse: true,\n\t\t\tdoedsdato: null,\n\t\t\talder: Formatters.randomIntInRange(65, 100),\n\t\t\tspesreg: '',\n\t\t\tutenFastBopel: false,\n\t\t\tstatsborgerskap: '',\n\t\t\tstatsborgerskapRegdato: '',\n\t\t\tstatsborgerskapTildato: ''\n\t\t}\n\t]\n\n\tconst eksisterendeRelasjoner = _get(opts, 'personFoerLeggTil.tpsf.relasjoner')\n\tconst eksisterendeForeldre =\n\t\teksisterendeRelasjoner &&\n\t\teksisterendeRelasjoner.filter(\n\t\t\trelasjon => relasjon.relasjonTypeNavn === 'MOR' || relasjon.relasjonTypeNavn === 'FAR'\n\t\t)\n\tconst eksisterendeForelderValues =\n\t\teksisterendeForeldre &&\n\t\teksisterendeForeldre.map(forelder => ({\n\t\t\tident: forelder.personRelasjonMed.ident,\n\t\t\tdoedsdato: forelder.personRelasjonMed.doedsdato || null\n\t\t}))\n\n\treturn eksisterendeForelderValues && eksisterendeForelderValues.length > 0\n\t\t? eksisterendeForelderValues\n\t\t: fullForelder\n}\n\nconst defaultBarn = opts => {\n\tconst fullBarn = [\n\t\t{\n\t\t\tidenttype: 'FNR',\n\t\t\tkjonn: '',\n\t\t\tbarnType: '',\n\t\t\tpartnerNr: null,\n\t\t\tborHos: '',\n\t\t\terAdoptert: false,\n\t\t\talder: Formatters.randomIntInRange(0, 17),\n\t\t\tdoedsdato: null,\n\t\t\tspesreg: '',\n\t\t\tutenFastBopel: false,\n\t\t\tstatsborgerskap: '',\n\t\t\tstatsborgerskapRegdato: '',\n\t\t\tstatsborgerskapTildato: ''\n\t\t}\n\t]\n\n\tconst eksisterendeRelasjoner = _get(opts, 'personFoerLeggTil.tpsf.relasjoner')\n\tconst eksisterendeBarn =\n\t\teksisterendeRelasjoner &&\n\t\teksisterendeRelasjoner.filter(relasjon => relasjon.relasjonTypeNavn === 'FOEDSEL')\n\tconst eksisterendeBarnValues =\n\t\teksisterendeBarn &&\n\t\teksisterendeBarn.map(barn => ({\n\t\t\tident: barn.personRelasjonMed.ident,\n\t\t\tdoedsdato: barn.personRelasjonMed.doedsdato || null\n\t\t}))\n\n\treturn eksisterendeBarnValues && eksisterendeBarnValues.length > 0\n\t\t? eksisterendeBarnValues\n\t\t: fullBarn\n}\n","import subYears from 'date-fns/subYears'\n\nexport const initialPeriode = {\n\tfom: null,\n\ttom: null,\n\tperiode: []\n}\n\nexport const initialAmelding = [\n\t{\n\t\tmaaned: null,\n\t\tarbeidsforhold: []\n\t}\n]\n\nexport const initialValues = {\n\tarbeidsforholdstype: '',\n\tgenererPeriode: initialPeriode,\n\tamelding: initialAmelding\n}\n\nexport const initialForenkletOppgjoersordningOrg = {\n\tarbeidsgiver: {\n\t\taktoertype: 'ORG',\n\t\torgnummer: ''\n\t},\n\tansettelsesPeriode: {\n\t\tfom: subYears(new Date(), 20),\n\t\ttom: null,\n\t\tsluttaarsak: null\n\t},\n\tarbeidsavtale: {\n\t\tyrke: ''\n\t}\n}\n\nexport const initialForenkletOppgjoersordningPers = {\n\tarbeidsgiver: {\n\t\taktoertype: 'PERS',\n\t\tident: ''\n\t},\n\tansettelsesPeriode: {\n\t\tfom: subYears(new Date(), 20),\n\t\ttom: null,\n\t\tsluttaarsak: null\n\t},\n\tarbeidsavtale: {\n\t\tyrke: ''\n\t}\n}\n\nexport const initialArbeidsforholdOrg = {\n\tarbeidsgiver: {\n\t\taktoertype: 'ORG',\n\t\torgnummer: ''\n\t},\n\tarbeidsforholdID: '',\n\tansettelsesPeriode: {\n\t\tfom: subYears(new Date(), 20),\n\t\ttom: null,\n\t\tsluttaarsak: null\n\t},\n\tarbeidsavtale: {\n\t\tyrke: '',\n\t\tansettelsesform: 'fast',\n\t\tstillingsprosent: 100,\n\t\tendringsdatoStillingsprosent: null,\n\t\tsisteLoennsendringsdato: null,\n\t\tarbeidstidsordning: 'ikkeSkift',\n\t\tavtaltArbeidstimerPerUke: 37.5\n\t}\n}\n\nexport const initialArbeidsforholdPers = {\n\tarbeidsgiver: {\n\t\taktoertype: 'PERS',\n\t\tident: ''\n\t},\n\tarbeidsforholdID: '',\n\tansettelsesPeriode: {\n\t\tfom: subYears(new Date(), 20),\n\t\ttom: null,\n\t\tsluttaarsak: null\n\t},\n\tarbeidsavtale: {\n\t\tyrke: '',\n\t\tansettelsesform: 'fast',\n\t\tstillingsprosent: 100,\n\t\tendringsdatoStillingsprosent: null,\n\t\tsisteLoennsendringsdato: null,\n\t\tarbeidstidsordning: 'ikkeSkift',\n\t\tavtaltArbeidstimerPerUke: 37.5\n\t}\n}\n\nexport const initialAaregOrg = {\n\tarbeidsforholdstype: '',\n\t...initialArbeidsforholdOrg\n}\n\nexport const initialAaregPers = {\n\tarbeidsforholdstype: '',\n\t...initialArbeidsforholdPers\n}\n\nexport const initialFartoy = [\n\t{\n\t\tskipsregister: '',\n\t\tskipstype: '',\n\t\tfartsomraade: ''\n\t}\n]\n\nexport const initialTimeloennet = {\n\tperiode: {\n\t\tfom: null,\n\t\ttom: null\n\t},\n\tantallTimer: 0\n}\n\nexport const initialUtenlandsopphold = {\n\tperiode: {\n\t\tfom: null,\n\t\ttom: null\n\t},\n\tland: ''\n}\n\nexport const initialPermisjon = {\n\tpermisjonsPeriode: {\n\t\tfom: null,\n\t\ttom: null\n\t},\n\tpermisjonsprosent: 100,\n\tpermisjon: ''\n}\n\nexport const initialPermittering = {\n\tpermitteringsPeriode: {\n\t\tfom: null,\n\t\ttom: null\n\t},\n\tpermitteringsprosent: 100\n}\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\nimport { initialValues } from '~/components/fagsystem/aareg/form/initialValues'\n\nexport const ArbeidInntektPanel = ({ stateModifier }) => {\n\tconst sm = stateModifier(ArbeidInntektPanel.initialValues)\n\n\tconst infoTekst =\n\t\t'Arbeidsforhold: \\nDataene her blir lagt til AAREG. \\n\\nInntekt: \\nSkatte- og inntektsgrunnlag. Inntektene blir lagt i Sigrun-stub.' +\n\t\t'\\n\\nPensjonsgivende inntekt: \\nInntektene blir lagt til i POPP-register. \\n\\nInntektskomponenten: \\nInformasjonen blir lagt i Inntekt-stub.'\n\n\treturn (\n\t\t<Panel\n\t\t\theading={ArbeidInntektPanel.heading}\n\t\t\tinformasjonstekst={infoTekst}\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType=\"arbeid\"\n\t\t>\n\t\t\t<AttributtKategori title=\"Arbeidsforhold (Aareg)\">\n\t\t\t\t<Attributt attr={sm.attrs.aareg} />\n\t\t\t</AttributtKategori>\n\t\t\t<AttributtKategori title=\"Skatteoppgjør (Sigrun)\">\n\t\t\t\t<Attributt attr={sm.attrs.sigrunstub} />\n\t\t\t</AttributtKategori>\n\t\t\t<AttributtKategori title=\"Pensjonsgivende inntekt (POPP)\">\n\t\t\t\t<Attributt attr={sm.attrs.pensjonforvalter} />\n\t\t\t</AttributtKategori>\n\t\t\t<AttributtKategori title=\"A-ordningen (Inntektskomponenten)\">\n\t\t\t\t<Attributt attr={sm.attrs.inntektstub} />\n\t\t\t</AttributtKategori>\n\t\t\t<AttributtKategori title=\"Inntektsmelding (fra Altinn) - beta\">\n\t\t\t\t<Attributt attr={sm.attrs.inntektsmelding} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\n// TODO: Sett initialValue på virksomhet og opplysningspliktig til en random organisasjon, har ikke fått det til å fungere foreløpig\n\nArbeidInntektPanel.heading = 'Arbeid og inntekt'\n\nArbeidInntektPanel.initialValues = ({ set, del, has }) => ({\n\taareg: {\n\t\tlabel: 'Har arbeidsforhold',\n\t\tchecked: has('aareg'),\n\t\tadd: () => set('aareg', [initialValues]),\n\t\tremove() {\n\t\t\tdel('aareg')\n\t\t}\n\t},\n\tsigrunstub: {\n\t\tlabel: 'Har inntekt',\n\t\tchecked: has('sigrunstub'),\n\t\tadd: () =>\n\t\t\tset('sigrunstub', [\n\t\t\t\t{\n\t\t\t\t\tinntektsaar: new Date().getFullYear(),\n\t\t\t\t\ttjeneste: '',\n\t\t\t\t\tgrunnlag: [],\n\t\t\t\t\tsvalbardGrunnlag: []\n\t\t\t\t}\n\t\t\t]),\n\t\tremove: () => del('sigrunstub')\n\t},\n\tinntektsmelding: {\n\t\tlabel: 'Har inntektsmelding',\n\t\tchecked: has('inntektsmelding'),\n\t\tadd: () =>\n\t\t\tset('inntektsmelding', {\n\t\t\t\tinntekter: [\n\t\t\t\t\t{\n\t\t\t\t\t\taarsakTilInnsending: 'NY',\n\t\t\t\t\t\tarbeidsgiver: {\n\t\t\t\t\t\t\tvirksomhetsnummer: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\tarbeidsgiverPrivat: undefined,\n\t\t\t\t\t\tarbeidsforhold: {\n\t\t\t\t\t\t\tarbeidsforholdId: '',\n\t\t\t\t\t\t\tberegnetInntekt: {\n\t\t\t\t\t\t\t\tbeloep: ''\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfoersteFravaersdag: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\tavsendersystem: {\n\t\t\t\t\t\t\tinnsendingstidspunkt: new Date()\n\t\t\t\t\t\t},\n\t\t\t\t\t\trefusjon: {\n\t\t\t\t\t\t\trefusjonsbeloepPrMnd: '',\n\t\t\t\t\t\t\trefusjonsopphoersdato: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnaerRelasjon: false,\n\t\t\t\t\t\tytelse: ''\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tjoarkMetadata: {\n\t\t\t\t\ttema: ''\n\t\t\t\t}\n\t\t\t}),\n\t\tremove: () => del('inntektsmelding')\n\t},\n\tpensjonforvalter: {\n\t\tlabel: 'Har inntekt',\n\t\tchecked: has('pensjonforvalter'),\n\t\tadd: () =>\n\t\t\tset('pensjonforvalter.inntekt', {\n\t\t\t\tfomAar: new Date().getFullYear() - 1,\n\t\t\t\ttomAar: null,\n\t\t\t\tbelop: '',\n\t\t\t\tredusertMedGrunnbelop: true\n\t\t\t}),\n\t\tremove: () => del('pensjonforvalter.inntekt')\n\t},\n\tinntektstub: {\n\t\tlabel: 'Har inntekt',\n\t\tchecked: has('inntektstub'),\n\t\tadd: () =>\n\t\t\tset('inntektstub', {\n\t\t\t\tinntektsinformasjon: [\n\t\t\t\t\t{\n\t\t\t\t\t\tsisteAarMaaned: '',\n\t\t\t\t\t\tantallMaaneder: '',\n\t\t\t\t\t\tvirksomhet: '',\n\t\t\t\t\t\topplysningspliktig: '',\n\t\t\t\t\t\tversjon: null,\n\t\t\t\t\t\tinntektsliste: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbeloep: '',\n\t\t\t\t\t\t\t\tstartOpptjeningsperiode: '',\n\t\t\t\t\t\t\t\tsluttOpptjeningsperiode: '',\n\t\t\t\t\t\t\t\tinntektstype: ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\tfradragsliste: [],\n\t\t\t\t\t\tforskuddstrekksliste: [],\n\t\t\t\t\t\tarbeidsforholdsliste: []\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}),\n\t\tremove() {\n\t\t\tdel('inntektstub')\n\t\t}\n\t}\n})\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\n\nexport const InstitusjonsoppholdPanel = ({ stateModifier }) => {\n\tconst sm = stateModifier(InstitusjonsoppholdPanel.initialValues)\n\n\treturn (\n\t\t<Panel\n\t\t\theading={InstitusjonsoppholdPanel.heading}\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType=\"institusjon\"\n\t\t>\n\t\t\t<AttributtKategori>\n\t\t\t\t<Attributt attr={sm.attrs.instdata} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nInstitusjonsoppholdPanel.heading = 'Institusjonsopphold'\n\nInstitusjonsoppholdPanel.initialValues = ({ set, del, has }) => ({\n\tinstdata: {\n\t\tlabel: 'Har institusjonsopphold',\n\t\tchecked: has('instdata'),\n\t\tadd() {\n\t\t\tset('instdata', [\n\t\t\t\t{\n\t\t\t\t\tinstitusjonstype: '',\n\t\t\t\t\tstartdato: '',\n\t\t\t\t\tsluttdato: ''\n\t\t\t\t}\n\t\t\t])\n\t\t},\n\t\tremove() {\n\t\t\tdel('instdata')\n\t\t}\n\t}\n})\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\n\nexport const KontaktReservasjonsPanel = ({ stateModifier }) => {\n\tconst sm = stateModifier(KontaktReservasjonsPanel.initialValues)\n\n\tconst infoTekst = `KRR - benyttes for offentlige virksomheter for å avklare om den enkelte bruker har reservert seg mot digital kommunikasjon eller ikke.\n\tI tillegg skal varslene som sendes til bruker benytte den kontaktinformasjonen som ligger i registeret.\n\tDette kan enten være mobiltelefonnummer for utsendelse av sms, eller epostadresse for utsendelse av epost. \n\tSikker digital postkasse kan settes på den enkelte bruker og inneholder foreløpig mulighet for Digipost og E-boks`\n\n\treturn (\n\t\t<Panel\n\t\t\theading={KontaktReservasjonsPanel.heading}\n\t\t\tinformasjonstekst={infoTekst}\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType=\"krr\"\n\t\t>\n\t\t\t<AttributtKategori>\n\t\t\t\t<Attributt attr={sm.attrs.krrstub} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nKontaktReservasjonsPanel.heading = 'Kontakt- og reservasjonsregisteret'\n\nKontaktReservasjonsPanel.initialValues = ({ set, del, has }) => ({\n\tkrrstub: {\n\t\tlabel: 'Tilpass standard kontakt- og reservasjonsopplysninger',\n\t\tchecked: has('krrstub'),\n\t\tadd() {\n\t\t\tset('krrstub', {\n\t\t\t\tepost: '',\n\t\t\t\tgyldigFra: null,\n\t\t\t\tmobil: '',\n\t\t\t\tsdpAdresse: '',\n\t\t\t\tsdpLeverandoer: '',\n\t\t\t\tspraak: '',\n\t\t\t\tregistrert: null,\n\t\t\t\treservert: null\n\t\t\t})\n\t\t},\n\t\tremove() {\n\t\t\tdel('krrstub')\n\t\t}\n\t}\n})\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\n\nexport const KontaktDoedsboPanel = ({ stateModifier }) => {\n\tconst sm = stateModifier(KontaktDoedsboPanel.initialValues)\n\n\treturn (\n\t\t<Panel\n\t\t\theading={KontaktDoedsboPanel.heading}\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType=\"doedsbo\"\n\t\t>\n\t\t\t<AttributtKategori>\n\t\t\t\t<Attributt attr={sm.attrs.kontaktinformasjonForDoedsbo} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nKontaktDoedsboPanel.heading = 'Kontaktinformasjon for dødsbo'\n\nKontaktDoedsboPanel.initialValues = ({ set, del, has }) => ({\n\tkontaktinformasjonForDoedsbo: {\n\t\tlabel: 'Har kontaktinformasjon for dødsbo',\n\t\tchecked: has('pdlforvalter.kontaktinformasjonForDoedsbo'),\n\t\tadd() {\n\t\t\tset('pdlforvalter.kontaktinformasjonForDoedsbo', {\n\t\t\t\tadressat: { adressatType: '' },\n\t\t\t\tadresselinje1: '',\n\t\t\t\tadresselinje2: '',\n\t\t\t\tpostnummer: '',\n\t\t\t\tpoststedsnavn: '',\n\t\t\t\tlandkode: 'NOR',\n\t\t\t\tskifteform: '',\n\t\t\t\tutstedtDato: ''\n\t\t\t})\n\t\t},\n\t\tremove() {\n\t\t\tdel('pdlforvalter.kontaktinformasjonForDoedsbo')\n\t\t}\n\t}\n})\n","import React, { useContext } from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\nimport { BestillingsveilederContext } from '~/components/bestillingsveileder/Bestillingsveileder'\n\nexport const ArenaPanel = ({ stateModifier }) => {\n\tconst sm = stateModifier(ArenaPanel.initialValues)\n\tconst opts = useContext(BestillingsveilederContext)\n\n\tconst { personFoerLeggTil } = opts\n\tconst alleredeRegistrert = personFoerLeggTil && personFoerLeggTil.arenaforvalteren\n\tconst alleredeRegistertTitle = 'Bruker allerede registrert i Arena.'\n\n\treturn (\n\t\t<Panel\n\t\t\theading={ArenaPanel.heading}\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType=\"arena\"\n\t\t>\n\t\t\t<AttributtKategori title={'Aktiv bruker'}>\n\t\t\t\t<Attributt\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tsm.attrs.ikkeServicebehov.checked ||\n\t\t\t\t\t\tsm.attrs.aap115.checked ||\n\t\t\t\t\t\tsm.attrs.aap.checked ||\n\t\t\t\t\t\tsm.attrs.dagpenger.checked ||\n\t\t\t\t\t\talleredeRegistrert\n\t\t\t\t\t}\n\t\t\t\t\tattr={sm.attrs.ingenYtelser}\n\t\t\t\t\ttitle={alleredeRegistrert ? alleredeRegistertTitle : null}\n\t\t\t\t/>\n\t\t\t\t<Attributt\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tsm.attrs.ikkeServicebehov.checked || sm.attrs.ingenYtelser.checked || alleredeRegistrert\n\t\t\t\t\t}\n\t\t\t\t\tattr={sm.attrs.aap115}\n\t\t\t\t\ttitle={alleredeRegistrert ? alleredeRegistertTitle : null}\n\t\t\t\t/>\n\t\t\t\t<Attributt\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tsm.attrs.ikkeServicebehov.checked || sm.attrs.ingenYtelser.checked || alleredeRegistrert\n\t\t\t\t\t}\n\t\t\t\t\tattr={sm.attrs.aap}\n\t\t\t\t\ttitle={alleredeRegistrert ? alleredeRegistertTitle : null}\n\t\t\t\t/>\n\t\t\t\t<Attributt\n\t\t\t\t\tdisabled={sm.attrs.ikkeServicebehov.checked || sm.attrs.ingenYtelser.checked}\n\t\t\t\t\tattr={sm.attrs.dagpenger}\n\t\t\t\t/>\n\t\t\t</AttributtKategori>\n\n\t\t\t<AttributtKategori title={'Inaktiv bruker'}>\n\t\t\t\t<Attributt\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tsm.attrs.ingenYtelser.checked ||\n\t\t\t\t\t\tsm.attrs.aap.checked ||\n\t\t\t\t\t\tsm.attrs.aap115.checked ||\n\t\t\t\t\t\tsm.attrs.dagpenger.checked ||\n\t\t\t\t\t\talleredeRegistrert\n\t\t\t\t\t}\n\t\t\t\t\tattr={sm.attrs.ikkeServicebehov}\n\t\t\t\t\ttitle={alleredeRegistrert ? alleredeRegistertTitle : null}\n\t\t\t\t/>\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nArenaPanel.heading = 'Arbeidsytelser'\n\nconst MED_SERVICEBEHOV = ['arenaforvalter.arenaBrukertype', 'MED_SERVICEBEHOV']\nconst AUTOMATISK_INNSENDING_MELDEKORT = ['arenaforvalter.automatiskInnsendingAvMeldekort', true]\n\nArenaPanel.initialValues = ({ set, setMulti, del, has }) => ({\n\taap115: {\n\t\tlabel: '11.5-vedtak',\n\t\tchecked: has('arenaforvalter.aap115'),\n\t\tadd() {\n\t\t\tsetMulti(\n\t\t\t\t[\n\t\t\t\t\t'arenaforvalter.aap115[0]',\n\t\t\t\t\t{\n\t\t\t\t\t\tfraDato: null,\n\t\t\t\t\t\ttilDato: null\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tMED_SERVICEBEHOV,\n\t\t\t\tAUTOMATISK_INNSENDING_MELDEKORT\n\t\t\t)\n\t\t},\n\t\tremove() {\n\t\t\tdel('arenaforvalter.aap115')\n\t\t\t!has('arenaforvalter.aap') && !has('arenaforvalter.dagpenger') && del('arenaforvalter')\n\t\t}\n\t},\n\n\taap: {\n\t\tlabel: 'AAP-vedtak',\n\t\tchecked: has('arenaforvalter.aap'),\n\t\tadd() {\n\t\t\tsetMulti(\n\t\t\t\t[\n\t\t\t\t\t'arenaforvalter.aap[0]',\n\t\t\t\t\t{\n\t\t\t\t\t\tfraDato: null,\n\t\t\t\t\t\ttilDato: null\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tMED_SERVICEBEHOV,\n\t\t\t\tAUTOMATISK_INNSENDING_MELDEKORT\n\t\t\t)\n\t\t},\n\t\tremove() {\n\t\t\tdel('arenaforvalter.aap')\n\t\t\t!has('arenaforvalter.aap115') && !has('arenaforvalter.dagpenger') && del('arenaforvalter')\n\t\t}\n\t},\n\n\tdagpenger: {\n\t\tlabel: 'Dagpengevedtak',\n\t\tchecked: has('arenaforvalter.dagpenger'),\n\t\tadd() {\n\t\t\tsetMulti(\n\t\t\t\t[\n\t\t\t\t\t'arenaforvalter.dagpenger[0]',\n\t\t\t\t\t{\n\t\t\t\t\t\tvedtakstype: 'O',\n\t\t\t\t\t\trettighetKode: 'DAGO',\n\t\t\t\t\t\tfraDato: null,\n\t\t\t\t\t\ttilDato: null,\n\t\t\t\t\t\tmottattDato: null\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tMED_SERVICEBEHOV,\n\t\t\t\tAUTOMATISK_INNSENDING_MELDEKORT\n\t\t\t)\n\t\t},\n\t\tremove() {\n\t\t\tdel('arenaforvalter.dagpenger')\n\t\t\t!has('arenaforvalter.aap115') && !has('arenaforvalter.aap') && del('arenaforvalter')\n\t\t}\n\t},\n\n\tikkeServicebehov: {\n\t\tlabel: 'Har ikke servicebehov',\n\t\tchecked: has('arenaforvalter.inaktiveringDato'),\n\t\tadd() {\n\t\t\tset('arenaforvalter', {\n\t\t\t\tinaktiveringDato: null,\n\t\t\t\tautomatiskInnsendingAvMeldekort: true,\n\t\t\t\tarenaBrukertype: 'UTEN_SERVICEBEHOV'\n\t\t\t})\n\t\t},\n\t\tremove() {\n\t\t\tdel('arenaforvalter')\n\t\t}\n\t},\n\n\tingenYtelser: {\n\t\tlabel: 'Ingen ytelser',\n\t\tchecked:\n\t\t\thas('arenaforvalter.arenaBrukertype') &&\n\t\t\t!has('arenaforvalter.aap115') &&\n\t\t\t!has('arenaforvalter.aap') &&\n\t\t\t!has('arenaforvalter.dagpenger') &&\n\t\t\t!has('arenaforvalter.inaktiveringDato'),\n\t\tadd() {\n\t\t\tsetMulti(MED_SERVICEBEHOV, AUTOMATISK_INNSENDING_MELDEKORT)\n\t\t},\n\t\tremove() {\n\t\t\tdel('arenaforvalter')\n\t\t}\n\t}\n})\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\n\nexport const UdiPanel = ({ stateModifier }) => {\n\tconst sm = stateModifier(UdiPanel.initialValues)\n\n\tconst infoTekst =\n\t\t'All informasjon blir lagt i UDI-stub. Oppholdsstatus går i tillegg til PDL dersom miljø Q2 velges i siste steg.'\n\n\treturn (\n\t\t<Panel\n\t\t\theading={UdiPanel.heading}\n\t\t\tinformasjonstekst={infoTekst}\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType=\"udi\"\n\t\t>\n\t\t\t<AttributtKategori title=\"Gjeldende oppholdstatus\">\n\t\t\t\t<Attributt attr={sm.attrs.oppholdStatus} />\n\t\t\t</AttributtKategori>\n\n\t\t\t<AttributtKategori title=\"Arbeidsadgang\">\n\t\t\t\t<Attributt attr={sm.attrs.arbeidsadgang} />\n\t\t\t\t<Attributt attr={sm.attrs.hjemmel} />\n\t\t\t</AttributtKategori>\n\n\t\t\t<AttributtKategori title=\"Alias\">\n\t\t\t\t<Attributt attr={sm.attrs.aliaser} />\n\t\t\t</AttributtKategori>\n\n\t\t\t<AttributtKategori title=\"Annet\">\n\t\t\t\t<Attributt attr={sm.attrs.flyktning} />\n\t\t\t\t<Attributt attr={sm.attrs.asylsoker} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nconst arbeidsadgangFelter = {\n\tarbeidsOmfang: null,\n\tharArbeidsAdgang: '',\n\tperiode: {\n\t\tfra: null,\n\t\ttil: null\n\t},\n\ttypeArbeidsadgang: null\n}\n\nUdiPanel.heading = 'UDI'\n\nUdiPanel.initialValues = ({ set, del, has }) => ({\n\toppholdStatus: {\n\t\tlabel: 'Oppholdstatus',\n\t\tchecked: has('udistub.oppholdStatus'),\n\t\tadd: () => set('udistub.oppholdStatus', {}),\n\t\tremove: () => del('udistub.oppholdStatus')\n\t},\n\tarbeidsadgang: {\n\t\tlabel: 'Arbeidsadgang',\n\t\tchecked: has('udistub.arbeidsadgang'),\n\t\tadd() {\n\t\t\tset('udistub.arbeidsadgang', arbeidsadgangFelter)\n\t\t},\n\t\tremove() {\n\t\t\tdel('udistub.arbeidsadgang')\n\t\t}\n\t},\n\thjemmel: {\n\t\tlabel: 'Innhent vedtakshjemmel',\n\t\tchecked: has('udistub.arbeidsadgang.hjemmel'),\n\t\tadd: () =>\n\t\t\tset('udistub.arbeidsadgang', {\n\t\t\t\t...arbeidsadgangFelter,\n\t\t\t\thjemmel: '',\n\t\t\t\tforklaring: null\n\t\t\t}),\n\t\tremove: () => del('udistub.arbeidsadgang.hjemmel')\n\t},\n\taliaser: {\n\t\tlabel: 'Har aliaser',\n\t\tchecked: has('udistub.aliaser'),\n\t\tadd: () =>\n\t\t\tset('udistub.aliaser', [\n\t\t\t\t{\n\t\t\t\t\tidenttype: null,\n\t\t\t\t\tnyIdent: false\n\t\t\t\t}\n\t\t\t]),\n\t\tremove: () => del('udistub.aliaser')\n\t},\n\tflyktning: {\n\t\tlabel: 'Flyktningstatus',\n\t\tchecked: has('udistub.flyktning'),\n\t\tadd: () => set('udistub.flyktning', null),\n\t\tremove: () => del('udistub.flyktning')\n\t},\n\tasylsoker: {\n\t\tlabel: 'Asylsøker',\n\t\tchecked: has('udistub.soeknadOmBeskyttelseUnderBehandling'),\n\t\tadd: () => set('udistub.soeknadOmBeskyttelseUnderBehandling', ''),\n\t\tremove: () => del('udistub.soeknadOmBeskyttelseUnderBehandling')\n\t}\n})\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\n\nexport const BrregPanel = ({ stateModifier }) => {\n\tconst sm = stateModifier(BrregPanel.initialValues)\n\n\treturn (\n\t\t<Panel\n\t\t\theading={BrregPanel.heading}\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType=\"brreg\"\n\t\t>\n\t\t\t<AttributtKategori>\n\t\t\t\t<Attributt attr={sm.attrs.brregstub} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nBrregPanel.heading = 'Brønnøysundregistrene'\n\nBrregPanel.initialValues = ({ set, del, has }) => ({\n\tbrregstub: {\n\t\tlabel: 'Har roller i Brreg',\n\t\tchecked: has('brregstub'),\n\t\tadd() {\n\t\t\tset('brregstub', {\n\t\t\t\tunderstatuser: [0],\n\t\t\t\tenheter: [\n\t\t\t\t\t{\n\t\t\t\t\t\trolle: '',\n\t\t\t\t\t\tregistreringsdato: new Date(),\n\t\t\t\t\t\tforetaksNavn: {\n\t\t\t\t\t\t\tnavn1: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\torgNr: '',\n\t\t\t\t\t\tpersonroller: []\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t})\n\t\t},\n\t\tremove() {\n\t\t\tdel('brregstub')\n\t\t}\n\t}\n})\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\n\nexport const DokarkivPanel = ({ stateModifier }: any) => {\n\tconst sm = stateModifier(DokarkivPanel.initialValues)\n\n\treturn (\n\t\t// @ts-ignore\n\t\t<Panel\n\t\t\theading={DokarkivPanel.heading}\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType=\"dokarkiv\"\n\t\t>\n\t\t\t<AttributtKategori title=\"Oppretting av dokument\">\n\t\t\t\t<Attributt attr={sm.attrs.dokarkiv} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nDokarkivPanel.heading = 'Dokumenter'\n\nDokarkivPanel.initialValues = ({ set, del, has }: any) => ({\n\tdokarkiv: {\n\t\tlabel: 'Skanning',\n\t\tchecked: has('dokarkiv'),\n\t\tadd() {\n\t\t\tset('dokarkiv', {\n\t\t\t\ttittel: '',\n\t\t\t\ttema: '',\n\t\t\t\tkanal: 'SKAN_IM',\n\t\t\t\tjournalfoerendeEnhet: '',\n\t\t\t\tdokumenter: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttittel: '',\n\t\t\t\t\t\tbrevkode: ''\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t})\n\t\t},\n\t\tremove() {\n\t\t\tdel('dokarkiv')\n\t\t}\n\t}\n})\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\n\nexport const SykdomPanel = ({ stateModifier }: any) => {\n\tconst sm = stateModifier(SykdomPanel.initialValues)\n\treturn (\n\t\t// @ts-ignore\n\t\t<Panel\n\t\t\theading={SykdomPanel.heading}\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={sm.batchRemove}\n\t\t\ticonType=\"sykdom\"\n\t\t>\n\t\t\t<AttributtKategori title={null}>\n\t\t\t\t<Attributt attr={sm.attrs.sykemelding} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nSykdomPanel.heading = 'Sykdom'\n\nSykdomPanel.initialValues = ({ set, del, has }: any) => ({\n\tsykemelding: {\n\t\tlabel: 'Har sykemelding',\n\t\tchecked: has('sykemelding'),\n\t\tadd() {\n\t\t\tset('sykemelding', {\n\t\t\t\tsyntSykemelding: {\n\t\t\t\t\tstartDato: new Date(),\n\t\t\t\t\torgnummer: '',\n\t\t\t\t\tarbeidsforholdId: ''\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tremove() {\n\t\t\tdel('sykemelding')\n\t\t}\n\t}\n})\n","import React from 'react'\nimport { AttributtVelger } from './attributtVelger/AttributtVelger'\nimport { PersoninformasjonPanel } from './paneler/Personinformasjon'\nimport { AdressePanel } from './paneler/Adresse'\nimport { IdentifikasjonPanel } from './paneler/Identifikasjon'\nimport { FamilierelasjonPanel } from './paneler/Familierelasjoner'\nimport { ArbeidInntektPanel } from './paneler/ArbeidInntekt'\nimport { InstitusjonsoppholdPanel } from './paneler/Institusjonsopphold'\nimport { KontaktReservasjonsPanel } from './paneler/KontaktReservasjon'\nimport { KontaktDoedsboPanel } from './paneler/KontaktDoedsbo'\nimport { ArenaPanel } from './paneler/Arena'\nimport { UdiPanel } from './paneler/Udi'\nimport { BrregPanel } from './paneler/Brreg'\nimport { DokarkivPanel } from './paneler/Dokarkiv'\nimport { SykdomPanel } from './paneler/Sykdom'\n\nexport const Steg1Person = ({ stateModifier }: any) => {\n\tconst checked = [\n\t\tPersoninformasjonPanel,\n\t\tAdressePanel,\n\t\tFamilierelasjonPanel,\n\t\tArbeidInntektPanel,\n\t\tSykdomPanel,\n\t\tBrregPanel,\n\t\tIdentifikasjonPanel,\n\t\tKontaktDoedsboPanel,\n\t\tInstitusjonsoppholdPanel,\n\t\tKontaktReservasjonsPanel,\n\t\tArenaPanel,\n\t\tUdiPanel,\n\t\tDokarkivPanel\n\t]\n\t\t.map(panel => ({\n\t\t\tlabel: panel.heading,\n\t\t\tvalues: stateModifier(panel.initialValues).checked\n\t\t}))\n\t\t.filter(v => v.values.length)\n\n\treturn (\n\t\t<AttributtVelger checked={checked}>\n\t\t\t<PersoninformasjonPanel stateModifier={stateModifier} />\n\t\t\t<AdressePanel stateModifier={stateModifier} />\n\t\t\t<FamilierelasjonPanel stateModifier={stateModifier} />\n\t\t\t<ArbeidInntektPanel stateModifier={stateModifier} />\n\t\t\t<ArenaPanel stateModifier={stateModifier} />\n\t\t\t<SykdomPanel stateModifier={stateModifier} />\n\t\t\t<BrregPanel stateModifier={stateModifier} />\n\t\t\t<IdentifikasjonPanel stateModifier={stateModifier} />\n\t\t\t<KontaktDoedsboPanel stateModifier={stateModifier} />\n\t\t\t<InstitusjonsoppholdPanel stateModifier={stateModifier} />\n\t\t\t<KontaktReservasjonsPanel stateModifier={stateModifier} />\n\t\t\t<UdiPanel stateModifier={stateModifier} />\n\t\t\t<DokarkivPanel stateModifier={stateModifier} />\n\t\t</AttributtVelger>\n\t)\n}\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Attributt, AttributtKategori } from '../Attributt'\n\nexport const OrganisasjonDetaljerPanel = ({ stateModifier }: any) => {\n\tconst sm = stateModifier(OrganisasjonDetaljerPanel.initialValues)\n\n\treturn (\n\t\t// @ts-ignore\n\t\t<Panel\n\t\t\theading={OrganisasjonDetaljerPanel.heading}\n\t\t\tstartOpen\n\t\t\tcheckAttributeArray={sm.batchAdd}\n\t\t\tuncheckAttributeArray={() => sm.batchRemove('enhetstype')}\n\t\t\ticonType=\"personinformasjon\"\n\t\t>\n\t\t\t<AttributtKategori title=\"Organisasjon\">\n\t\t\t\t<Attributt\n\t\t\t\t\tattr={sm.attrs.enhetstype}\n\t\t\t\t\tdisabled={true}\n\t\t\t\t\ttitle=\"Det er obligatorisk å velge enhetstype for organisasjonen\"\n\t\t\t\t/>\n\t\t\t\t<Attributt attr={sm.attrs.naeringskode} />\n\t\t\t\t<Attributt attr={sm.attrs.sektorkode} />\n\t\t\t\t<Attributt attr={sm.attrs.formaal} />\n\t\t\t\t<Attributt attr={sm.attrs.stiftelsesdato} />\n\t\t\t\t<Attributt attr={sm.attrs.maalform} />\n\t\t\t</AttributtKategori>\n\t\t\t<AttributtKategori title=\"Kontaktdata\">\n\t\t\t\t<Attributt attr={sm.attrs.telefon} />\n\t\t\t\t<Attributt attr={sm.attrs.epost} />\n\t\t\t\t<Attributt attr={sm.attrs.nettside} />\n\t\t\t</AttributtKategori>\n\t\t\t<AttributtKategori title=\"Adresser\">\n\t\t\t\t<Attributt attr={sm.attrs.forretningsadresse} />\n\t\t\t\t<Attributt attr={sm.attrs.postadresse} />\n\t\t\t</AttributtKategori>\n\t\t</Panel>\n\t)\n}\n\nOrganisasjonDetaljerPanel.heading = 'Detaljer'\n\nOrganisasjonDetaljerPanel.initialValues = ({ set, del, has }: any) => {\n\treturn {\n\t\tenhetstype: {\n\t\t\tlabel: 'Enhetstype',\n\t\t\tchecked: has('organisasjon.enhetstype'),\n\t\t\tadd: () => set('organisasjon.enhetstype', ''),\n\t\t\tremove: () => del('organisasjon.enhetstype')\n\t\t},\n\t\tnaeringskode: {\n\t\t\tlabel: 'Næringskode',\n\t\t\tchecked: has('organisasjon.naeringskode'),\n\t\t\tadd: () => set('organisasjon.naeringskode', ''),\n\t\t\tremove: () => del('organisasjon.naeringskode')\n\t\t},\n\t\tsektorkode: {\n\t\t\tlabel: 'Sektorkode',\n\t\t\tchecked: has('organisasjon.sektorkode'),\n\t\t\tadd: () => set('organisasjon.sektorkode', ''),\n\t\t\tremove: () => del('organisasjon.sektorkode')\n\t\t},\n\t\tformaal: {\n\t\t\tlabel: 'Formål',\n\t\t\tchecked: has('organisasjon.formaal'),\n\t\t\tadd: () => set('organisasjon.formaal', ''),\n\t\t\tremove: () => del('organisasjon.formaal')\n\t\t},\n\t\tstiftelsesdato: {\n\t\t\tlabel: 'Stiftelsesdato',\n\t\t\tchecked: has('organisasjon.stiftelsesdato'),\n\t\t\tadd: () => set('organisasjon.stiftelsesdato', ''),\n\t\t\tremove: () => del('organisasjon.stiftelsesdato')\n\t\t},\n\t\tmaalform: {\n\t\t\tlabel: 'Målform',\n\t\t\tchecked: has('organisasjon.maalform'),\n\t\t\tadd: () => set('organisasjon.maalform', ''),\n\t\t\tremove: () => del('organisasjon.maalform')\n\t\t},\n\t\ttelefon: {\n\t\t\tlabel: 'Telefon',\n\t\t\tchecked: has('organisasjon.telefon'),\n\t\t\tadd: () => set('organisasjon.telefon', ''),\n\t\t\tremove: () => del('organisasjon.telefon')\n\t\t},\n\t\tepost: {\n\t\t\tlabel: 'E-postadresse',\n\t\t\tchecked: has('organisasjon.epost'),\n\t\t\tadd: () => set('organisasjon.epost', ''),\n\t\t\tremove: () => del('organisasjon.epost')\n\t\t},\n\t\tnettside: {\n\t\t\tlabel: 'Internettadresse',\n\t\t\tchecked: has('organisasjon.nettside'),\n\t\t\tadd: () => set('organisasjon.nettside', ''),\n\t\t\tremove: () => del('organisasjon.nettside')\n\t\t},\n\t\tforretningsadresse: {\n\t\t\tlabel: 'Forretningsadresse',\n\t\t\tchecked: has('organisasjon.forretningsadresse'),\n\t\t\tadd: () =>\n\t\t\t\tset('organisasjon.forretningsadresse', {\n\t\t\t\t\tadresselinjer: ['', '', ''],\n\t\t\t\t\tpostnr: '',\n\t\t\t\t\tkommunenr: '',\n\t\t\t\t\tlandkode: 'NO',\n\t\t\t\t\tpoststed: ''\n\t\t\t\t}),\n\t\t\tremove: () => del('organisasjon.forretningsadresse')\n\t\t},\n\t\tpostadresse: {\n\t\t\tlabel: 'Postadresse',\n\t\t\tchecked: has('organisasjon.postadresse'),\n\t\t\tadd: () =>\n\t\t\t\tset('organisasjon.postadresse', {\n\t\t\t\t\tadresselinjer: ['', '', ''],\n\t\t\t\t\tpostnr: '',\n\t\t\t\t\tkommunenr: '',\n\t\t\t\t\tlandkode: 'NO',\n\t\t\t\t\tpoststed: ''\n\t\t\t\t}),\n\t\t\tremove: () => del('organisasjon.postadresse')\n\t\t}\n\t}\n}\n","import React from 'react'\nimport { AttributtVelger } from './attributtVelger/AttributtVelger'\nimport { OrganisasjonDetaljerPanel } from './paneler/OrganisasjonDetaljer'\n\nexport const Steg1Organisasjon = ({ stateModifier }: any) => {\n\tconst checked = [OrganisasjonDetaljerPanel]\n\t\t.map(panel => ({\n\t\t\tlabel: panel.heading,\n\t\t\tvalues: stateModifier(panel.initialValues).checked\n\t\t}))\n\t\t.filter(v => v.values.length)\n\n\treturn (\n\t\t<AttributtVelger checked={checked}>\n\t\t\t<OrganisasjonDetaljerPanel stateModifier={stateModifier} />\n\t\t</AttributtVelger>\n\t)\n}\n","import React, { useContext } from 'react'\nimport { BestillingsveilederContext } from '~/components/bestillingsveileder/Bestillingsveileder'\nimport { Steg1Person } from './Steg1Person'\nimport { Steg1Organisasjon } from './Steg1Organisasjon'\n\nexport const Steg1 = ({ formikBag, stateModifier }) => {\n\tconst opts = useContext(BestillingsveilederContext)\n\n\treturn opts.is.nyOrganisasjon || opts.is.nyStandardOrganisasjon ? (\n\t\t<Steg1Organisasjon formikBag={formikBag} stateModifier={stateModifier} />\n\t) : (\n\t\t<Steg1Person formikBag={formikBag} stateModifier={stateModifier} />\n\t)\n}\n\nSteg1.label = 'Velg egenskaper'\n","import React, { useState } from 'react'\nimport _has from 'lodash/has'\nimport _get from 'lodash/get'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\nimport { AdresseKodeverk, PersoninformasjonKodeverk } from '~/config/kodeverk'\n\nimport './diskresjonskoder.less'\nimport Alertstripe from 'nav-frontend-alertstriper'\n\nexport const Diskresjonskoder = ({ basePath, formikBag }) => {\n\tconst [harUfb, setHarUfb] = useState(_get(formikBag.values, `${basePath}.utenFastBopel`))\n\n\t// For å sjekke om det er valgt boadresse i tillegg til diskresjonskoder\n\tconst harBoadresse = _has(formikBag.values, `${basePath}.boadresse.flyttedato`)\n\n\tconst paths = {\n\t\tspesreg: `${basePath}.spesreg`,\n\t\tutenFastBopel: `${basePath}.utenFastBopel`,\n\t\tkommunenr: `${basePath}.boadresse.kommunenr`\n\t}\n\n\tconst handleChangeUFB = selected => {\n\t\tsetHarUfb(selected)\n\t\tif (!harBoadresse && !selected) {\n\t\t\tformikBag.setFieldValue(`${basePath}.boadresse`, null)\n\t\t}\n\t}\n\n\tconst handleChangeKommunenr = val => {\n\t\tformikBag.setFieldValue(`${basePath}.boadresse.adressetype`, 'GATE')\n\t}\n\n\treturn (\n\t\t<Vis attributt={Object.values(paths)}>\n\t\t\t<div className=\"spesreg-component\">\n\t\t\t\t{formikBag.values.tpsf.spesreg && formikBag.values.tpsf.spesreg.includes('SFU') && (\n\t\t\t\t\t<Alertstripe type=\"info\">\n\t\t\t\t\t\tDiskresjonskode 19 vil bli omgjort til kode 6 i TPS da kode 19 ikke støttes.\n\t\t\t\t\t</Alertstripe>\n\t\t\t\t)}\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={paths.spesreg}\n\t\t\t\t\tlabel=\"Diskresjonskode\"\n\t\t\t\t\tkodeverk={PersoninformasjonKodeverk.Diskresjonskoder}\n\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t/>\n\n\t\t\t\t<FormikCheckbox\n\t\t\t\t\tname={paths.utenFastBopel}\n\t\t\t\t\tlabel=\"Uten fast bopel\"\n\t\t\t\t\tafterChange={handleChangeUFB}\n\t\t\t\t\tcheckboxMargin\n\t\t\t\t/>\n\n\t\t\t\t{/* Skal kunne velge kommunenummer selv om man ikke har fast bopel, men trenger ikke eget felt når man også har valgt boadresse. */}\n\t\t\t\t{harUfb && !harBoadresse && (\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={paths.kommunenr}\n\t\t\t\t\t\tlabel=\"Kommunenummer\"\n\t\t\t\t\t\tafterChange={handleChangeKommunenr}\n\t\t\t\t\t\tkodeverk={AdresseKodeverk.Kommunenummer}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Vis>\n\t)\n}\n","import * as React from 'react'\n// @ts-ignore\nimport useBoolean from '~/utils/hooks/useBoolean'\n// @ts-ignore\nimport Button from '~/components/ui/button/Button'\n// @ts-ignore\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\n// @ts-ignore\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\n// @ts-ignore\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\n// @ts-ignore\nimport { PersoninformasjonKodeverk } from '~/config/kodeverk'\n\nimport { FormikProps } from 'formik'\n\nexport interface TelefonnummerValues {\n\ttelefonLandskode_1?: string\n\ttelefonnummer_1?: string\n\ttelefonLandskode_2?: string\n\ttelefonnummer_2?: string\n}\n\ninterface TelefonnummerProps {\n\tformikBag: FormikProps<{ tpsf: TelefonnummerValues }>\n}\n\nexport const Telefonnummer = ({ formikBag }: TelefonnummerProps) => {\n\tconst [harToTlfnr, settToTlfnr, settEttTlfnr] = useBoolean(\n\t\tformikBag.values.tpsf.hasOwnProperty('telefonnummer_2')\n\t)\n\n\tconst paths = {\n\t\ttelefonLandskode_1: 'tpsf.telefonLandskode_1',\n\t\ttelefonnummer_1: 'tpsf.telefonnummer_1',\n\t\ttelefonLandskode_2: 'tpsf.telefonLandskode_2',\n\t\ttelefonnummer_2: 'tpsf.telefonnummer_2'\n\t}\n\n\tconst leggTilTlfnr = () => {\n\t\tformikBag.setFieldValue('tpsf.telefonLandskode_2', '')\n\t\tformikBag.setFieldValue('tpsf.telefonnummer_2', '')\n\t\tsettToTlfnr()\n\t}\n\n\tconst fjernTlfnr = () => {\n\t\tformikBag.setFieldValue('tpsf.telefonLandskode_2', undefined)\n\t\tformikBag.setFieldValue('tpsf.telefonnummer_2', undefined)\n\t\tsettEttTlfnr()\n\t}\n\n\treturn (\n\t\t<Vis attributt={Object.values(paths)} formik>\n\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"tpsf.telefonLandskode_1\"\n\t\t\t\t\tlabel=\"Telefon landkode\"\n\t\t\t\t\tkodeverk={PersoninformasjonKodeverk.Retningsnumre}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\tvisHvisAvhuket\n\t\t\t\t/>\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tname=\"tpsf.telefonnummer_1\"\n\t\t\t\t\tlabel=\"Telefonnummer\"\n\t\t\t\t\ttype=\"string\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\n\t\t\t\t{!harToTlfnr && (\n\t\t\t\t\t<Button onClick={leggTilTlfnr} kind=\"add-circle\">\n\t\t\t\t\t\tTelefonnummer\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\n\t\t\t\t{harToTlfnr && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname=\"tpsf.telefonLandskode_2\"\n\t\t\t\t\t\t\tlabel=\"Telefon landkode\"\n\t\t\t\t\t\t\tkodeverk={PersoninformasjonKodeverk.Retningsnumre}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t\tvisHvisAvhuket\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\t\tname=\"tpsf.telefonnummer_2\"\n\t\t\t\t\t\t\tlabel=\"Telefonnummer\"\n\t\t\t\t\t\t\ttype=\"string\"\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button kind=\"trashcan\" onClick={fjernTlfnr} title=\"Fjern\" />\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Vis>\n\t)\n}\n","import React, { useContext } from 'react'\nimport { isAfter } from 'date-fns'\nimport { PersoninformasjonKodeverk } from '~/config/kodeverk'\nimport { BestillingsveilederContext } from '~/components/bestillingsveileder/Bestillingsveileder'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { Diskresjonskoder } from './diskresjonskoder/Diskresjonskoder'\nimport { Telefonnummer } from './telefonnummer/Telefonnummer'\n\nexport const Diverse = ({ formikBag }) => {\n\tconst handleChangeKontonr = selected => {\n\t\tif (!selected) {\n\t\t\tformikBag.setFieldValue(`tpsf.bankkontonrRegdato`, null)\n\t\t}\n\t}\n\tconst opts = useContext(BestillingsveilederContext)\n\tconst { personFoerLeggTil } = opts\n\tconst harSkjerming = personFoerLeggTil\n\t\t? personFoerLeggTil.tpsf.hasOwnProperty('egenAnsattDatoFom')\n\t\t\t? personFoerLeggTil.tpsf.hasOwnProperty('egenAnsattDatoTom')\n\t\t\t\t? isAfter(new Date(personFoerLeggTil.tpsf.egenAnsattDatoTom), new Date())\n\t\t\t\t: true\n\t\t\t: false\n\t\t: false\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<FormikSelect\n\t\t\t\tname=\"tpsf.identtype\"\n\t\t\t\tlabel=\"Identtype\"\n\t\t\t\toptions={Options('identtype')}\n\t\t\t\tvisHvisAvhuket\n\t\t\t\tisClearable={false}\n\t\t\t/>\n\n\t\t\t<FormikSelect\n\t\t\t\tname=\"tpsf.kjonn\"\n\t\t\t\tlabel=\"Kjønn\"\n\t\t\t\tkodeverk={PersoninformasjonKodeverk.Kjoennstyper}\n\t\t\t\tvisHvisAvhuket\n\t\t\t/>\n\n\t\t\t<FormikSelect\n\t\t\t\tname=\"tpsf.harMellomnavn\"\n\t\t\t\tlabel=\"Har mellomnavn\"\n\t\t\t\toptions={Options('boolean')}\n\t\t\t\tvisHvisAvhuket\n\t\t\t/>\n\n\t\t\t<FormikSelect\n\t\t\t\tname=\"tpsf.sprakKode\"\n\t\t\t\tlabel=\"Språk\"\n\t\t\t\tkodeverk={PersoninformasjonKodeverk.Spraak}\n\t\t\t\tsize=\"large\"\n\t\t\t\tvisHvisAvhuket\n\t\t\t/>\n\n\t\t\t<FormikDatepicker\n\t\t\t\tname=\"tpsf.egenAnsattDatoFom\"\n\t\t\t\tlabel=\"Skjerming fra\"\n\t\t\t\tdisabled={harSkjerming}\n\t\t\t\tvisHvisAvhuket\n\t\t\t/>\n\t\t\t{harSkjerming && (\n\t\t\t\t<FormikDatepicker name=\"tpsf.egenAnsattDatoTom\" label=\"Skjerming til\" visHvisAvhuket />\n\t\t\t)}\n\n\t\t\t<Vis attributt=\"tpsf.erForsvunnet\">\n\t\t\t\t<FormikSelect name=\"tpsf.erForsvunnet\" label=\"Er forsvunnet\" options={Options('boolean')} />\n\n\t\t\t\t<FormikDatepicker\n\t\t\t\t\tname=\"tpsf.forsvunnetDato\"\n\t\t\t\t\tlabel=\"Forsvunnet dato\"\n\t\t\t\t\tdisabled={!formikBag.values.tpsf.erForsvunnet}\n\t\t\t\t\tfastfield={false}\n\t\t\t\t/>\n\t\t\t</Vis>\n\t\t\t<Vis attributt=\"tpsf.harBankkontonr\">\n\t\t\t\t<FormikCheckbox\n\t\t\t\t\tname=\"tpsf.harBankkontonr\"\n\t\t\t\t\tlabel=\"Har bankkontonummer\"\n\t\t\t\t\tafterChange={handleChangeKontonr}\n\t\t\t\t\tcheckboxMargin\n\t\t\t\t/>\n\t\t\t\t<FormikDatepicker\n\t\t\t\t\tname=\"tpsf.bankkontonrRegdato\"\n\t\t\t\t\tlabel=\"Bankkonto opprettet\"\n\t\t\t\t\tdisabled={!formikBag.values.tpsf.harBankkontonr}\n\t\t\t\t\tfastfield={false}\n\t\t\t\t/>\n\t\t\t</Vis>\n\t\t\t<Telefonnummer formikBag={formikBag} />\n\t\t\t<Diskresjonskoder basePath=\"tpsf\" formikBag={formikBag} />\n\t\t</React.Fragment>\n\t)\n}\n","import React, { useState } from 'react'\nimport _has from 'lodash/has'\nimport _get from 'lodash/get'\nimport _omit from 'lodash/omit'\nimport { ToggleGruppe, ToggleKnapp } from 'nav-frontend-skjema'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { subYears } from 'date-fns'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport Formatters from '~/utils/DataFormatter'\n\nimport './alder.less'\n\nconst alderValg = {\n\talder: 'alder',\n\tspesifikk: 'spesifikk'\n}\n\nconst initialValue = (basePath, formikBag) => {\n\treturn _has(formikBag.values, `${basePath}.alder`)\n\t\t? alderValg.alder\n\t\t: _has(formikBag.values, `${basePath}.foedtEtter`)\n\t\t? alderValg.spesifikk\n\t\t: null\n}\n\nexport const Alder = ({ basePath, formikBag, title, handleDoed }) => {\n\tconst [alderType, setAlderType] = useState(initialValue(basePath, formikBag))\n\tconst paths = {\n\t\talder: `${basePath}.alder`,\n\t\tfoedtEtter: `${basePath}.foedtEtter`,\n\t\tfoedtFoer: `${basePath}.foedtFoer`,\n\t\tdoedsdato: `${basePath}.doedsdato`\n\t}\n\n\tconst handleToggleChange = event => {\n\t\tconst { value } = event.target\n\t\tsetAlderType(alderValg[value])\n\n\t\tconst barn = basePath.includes('barn')\n\t\tconst forelder = basePath.includes('foreldre')\n\n\t\tformikBag.setValues(_omit(formikBag.values, Object.values(paths)))\n\t\tformikBag.setFieldValue(paths.doedsdato, _get(formikBag.values, `${basePath}.doedsdato`))\n\n\t\tif (value === alderValg.alder) {\n\t\t\tif (barn) {\n\t\t\t\tformikBag.setFieldValue(paths.alder, Formatters.randomIntInRange(0, 17))\n\t\t\t} else if (forelder) {\n\t\t\t\tformikBag.setFieldValue(paths.alder, Formatters.randomIntInRange(65, 100))\n\t\t\t} else {\n\t\t\t\tformikBag.setFieldValue(paths.alder, Formatters.randomIntInRange(30, 60))\n\t\t\t}\n\t\t} else {\n\t\t\tif (barn) {\n\t\t\t\tformikBag.setFieldValue(paths.foedtEtter, subYears(new Date(), 17))\n\t\t\t\tformikBag.setFieldValue(paths.foedtFoer, new Date())\n\t\t\t} else if (forelder) {\n\t\t\t\tformikBag.setFieldValue(paths.foedtEtter, subYears(new Date(), 100))\n\t\t\t\tformikBag.setFieldValue(paths.foedtFoer, subYears(new Date(), 65))\n\t\t\t} else {\n\t\t\t\tformikBag.setFieldValue(paths.foedtEtter, subYears(new Date(), 60))\n\t\t\t\tformikBag.setFieldValue(paths.foedtFoer, subYears(new Date(), 30))\n\t\t\t}\n\t\t}\n\t}\n\n\tconst toggleValues = [\n\t\t{\n\t\t\tvalue: alderValg.alder,\n\t\t\tlabel: 'Antall år ...'\n\t\t},\n\t\t{\n\t\t\tvalue: alderValg.spesifikk,\n\t\t\tlabel: 'Født før/etter ...'\n\t\t}\n\t]\n\n\treturn (\n\t\t<Vis attributt={Object.values(paths)}>\n\t\t\t<div className=\"alder-component\">\n\t\t\t\t{title && <h4>{title}</h4>}\n\t\t\t\t{alderType && (\n\t\t\t\t\t<ToggleGruppe onChange={handleToggleChange} name={paths.alder}>\n\t\t\t\t\t\t{toggleValues.map(val => (\n\t\t\t\t\t\t\t<ToggleKnapp key={val.value} value={val.value} checked={alderType === val.value}>\n\t\t\t\t\t\t\t\t{val.label}\n\t\t\t\t\t\t\t</ToggleKnapp>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ToggleGruppe>\n\t\t\t\t)}\n\n\t\t\t\t<div className=\"alder-felter\">\n\t\t\t\t\t<FormikTextInput name={paths.alder} type=\"number\" label=\"Antall år\" />\n\t\t\t\t\t<FormikDatepicker name={paths.foedtEtter} label=\"Født etter\" />\n\t\t\t\t\t<FormikDatepicker name={paths.foedtFoer} label=\"Født før\" />\n\t\t\t\t\t<Vis attributt={paths.doedsdato}>\n\t\t\t\t\t\t{handleDoed ? (\n\t\t\t\t\t\t\t<FormikDatepicker name={paths.doedsdato} label=\"Dødsdato\" onChange={handleDoed} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<FormikDatepicker name={paths.doedsdato} label=\"Dødsdato\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Vis>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Vis>\n\t)\n}\n","import * as React from 'react'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { VergemaalKodeverk } from '~/config/kodeverk'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\n\nexport const Vergemaal = () => {\n\tconst paths = {\n\t\tembete: 'tpsf.vergemaal.embete',\n\t\tsakType: 'tpsf.vergemaal.sakType',\n\t\tmandatType: 'tpsf.vergemaal.mandatType',\n\t\tvedtakDato: 'tpsf.vergemaal.vedtakDato',\n\t\tidentType: 'tpsf.vergemaal.identType',\n\t\tharMellomnavn: 'tpsf.vergemaal.harMellomnavn'\n\t}\n\n\treturn (\n\t\t<Vis attributt={Object.values(paths)} formik>\n\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"tpsf.vergemaal.embete\"\n\t\t\t\t\tlabel=\"Fylkesmannsembete\"\n\t\t\t\t\tkodeverk={VergemaalKodeverk.Fylkesmannsembeter}\n\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\tvisHvisAvhuket\n\t\t\t\t/>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"tpsf.vergemaal.sakType\"\n\t\t\t\t\tlabel=\"Sakstype\"\n\t\t\t\t\tkodeverk={VergemaalKodeverk.Sakstype}\n\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\toptionHeight={50}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\tvisHvisAvhuket\n\t\t\t\t/>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"tpsf.vergemaal.mandatType\"\n\t\t\t\t\tlabel=\"Mandattype\"\n\t\t\t\t\tkodeverk={VergemaalKodeverk.Mandattype}\n\t\t\t\t\tsize=\"xxlarge\"\n\t\t\t\t\toptionHeight={50}\n\t\t\t\t\tvisHvisAvhuket\n\t\t\t\t/>\n\t\t\t\t<FormikDatepicker name={'tpsf.vergemaal.vedtakDato'} label=\"Vedtaksdato\" />\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"tpsf.vergemaal.identType\"\n\t\t\t\t\tlabel=\"Verges identtype\"\n\t\t\t\t\toptions={Options('identtype')}\n\t\t\t\t\tvisHvisAvhuket\n\t\t\t\t/>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"tpsf.vergemaal.harMellomnavn\"\n\t\t\t\t\tlabel=\"Verge har mellomnavn\"\n\t\t\t\t\toptions={Options('boolean')}\n\t\t\t\t\tvisHvisAvhuket\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Vis>\n\t)\n}\n","import { useAsync } from 'react-use'\nimport { BrregstubApi, DollyApi, KrrApi, OrgforvalterApi } from '~/service/Api'\nimport Api from '~/api'\nimport _isNil from 'lodash/isNil'\n\nconst uri = `/dolly-backend/api/v1`\n\nexport const SelectOptionsOppslag = {\n\thentOrgnr: () => {\n\t\tconst orgnr = useAsync(async () => {\n\t\t\tconst response = await Api.fetchJson(`${uri}/orgnummer`, { method: 'GET' })\n\t\t\treturn response\n\t\t}, [Api.fetchJson])\n\t\treturn orgnr\n\t},\n\n\thentHelsepersonell: () => Api.fetchJson(`${uri}/helsepersonell`, { method: 'GET' }),\n\n\thentKrrLeverandoerer: () => {\n\t\tconst sdpLeverandoerer = useAsync(async () => {\n\t\t\tconst response = await KrrApi.getSdpLeverandoerListe()\n\t\t\treturn response\n\t\t}, [KrrApi.getSdpLeverandoerListe])\n\t\treturn sdpLeverandoerer\n\t},\n\n\thentPersonnavn: () => {\n\t\tconst navnInfo = useAsync(async () => {\n\t\t\tconst response = await DollyApi.getPersonnavn()\n\t\t\treturn response\n\t\t}, [DollyApi.getPersonnavn])\n\t\treturn navnInfo\n\t},\n\n\thentGruppe: () => {\n\t\tconst datasettInfo = useAsync(async () => {\n\t\t\tconst response = await DollyApi.getFasteDatasettGruppe('DOLLY')\n\t\t\treturn response\n\t\t}, [DollyApi.getFasteDatasettGruppe])\n\t\treturn datasettInfo\n\t},\n\n\thentInntektsmeldingOptions: enumtype =>\n\t\tApi.fetchJson(`${uri}/inntektsmelding/${enumtype}`, { method: 'GET' }),\n\n\thentArbeidsforholdstyperInntektstub: () => {\n\t\tconst arbeidsforholdstyper = useAsync(async () => {\n\t\t\tconst response = await DollyApi.getKodeverkByNavn('Arbeidsforholdstyper')\n\t\t\treturn response\n\t\t}, [DollyApi.getKodeverkByNavn])\n\t\treturn arbeidsforholdstyper\n\t},\n\n\thentFullmaktOmraader: () => {\n\t\tconst omraader = useAsync(async () => {\n\t\t\tconst response = await DollyApi.getKodeverkByNavn('Tema')\n\t\t\treturn response\n\t\t}, [DollyApi.getKodeverkByNavn])\n\t\treturn omraader\n\t},\n\n\thentRollerFraBrregstub: () => {\n\t\tconst rollerInfo = useAsync(async () => {\n\t\t\tconst response = await BrregstubApi.getRoller()\n\t\t\treturn response\n\t\t}, [BrregstubApi.getRoller])\n\t\treturn rollerInfo\n\t},\n\n\thentUnderstatusFraBrregstub: () => {\n\t\tconst understatusInfo = useAsync(async () => {\n\t\t\tconst response = await BrregstubApi.getUnderstatus()\n\t\t\treturn response\n\t\t}, [BrregstubApi.getUnderstatus])\n\t\treturn understatusInfo\n\t},\n\n\thentVirksomheterFraOrgforvalter: () => {\n\t\treturn Api.fetchJson(`/testnav-organisasjon-forvalter/api/v1/organisasjon/virksomheter`, {\n\t\t\tmethod: 'GET'\n\t\t})\n\t},\n\n\tformatOptions: (type, data) => {\n\t\tif (type === 'personnavn') {\n\t\t\tconst persondata = data.value && data.value.data ? data.value.data : []\n\t\t\tconst options = []\n\t\t\tpersondata.length > 0 &&\n\t\t\t\tpersondata.forEach(personInfo => {\n\t\t\t\t\tif (!_isNil(personInfo.fornavn)) {\n\t\t\t\t\t\tconst mellomnavn = !_isNil(personInfo.mellomnavn) ? ' ' + personInfo.mellomnavn : ''\n\t\t\t\t\t\tconst navn = personInfo.fornavn + mellomnavn + ' ' + personInfo.etternavn\n\t\t\t\t\t\toptions.push({ value: personInfo.fornavn.toUpperCase(), label: navn.toUpperCase() })\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\treturn options\n\t\t} else if (type === 'navnOgFnr') {\n\t\t\tconst persondata = data.value && data.value.data ? data.value.data.liste : []\n\t\t\tconst options = []\n\t\t\tpersondata.length > 0 &&\n\t\t\t\tpersondata.forEach(personInfo => {\n\t\t\t\t\tif (!_isNil(personInfo.fornavn)) {\n\t\t\t\t\t\tconst mellomnavn = !_isNil(personInfo.mellomnavn) ? ' ' + personInfo.mellomnavn : ''\n\t\t\t\t\t\tconst navnOgFnr =\n\t\t\t\t\t\t\t(personInfo.fornavn + mellomnavn + ' ' + personInfo.etternavn).toUpperCase() +\n\t\t\t\t\t\t\t': ' +\n\t\t\t\t\t\t\tpersonInfo.fnr\n\t\t\t\t\t\toptions.push({ value: personInfo.fnr, label: navnOgFnr })\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\treturn options\n\t\t} else if (type === 'arbeidsforholdstyper') {\n\t\t\tconst options = data.value ? data.value.data.koder : []\n\t\t\toptions.length > 0 &&\n\t\t\t\toptions.forEach(option => {\n\t\t\t\t\tif (option.value === 'frilanserOppdragstakerHonorarPersonerMm') {\n\t\t\t\t\t\toption.label = 'Frilansere/oppdragstakere, honorar, m.m.'\n\t\t\t\t\t}\n\t\t\t\t\tif (option.value === 'pensjonOgAndreTyperYtelserUtenAnsettelsesforhold') {\n\t\t\t\t\t\toption.label = 'Pensjoner og andre typer ytelser uten ansettelsesforhold'\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\treturn options\n\t\t} else if (type === 'understatuser') {\n\t\t\tconst statuser = data.value ? Object.entries(data.value.data) : []\n\t\t\tconst options = []\n\t\t\tstatuser.forEach(status => {\n\t\t\t\toptions.push({ value: parseInt(status[0]), label: `${status[0]}: ${status[1]}` })\n\t\t\t})\n\t\t\treturn options\n\t\t} else if (type === 'roller') {\n\t\t\tconst roller = data.value ? Object.entries(data.value.data) : []\n\t\t\tconst options = []\n\t\t\troller.forEach(rolle => {\n\t\t\t\toptions.push({ value: rolle[0], label: rolle[1] })\n\t\t\t})\n\t\t\treturn options\n\t\t} else if (type === 'sdpLeverandoer') {\n\t\t\tconst leverandoerer = data.value ? Object.entries(data.value.data) : []\n\t\t\tconst options = []\n\t\t\tleverandoerer.forEach(leverandoer => {\n\t\t\t\tdata = leverandoer[1]\n\t\t\t\toptions.push({ value: parseInt(data.id), label: data.navn })\n\t\t\t})\n\t\t\treturn options\n\t\t} else if (type === 'fullmaktOmraader') {\n\t\t\tconst omraader = data.value ? Object.entries(data.value.data.koder) : []\n\t\t\tconst ugyldigeKoder = ['BII', 'KLA', 'KNA', 'KOM', 'LGA', 'MOT', 'OVR']\n\t\t\tconst options = []\n\t\t\toptions.push({ value: '*', label: '* (Alle)' })\n\t\t\tomraader\n\t\t\t\t.filter(omr => {\n\t\t\t\t\treturn !ugyldigeKoder.includes(omr[1].value)\n\t\t\t\t})\n\t\t\t\t.forEach(omraade => {\n\t\t\t\t\tdata = omraade[1]\n\t\t\t\t\toptions.push({ value: data.value, label: data.label })\n\t\t\t\t})\n\t\t\treturn options\n\t\t}\n\t}\n}\n","export enum Relasjonstyper {\n\tPartner = 'PARTNER'\n}\n\nexport type Partner = {\n\tny?: boolean\n\tsivilstander?: Array<Sivilstand>\n\tsivilstand?: string\n\tfornavn?: string\n\tetternavn?: string\n\tident?: string\n}\nexport type PersonHentet = {\n\trelasjoner?: Array<Relasjon>\n}\n\nexport type Relasjon = {\n\tperson: PersonHentet\n\tpersonRelasjonMed: Partner\n\trelasjonTypeNavn: string\n}\n\nexport type Sivilstand = {\n\tny?: boolean\n\tsivilstand?: string\n\tsivilstandRegdato?: string\n}\n","import * as React from 'react'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { SelectOptionsOppslag } from '~/service/SelectOptionsOppslag'\n\nexport const Fullmakt = () => {\n\tconst paths = {\n\t\tkilde: 'tpsf.fullmakt.kilde',\n\t\tomraader: 'tpsf.fullmakt.omraader',\n\t\tgyldigFom: 'tpsf.fullmakt.gyldigFom',\n\t\tgyldigTom: 'tpsf.fullmakt.gyldigTom',\n\t\tidentType: 'tpsf.fullmakt.identType',\n\t\tharMellomnavn: 'tpsf.fullmakt.harMellomnavn'\n\t}\n\n\tconst fullmaktOmraader = SelectOptionsOppslag.hentFullmaktOmraader()\n\tconst fullmaktOptions = SelectOptionsOppslag.formatOptions('fullmaktOmraader', fullmaktOmraader)\n\n\treturn (\n\t\t<Vis attributt={Object.values(paths)} formik>\n\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t<FormikTextInput name={paths.kilde} label=\"Kilde\" size=\"xlarge\" />\n\t\t\t\t<div className=\"flexbox--full-width\">\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={paths.omraader}\n\t\t\t\t\t\tlabel=\"Områder\"\n\t\t\t\t\t\toptions={fullmaktOptions}\n\t\t\t\t\t\tsize=\"grow\"\n\t\t\t\t\t\tisMulti={true}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tfastfield={false}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<FormikDatepicker name={paths.gyldigFom} label=\"Gyldig fra og med\" />\n\t\t\t\t<FormikDatepicker name={paths.gyldigTom} label=\"Gyldig til og med\" />\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={paths.identType}\n\t\t\t\t\tlabel=\"Fullmektig identtype\"\n\t\t\t\t\toptions={Options('identtype')}\n\t\t\t\t/>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={paths.harMellomnavn}\n\t\t\t\t\tlabel=\"Fullmektig har mellomnavn\"\n\t\t\t\t\toptions={Options('boolean')}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Vis>\n\t)\n}\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { erForste, panelError } from '~/components/ui/form/formUtils'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { Diverse } from './partials/Diverse'\nimport { Alder } from './partials/alder/Alder'\nimport { Vergemaal } from './partials/vergemaal/Vergemaal'\nimport { Fullmakt } from './partials/fullmakt/Fullmakt'\n\nconst alderPaths = ['tpsf.alder', 'tpsf.foedtEtter', 'tpsf.foedtFoer', 'tpsf.doedsdato']\n\nconst nasjonalitetPaths = [\n\t'tpsf.statsborgerskap',\n\t'tpsf.innvandretFraLand',\n\t'tpsf.utvandretTilLand'\n]\n\nconst diversePaths = [\n\t'tpsf.kjonn',\n\t'tpsf.identtype',\n\t'tpsf.harMellomnavn',\n\t'tpsf.sivilstand',\n\t'tpsf.sprakKode',\n\t'tpsf.egenAnsattDatoFom',\n\t'tpsf.egenAnsattDatoTom',\n\t'tpsf.spesreg',\n\t'tpsf.utenFastBopel',\n\t'tpsf.erForsvunnet',\n\t'tpsf.harBankkontonr',\n\t'tpsf.telefonnummer_1'\n]\n\nconst vergemaalPath = ['tpsf.vergemaal']\nconst fullmaktPath = ['tpsf.fullmakt']\n\nconst panelPaths = [alderPaths, nasjonalitetPaths, diversePaths, vergemaalPath, fullmaktPath].flat()\n\nexport const Personinformasjon = ({ formikBag }) => (\n\t<Vis attributt={panelPaths}>\n\t\t<Panel\n\t\t\theading=\"Personinformasjon\"\n\t\t\thasErrors={panelError(formikBag, panelPaths)}\n\t\t\ticonType={'personinformasjon'}\n\t\t\tstartOpen={() =>\n\t\t\t\terForste(\n\t\t\t\t\tformikBag.values,\n\t\t\t\t\talderPaths.concat(nasjonalitetPaths, diversePaths, vergemaalPath, fullmaktPath)\n\t\t\t\t)\n\t\t\t}\n\t\t>\n\t\t\t<Kategori title=\"Alder\" vis={alderPaths}>\n\t\t\t\t<Alder basePath=\"tpsf\" formikBag={formikBag} />\n\t\t\t</Kategori>\n\n\t\t\t<Kategori title=\"Nasjonalitet\" vis={nasjonalitetPaths}>\n\t\t\t\t<Vis attributt=\"tpsf.statsborgerskap\">\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname=\"tpsf.statsborgerskap\"\n\t\t\t\t\t\tlabel=\"Statsborgerskap\"\n\t\t\t\t\t\tkodeverk={AdresseKodeverk.StatsborgerskapLand}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker name=\"tpsf.statsborgerskapRegdato\" label=\"Statsborgerskap fra\" />\n\t\t\t\t\t<FormikDatepicker name=\"tpsf.statsborgerskapTildato\" label=\"Statsborgerskap til\" />\n\t\t\t\t</Vis>\n\n\t\t\t\t<Vis attributt=\"tpsf.innvandretFraLand\">\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname=\"tpsf.innvandretFraLand\"\n\t\t\t\t\t\tlabel=\"Innvandret fra\"\n\t\t\t\t\t\tkodeverk={AdresseKodeverk.InnvandretUtvandretLand}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker name=\"tpsf.innvandretFraLandFlyttedato\" label=\"Innvandret dato\" />\n\t\t\t\t</Vis>\n\n\t\t\t\t<Vis attributt=\"tpsf.utvandretTilLand\">\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname=\"tpsf.utvandretTilLand\"\n\t\t\t\t\t\tlabel=\"Utvandret til\"\n\t\t\t\t\t\tkodeverk={AdresseKodeverk.InnvandretUtvandretLand}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker name=\"tpsf.utvandretTilLandFlyttedato\" label=\"Utvandret dato\" />\n\t\t\t\t</Vis>\n\t\t\t</Kategori>\n\n\t\t\t<Kategori title=\"Diverse\" vis={diversePaths}>\n\t\t\t\t<Diverse formikBag={formikBag} />\n\t\t\t</Kategori>\n\t\t\t<Kategori title=\"Vergemål\" vis={vergemaalPath}>\n\t\t\t\t<Vergemaal />\n\t\t\t</Kategori>\n\t\t\t<Kategori title=\"Fullmakt\" vis={fullmaktPath}>\n\t\t\t\t<Fullmakt />\n\t\t\t</Kategori>\n\t\t</Panel>\n\t</Vis>\n)\n","import React from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { panelError } from '~/components/ui/form/formUtils'\nimport { erForste } from '~/components/ui/form/formUtils'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { PersoninformasjonKodeverk } from '~/config/kodeverk'\n\nconst initialValues = {\n\tfoedtEtter: null,\n\tfoedtFoer: null,\n\tidenttype: null,\n\tkjonn: null,\n\tregdato: null\n}\n\nconst hjelpetekst =\n\t'Dette er en oversikt over utgåtte identer, der de eldste skal ligge sist. ' +\n\t'Dagens identtype legges inn på forrige side. For å velge dagens kjønn må \"Kjønn\" hukes av på forrige side og velges under \"Diverse\" -> \"Kjønn\" her. ' +\n\t'Eksempel: En person med DNR får FNR. Da velges FNR på forrige side. DNR legges inn i denne oversikten. ' +\n\t'Hvis fødselsdatoen ble endret i overgangen kan født før og født etter fylles ut. Det samme gjelder for kjønn. ' +\n\t'Dersom de står som \"Ikke spesifisert\" beholdes samme fødselsdato og/eller kjønn.'\n\nconst identAttributt = 'tpsf.identHistorikk'\n\nexport const Identhistorikk = ({ formikBag }) => (\n\t<Vis attributt={identAttributt}>\n\t\t<Panel\n\t\t\theading=\"Identhistorikk\"\n\t\t\thasErrors={panelError(formikBag, identAttributt)}\n\t\t\tinformasjonstekst={hjelpetekst}\n\t\t\ticonType=\"identhistorikk\"\n\t\t\tstartOpen={() => erForste(formikBag.values, [identAttributt])}\n\t\t>\n\t\t\t<FormikDollyFieldArray name=\"tpsf.identHistorikk\" header=\"Historikk\" newEntry={initialValues}>\n\t\t\t\t{(path, idx) => (\n\t\t\t\t\t<React.Fragment key={idx}>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.identtype`}\n\t\t\t\t\t\t\tlabel=\"Identtype\"\n\t\t\t\t\t\t\toptions={Options('identtype')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.kjonn`}\n\t\t\t\t\t\t\tlabel=\"Kjønn\"\n\t\t\t\t\t\t\tkodeverk={PersoninformasjonKodeverk.Kjoennstyper}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikDatepicker name={`${path}.regdato`} label=\"Utgått dato\" visHvisAvhuket={false} />\n\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\tname={`${path}.foedtEtter`}\n\t\t\t\t\t\t\tlabel=\"Født etter\"\n\t\t\t\t\t\t\tvisHvisAvhuket={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikDatepicker name={`${path}.foedtFoer`} label=\"Født før\" visHvisAvhuket={false} />\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</FormikDollyFieldArray>\n\t\t</Panel>\n\t</Vis>\n)\n","import { FormikProps } from 'formik'\nimport _get from 'lodash/get'\nimport { Partner, PersonHentet, Relasjon, Sivilstand, Relasjonstyper } from './partnerTypes'\n\nexport default function Partnerliste(\n\tformikBag: FormikProps<{}>,\n\tpersonFoerLeggTil: PersonHentet,\n\tpath: string\n) {\n\tconst tidligerePartnere: Array<Partner> = mapTidligerePartnere(personFoerLeggTil)\n\tconst sisteTidligerePartner: Partner = tidligerePartnere[tidligerePartnere.length - 1]\n\tconst formikPartnere: Array<Partner> = mapNyePartnere(formikBag, path, sisteTidligerePartner)\n\tconst oppdatertPartner: boolean = formikPartnere.some((partner: Partner) => !partner.ny)\n\n\toppdatertPartner && tidligerePartnere.pop() //Fjerner tidligere partner som er oppdatert\n\n\tconst partnere: Array<Partner> = tidligerePartnere.concat(formikPartnere)\n\n\treturn {\n\t\tpartnere,\n\t\tpartnereUtenomFormikBag: tidligerePartnere.length,\n\t\toppdatertPartner\n\t}\n}\n\nconst finnTidligerePartnere = (personFoerLeggTil: PersonHentet): Array<Partner> =>\n\t_get(personFoerLeggTil, 'tpsf.relasjoner', [])\n\t\t.filter((relasjon: Relasjon) => relasjon.relasjonTypeNavn === Relasjonstyper.Partner)\n\t\t.map((relasjon: Relasjon) => relasjon.personRelasjonMed)\n\nconst mapSivilstand = (sivilstander: Array<Sivilstand>, ny: boolean): Array<Sivilstand> =>\n\tsivilstander.map((sivilstand: Sivilstand) => ({ ...sivilstand, ny: ny }))\n\nconst mapTidligerePartnere = (personFoerLeggTil: PersonHentet): Array<Partner> => {\n\tconst tidligerePartnerliste: Array<Partner> = finnTidligerePartnere(personFoerLeggTil).reverse()\n\treturn tidligerePartnerliste.map((partner: Partner) => ({\n\t\t...partner,\n\t\tny: false,\n\t\tsivilstander: mapSivilstand(partner.sivilstander, false).reverse()\n\t}))\n}\n\nconst mapNyePartnere = (formikBag: FormikProps<{}>, path: string, sisteTidligerePartner: Partner) =>\n\t_get(formikBag.values, path, []).map((partner: Partner) =>\n\t\tpartner.hasOwnProperty('identtype')\n\t\t\t? {\n\t\t\t\t\t...partner,\n\t\t\t\t\tny: true,\n\t\t\t\t\tsivilstander: mapSivilstand(partner.sivilstander, true)\n\t\t\t  }\n\t\t\t: {\n\t\t\t\t\t...sisteTidligerePartner,\n\t\t\t\t\tsivilstander: sisteTidligerePartner.sivilstander.concat(\n\t\t\t\t\t\tmapSivilstand(partner.sivilstander, true)\n\t\t\t\t\t)\n\t\t\t  }\n\t)\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { FormikProps } from 'formik'\nimport { AdresseKodeverk, PersoninformasjonKodeverk } from '~/config/kodeverk'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { Alder } from '~/components/fagsystem/tpsf/form/personinformasjon/partials/alder/Alder'\nimport { Diskresjonskoder } from '~/components/fagsystem/tpsf/form/personinformasjon/partials/diskresjonskoder/Diskresjonskoder'\nimport { Sivilstand } from '../sivilstand/Sivilstand'\nimport { Partner } from './partnerTypes'\n\ninterface PartnerForm {\n\tpath: string\n\tformikBag: FormikProps<{}>\n\tpartner: Partner\n\tlocked: boolean\n\tminDatoSivilstand: string\n}\n\nexport default ({ path, formikBag, partner, ...rest }: PartnerForm) => {\n\tconst handleDoedsdatoChange = (dato: Date) => {\n\t\tconst sivilstander = _get(formikBag.values, `${path}.sivilstander`)\n\t\tconst sisteSivilstand =\n\t\t\t(sivilstander.length > 0 && sivilstander[sivilstander.length - 1].sivilstand) ||\n\t\t\tpartner.sivilstand ||\n\t\t\tnull\n\n\t\tif (dato) {\n\t\t\tformikBag.setFieldValue(`${path}.doedsdato`, dato)\n\n\t\t\tif (sisteSivilstand === 'GIFT') {\n\t\t\t\t_get(formikBag.values, `${path}.sivilstander`).push({\n\t\t\t\t\tsivilstand: 'ENKE',\n\t\t\t\t\tsivilstandRegdato: dato\n\t\t\t\t})\n\t\t\t} else if (sisteSivilstand === 'ENKE') {\n\t\t\t\tsivilstander.length > 0 &&\n\t\t\t\t\tformikBag.setFieldValue(`${path}.sivilstander[${sivilstander.length - 1}]`, {\n\t\t\t\t\t\tsivilstand: 'ENKE',\n\t\t\t\t\t\tsivilstandRegdato: dato\n\t\t\t\t\t})\n\t\t\t} else if (sisteSivilstand === 'REPA') {\n\t\t\t\t_get(formikBag.values, `${path}.sivilstander`).push({\n\t\t\t\t\tsivilstand: 'GJPA',\n\t\t\t\t\tsivilstandRegdato: dato\n\t\t\t\t})\n\t\t\t} else if (sisteSivilstand === 'GJPA') {\n\t\t\t\tsivilstander.length > 0 &&\n\t\t\t\t\tformikBag.setFieldValue(`${path}.sivilstander[${sivilstander.length - 1}]`, {\n\t\t\t\t\t\tsivilstand: 'GJPA',\n\t\t\t\t\t\tsivilstandRegdato: dato\n\t\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\tformikBag.setFieldValue(`${path}.doedsdato`, null)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{partner.ny ? (\n\t\t\t\t<>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.identtype`}\n\t\t\t\t\t\tlabel=\"Identtype\"\n\t\t\t\t\t\toptions={Options('identtype')}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.kjonn`}\n\t\t\t\t\t\tlabel=\"Kjønn\"\n\t\t\t\t\t\tkodeverk={PersoninformasjonKodeverk.Kjoennstyper}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikCheckbox\n\t\t\t\t\t\tname={`${path}.harFellesAdresse`}\n\t\t\t\t\t\tlabel=\"Har felles adresse\"\n\t\t\t\t\t\tcheckboxMargin\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.statsborgerskap`}\n\t\t\t\t\t\tlabel=\"Statsborgerskap\"\n\t\t\t\t\t\tkodeverk={AdresseKodeverk.StatsborgerskapLand}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker name={`${path}.statsborgerskapRegdato`} label=\"Statsborgerskap fra\" />\n\t\t\t\t\t<FormikDatepicker name={`${path}.statsborgerskapTildato`} label=\"Statsborgerskap til\" />\n\t\t\t\t\t<Diskresjonskoder basePath={path} formikBag={formikBag} />\n\t\t\t\t\t<Alder\n\t\t\t\t\t\tbasePath={path}\n\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\ttitle=\"Alder\"\n\t\t\t\t\t\thandleDoed={handleDoedsdatoChange}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t{partner.fornavn} {partner.etternavn} ({partner.ident})\n\t\t\t\t\t</h4>\n\t\t\t\t\t<div className=\"alder-component\">\n\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\tname={`${path}.doedsdato`}\n\t\t\t\t\t\t\tlabel=\"Dødsdato\"\n\t\t\t\t\t\t\tonChange={(dato: Date) => handleDoedsdatoChange(dato)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<Sivilstand\n\t\t\t\tsivilstander={partner.sivilstander}\n\t\t\t\tformikBag={formikBag}\n\t\t\t\tbasePath={`${path}.sivilstander`}\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport { FieldArray } from 'formik'\nimport _get from 'lodash/get'\nimport _has from 'lodash/has'\nimport {\n\tDollyFaBlokk,\n\tDollyFieldArrayWrapper,\n\tFieldArrayAddButton\n} from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport Formatters from '~/utils/DataFormatter'\nimport { erOpprettNyPartnerGyldig } from './sivilstand/SivilstandOptions'\nimport Partnerliste from './partnere/partnerliste'\nimport PartnerForm from './partnere/partnerForm'\nimport { ErrorBoundary } from '~/components/ui/appError/ErrorBoundary'\n\nconst initialValues = {\n\tidenttype: 'FNR',\n\tkjonn: '',\n\tsivilstander: [{ sivilstand: '', sivilstandRegdato: '' }],\n\tharFellesAdresse: false,\n\talder: Formatters.randomIntInRange(30, 60),\n\tdoedsdato: null,\n\tspesreg: '',\n\tutenFastBopel: false,\n\tstatsborgerskap: '',\n\tstatsborgerskapRegdato: '',\n\tstatsborgerskapTildato: ''\n}\n\nconst ugyldigSivilstandState = errors =>\n\t_get(errors, 'tpsf.relasjoner.partnere', []).some(partner => _has(partner, 'sivilstander'))\n\nconst sistePartner = (partnere = []) => partnere[partnere.length - 1]\n\nconst sisteSivilstand = (partner = {}) => {\n\tconst sivilstander = partner.sivilstander || []\n\treturn sivilstander[sivilstander.length - 1]\n}\n\nconst sisteTidligereSivilstandRegdato = partnere => {\n\tconst tidligerePartnere = partnere.filter(partner => !partner.ny)\n\tif (tidligerePartnere.length < 1) return null\n\n\tconst tidligereSivilstander = sistePartner(tidligerePartnere).sivilstander.filter(\n\t\tsivilstand => !sivilstand.ny\n\t)\n\treturn tidligereSivilstander[tidligereSivilstander.length - 1].sivilstandRegdato\n}\n\n// Det er 3 kriterier for å opprette ny partner\n// - Må ha regDato for forholder (error validering sjekker om dato er gyldig)\n// - Må ha sivilstandKode som er gyldig som \"siste forholdstype\"\n// - Må ikke finnes errors i sivilstandform\nexport const sjekkKanOppretteNyPartner = (partnere, formikBag) => {\n\tif (partnere.length < 1) return null\n\tconst { sivilstand, sivilstandRegdato } = sisteSivilstand(sistePartner(partnere))\n\n\tconst gyldigKode = erOpprettNyPartnerGyldig(sivilstand)\n\n\tconst harRegdato = sivilstandRegdato !== null\n\tconst harGyldigSivilstander = !ugyldigSivilstandState(formikBag.errors)\n\treturn harGyldigSivilstander && gyldigKode && harRegdato\n}\n\nconst path = 'tpsf.relasjoner.partnere'\nexport const Partnere = ({ formikBag, personFoerLeggTil }) => (\n\t<FieldArray name={path}>\n\t\t{arrayHelpers => {\n\t\t\t// Vil også vise partnere og sivilstander fra tidligere bestillinger uten å legge dem i formikBag.\n\t\t\t// Lager derfor nytt partnerarray med både nye og tidligere partnere tagget med 'ny: true/false'.\n\t\t\tconst { partnere, partnereUtenomFormikBag, oppdatertPartner } = Partnerliste(\n\t\t\t\tformikBag,\n\t\t\t\tpersonFoerLeggTil,\n\t\t\t\tpath\n\t\t\t)\n\t\t\tconst kanOppretteNyPartner = sjekkKanOppretteNyPartner(partnere, formikBag)\n\t\t\tconst addNewEntry = () => arrayHelpers.push(initialValues)\n\n\t\t\treturn (\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<DollyFieldArrayWrapper header=\"Partner\">\n\t\t\t\t\t\t{partnere.map((c, idx) => {\n\t\t\t\t\t\t\tconst formikIdx =\n\t\t\t\t\t\t\t\t!c.ny && !oppdatertPartner\n\t\t\t\t\t\t\t\t\t? idx - (partnereUtenomFormikBag - 1)\n\t\t\t\t\t\t\t\t\t: idx - partnereUtenomFormikBag\n\n\t\t\t\t\t\t\tconst formikPath = `${path}[${formikIdx}]`\n\t\t\t\t\t\t\tconst isLast = idx === partnere.length - 1\n\n\t\t\t\t\t\t\t// Det er kun mulig å slette siste forhold\n\t\t\t\t\t\t\tconst showRemove = isLast && idx > 0 && c.ny\n\t\t\t\t\t\t\tconst clickRemove = () => arrayHelpers.remove(formikIdx)\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<DollyFaBlokk\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\t\t\theader=\"Partner\"\n\t\t\t\t\t\t\t\t\thandleRemove={clickRemove}\n\t\t\t\t\t\t\t\t\tshowDeleteButton={showRemove}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<PartnerForm\n\t\t\t\t\t\t\t\t\t\tpath={formikPath}\n\t\t\t\t\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\t\t\t\t\tpartner={c}\n\t\t\t\t\t\t\t\t\t\tlocked={idx !== partnere.length - 1}\n\t\t\t\t\t\t\t\t\t\tminDatoSivilstand={sisteTidligereSivilstandRegdato(partnere)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</DollyFaBlokk>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<FieldArrayAddButton\n\t\t\t\t\t\t\thoverText={\n\t\t\t\t\t\t\t\t!kanOppretteNyPartner\n\t\t\t\t\t\t\t\t\t? 'Forhold med tidligere partner må avsluttes (skilt eller enke/-mann)'\n\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taddEntryButtonText=\"Legg til ny partner\"\n\t\t\t\t\t\t\tonClick={addNewEntry}\n\t\t\t\t\t\t\tdisabled={!kanOppretteNyPartner}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</DollyFieldArrayWrapper>\n\t\t\t\t</ErrorBoundary>\n\t\t\t)\n\t\t}}\n\t</FieldArray>\n)\n","import React from 'react'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { Alder } from '~/components/fagsystem/tpsf/form/personinformasjon/partials/alder/Alder'\nimport { Diskresjonskoder } from '~/components/fagsystem/tpsf/form/personinformasjon/partials/diskresjonskoder/Diskresjonskoder'\nimport Formatters from '~/utils/DataFormatter'\nimport _get from 'lodash/get'\n\nconst initialValues = {\n\tidenttype: 'FNR',\n\tkjonn: '',\n\tbarnType: '',\n\tpartnerNr: null,\n\tborHos: '',\n\terAdoptert: false,\n\talder: Formatters.randomIntInRange(0, 17),\n\tdoedsdato: null,\n\tspesreg: '',\n\tutenFastBopel: false,\n\tstatsborgerskap: '',\n\tstatsborgerskapRegdato: '',\n\tstatsborgerskapTildato: ''\n}\n\nexport const initialValuesDoedfoedt = {\n\tidenttype: 'FDAT',\n\tkjonn: '',\n\tbarnType: '',\n\tpartnerNr: null,\n\tfoedselsdato: '',\n\tfoedtEtter: '',\n\tfoedtFoer: '',\n\tdoedsdato: ''\n}\n\nexport const Barn = ({ formikBag, personFoerLeggTil }) => {\n\tconst filterBorHos = (options, index) => {\n\t\tconst partnere = formikBag?.values?.tpsf?.relasjoner?.partnere\n\t\tconst barn = formikBag?.values?.tpsf?.relasjoner?.barn\n\t\tif (!partnere || !barn || index > barn.length) {\n\t\t\treturn options\n\t\t}\n\t\tif (barn[index].partnerNr && barn[index].partnerNr !== '') {\n\t\t\treturn options.filter(opt =>\n\t\t\t\tpartnere[barn[index].partnerNr - 1].harFellesAdresse\n\t\t\t\t\t? opt.value !== 'BEGGE'\n\t\t\t\t\t: opt.value !== 'OSS'\n\t\t\t)\n\t\t}\n\t\treturn options\n\t}\n\n\tconst handleIdenttypeChange = (path, ident, isDoedfoedt) => {\n\t\tif (ident.value === 'FDAT') {\n\t\t\tformikBag.setFieldValue(`${path}`, initialValuesDoedfoedt)\n\t\t} else if (isDoedfoedt) {\n\t\t\tformikBag.setFieldValue(`${path}`, initialValues)\n\t\t}\n\t\tformikBag.setFieldValue(`${path}.identtype`, ident.value)\n\t}\n\n\tconst handleFoedselsdatoChange = (path, dato) => {\n\t\tformikBag.setFieldValue(`${path}.foedselsdato`, dato)\n\t\tformikBag.setFieldValue(`${path}.doedsdato`, dato)\n\t\tformikBag.setFieldValue(`${path}.foedtEtter`, dato)\n\t\tformikBag.setFieldValue(`${path}.foedtFoer`, dato)\n\t}\n\n\tconst getOptionsPartnerNr = () => {\n\t\tconst partnere = formikBag.values.tpsf.relasjoner.partnere\n\t\tconst options = []\n\t\tif (partnere)\n\t\t\tfor (let i = 1; i <= partnere.length; i++) {\n\t\t\t\toptions.push({ value: i, label: `Partner ${i}` })\n\t\t\t}\n\t\treturn options\n\t}\n\n\tconst optionsPartnerNr = getOptionsPartnerNr()\n\n\tinitialValues.alder = Formatters.randomIntInRange(0, 17)\n\n\treturn (\n\t\t<FormikDollyFieldArray name=\"tpsf.relasjoner.barn\" header=\"Barn\" newEntry={initialValues}>\n\t\t\t{(path, idx) => {\n\t\t\t\tconst isDoedfoedt = _get(formikBag.values, `${path}.identtype`) === 'FDAT'\n\t\t\t\tconst eksisterendeBarn = _get(formikBag.values, `${path}.ident`)\n\t\t\t\tconst aktuellRelasjon =\n\t\t\t\t\tpersonFoerLeggTil &&\n\t\t\t\t\teksisterendeBarn &&\n\t\t\t\t\t_get(personFoerLeggTil, 'tpsf.relasjoner').filter(\n\t\t\t\t\t\trelasjon => relasjon.personRelasjonMed.ident === eksisterendeBarn\n\t\t\t\t\t)\n\t\t\t\tconst fornavn = aktuellRelasjon && aktuellRelasjon[0].personRelasjonMed.fornavn\n\t\t\t\tconst etternavn = aktuellRelasjon && aktuellRelasjon[0].personRelasjonMed.etternavn\n\n\t\t\t\treturn !eksisterendeBarn ? (\n\t\t\t\t\t<React.Fragment key={idx}>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.identtype`}\n\t\t\t\t\t\t\tlabel=\"Identtype\"\n\t\t\t\t\t\t\toptions={Options('identtypeBarn')}\n\t\t\t\t\t\t\tonChange={ident => handleIdenttypeChange(path, ident, isDoedfoedt)}\n\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikSelect name={`${path}.kjonn`} label=\"Kjønn\" options={Options('kjonnBarn')} />\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.barnType`}\n\t\t\t\t\t\t\tlabel=\"Foreldre\"\n\t\t\t\t\t\t\toptions={Options('barnType')}\n\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{formikBag.values.tpsf.relasjoner.barn[idx].barnType === 'DITT' &&\n\t\t\t\t\t\t\tformikBag.values.tpsf.relasjoner.partnere && (\n\t\t\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\t\t\tname={`${path}.partnerNr`}\n\t\t\t\t\t\t\t\t\tlabel=\"Forelder\"\n\t\t\t\t\t\t\t\t\toptions={optionsPartnerNr}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t{formikBag.values.tpsf.relasjoner.barn[idx].barnType === 'FELLES' &&\n\t\t\t\t\t\t\tformikBag.values.tpsf.relasjoner.partnere && (\n\t\t\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\t\t\tname={`${path}.partnerNr`}\n\t\t\t\t\t\t\t\t\tlabel=\"Forelder 2\"\n\t\t\t\t\t\t\t\t\toptions={optionsPartnerNr}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isDoedfoedt && (\n\t\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\t\tname={`${path}.borHos`}\n\t\t\t\t\t\t\t\tlabel=\"Bor hos\"\n\t\t\t\t\t\t\t\toptions={filterBorHos(Options('barnBorHos'), idx)}\n\t\t\t\t\t\t\t\tfastfield={false}\n\t\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isDoedfoedt && (\n\t\t\t\t\t\t\t<FormikCheckbox name={`${path}.erAdoptert`} label=\"Er adoptert\" checkboxMargin />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isDoedfoedt && (\n\t\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\t\tname={`${path}.statsborgerskap`}\n\t\t\t\t\t\t\t\tlabel=\"Statsborgerskap\"\n\t\t\t\t\t\t\t\tkodeverk={AdresseKodeverk.StatsborgerskapLand}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isDoedfoedt && (\n\t\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\t\tname={`${path}.statsborgerskapRegdato`}\n\t\t\t\t\t\t\t\tlabel=\"Statsborgerskap fra\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isDoedfoedt && (\n\t\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\t\tname={`${path}.statsborgerskapTildato`}\n\t\t\t\t\t\t\t\tlabel=\"Statsborgerskap til\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isDoedfoedt && <Diskresjonskoder basePath={path} formikBag={formikBag} />}\n\t\t\t\t\t\t{!isDoedfoedt && <Alder basePath={path} formikBag={formikBag} title=\"Alder\" />}\n\t\t\t\t\t\t{isDoedfoedt && (\n\t\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\t\tname={`${path}.foedselsdato`}\n\t\t\t\t\t\t\t\tlabel=\"Dato født\"\n\t\t\t\t\t\t\t\tonChange={dato => handleFoedselsdatoChange(path, dato)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t{fornavn} {etternavn} ({eksisterendeBarn})\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<div className=\"alder-component\">\n\t\t\t\t\t\t\t<FormikDatepicker name={`${path}.doedsdato`} label=\"Dødsdato\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n","import React from 'react'\nimport { AdresseKodeverk, PersoninformasjonKodeverk } from '~/config/kodeverk'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { Alder } from '~/components/fagsystem/tpsf/form/personinformasjon/partials/alder/Alder'\nimport { Diskresjonskoder } from '~/components/fagsystem/tpsf/form/personinformasjon/partials/diskresjonskoder/Diskresjonskoder'\nimport Formatters from '~/utils/DataFormatter'\nimport { FormikProps } from 'formik'\nimport { FormikCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\nimport _get from 'lodash/get'\n\ntype Relasjon = {\n\trelasjonTypeNavn: string\n\tpersonRelasjonMed: {\n\t\tident: string\n\t\tfornavn: string\n\t\tetternavn: string\n\t\tidenttype: string\n\t\tkjonn: string\n\t\talder: number\n\t}\n}\n\ntype Ident = {\n\tlabel: string\n\tlowercaseLabel: string\n\tvalue: string\n}\n\ntype ForeldreType = {\n\tformikBag: FormikProps<{\n\t\ttpsf: {\n\t\t\trelasjoner: {\n\t\t\t\tforeldre: Array<Relasjon>\n\t\t\t}\n\t\t}\n\t}>\n\tpersonFoerLeggTil: { tpsf: { relasjoner: [Relasjon] } }\n}\n\nconst initialValues = {\n\tidenttype: 'FNR',\n\tkjonn: '',\n\tforeldreType: '',\n\tsivilstander: [{ sivilstand: '', sivilstandRegdato: '' }],\n\tharFellesAdresse: true,\n\tdoedsdato: null,\n\talder: Formatters.randomIntInRange(65, 100),\n\tspesreg: '',\n\tutenFastBopel: false,\n\tstatsborgerskap: '',\n\tstatsborgerskapRegdato: '',\n\tstatsborgerskapTildato: ''\n}\n\nexport const Foreldre = ({ formikBag, personFoerLeggTil }: ForeldreType) => {\n\tconst handleIdenttypeChange = (path: string, ident: Ident) => {\n\t\tformikBag.setFieldValue(`${path}`, initialValues)\n\t\tformikBag.setFieldValue(`${path}.identtype`, ident.value)\n\t}\n\n\tconst antallForeldre = formikBag.values.tpsf?.relasjoner?.foreldre?.length\n\n\treturn (\n\t\t<FormikDollyFieldArray\n\t\t\tname=\"tpsf.relasjoner.foreldre\"\n\t\t\theader=\"Forelder\"\n\t\t\ttag={null}\n\t\t\tnewEntry={antallForeldre < 2 ? initialValues : null}\n\t\t\tdisabled={antallForeldre >= 2}\n\t\t>\n\t\t\t{(path: string, idx: number) => {\n\t\t\t\tconst eksisterendeForelder = _get(formikBag.values, `${path}.ident`)\n\t\t\t\tconst aktuellRelasjon =\n\t\t\t\t\tpersonFoerLeggTil &&\n\t\t\t\t\teksisterendeForelder &&\n\t\t\t\t\t_get(personFoerLeggTil, 'tpsf.relasjoner').filter(\n\t\t\t\t\t\trelasjon => relasjon.personRelasjonMed.ident === eksisterendeForelder\n\t\t\t\t\t)\n\t\t\t\tconst gjeldendeForelder = aktuellRelasjon && aktuellRelasjon[0]\n\n\t\t\t\treturn !eksisterendeForelder ? (\n\t\t\t\t\t<React.Fragment key={idx}>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.identtype`}\n\t\t\t\t\t\t\tlabel=\"Identtype\"\n\t\t\t\t\t\t\toptions={Options('identtype')}\n\t\t\t\t\t\t\tonChange={(ident: Ident) => handleIdenttypeChange(path, ident)}\n\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.kjonn`}\n\t\t\t\t\t\t\tlabel=\"Kjønn\"\n\t\t\t\t\t\t\tkodeverk={PersoninformasjonKodeverk.Kjoennstyper}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikCheckbox\n\t\t\t\t\t\t\tname={`${path}.harFellesAdresse`}\n\t\t\t\t\t\t\tlabel=\"Foreldre bor sammen\"\n\t\t\t\t\t\t\tcheckboxMargin\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.foreldreType`}\n\t\t\t\t\t\t\tlabel=\"ForeldreType\"\n\t\t\t\t\t\t\toptions={Options('foreldreType')}\n\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.statsborgerskap`}\n\t\t\t\t\t\t\tlabel=\"Statsborgerskap\"\n\t\t\t\t\t\t\tkodeverk={AdresseKodeverk.StatsborgerskapLand}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikDatepicker name={`${path}.statsborgerskapRegdato`} label=\"Statsborgerskap fra\" />\n\t\t\t\t\t\t<FormikDatepicker name={`${path}.statsborgerskapTildato`} label=\"Statsborgerskap til\" />\n\t\t\t\t\t\t<Diskresjonskoder basePath={path} formikBag={formikBag} />\n\t\t\t\t\t\t<Alder basePath={path} formikBag={formikBag} title=\"Alder\" handleDoed={null} />\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t{gjeldendeForelder.personRelasjonMed.fornavn}{' '}\n\t\t\t\t\t\t\t{gjeldendeForelder.personRelasjonMed.etternavn} -{' '}\n\t\t\t\t\t\t\t{gjeldendeForelder.personRelasjonMed.ident} ({gjeldendeForelder.relasjonTypeNavn})\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<div className=\"alder-component\">\n\t\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\t\tname={`${path}.doedsdato`}\n\t\t\t\t\t\t\t\tlabel=\"Dødsdato\"\n\t\t\t\t\t\t\t\tdisabled={gjeldendeForelder.personRelasjonMed.doedsdato}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n","import React, { useContext } from 'react'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { erForste, panelError } from '~/components/ui/form/formUtils'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { Partnere } from './partials/partnere/Partnere'\nimport { Barn } from './partials/Barn'\nimport { BestillingsveilederContext } from '~/components/bestillingsveileder/Bestillingsveileder'\nimport { Foreldre } from './partials/Foreldre'\n\nconst infoTekst =\n\t'Savner du noen egenskaper for partner/barn? Du kan nå opprette personene hver for seg (uten relasjoner) og koble dem sammen etter de er bestilt. På denne måten kan partner og barn få flere typer egenskaper. Hvis du vil legge inn familierelasjoner raskt gjør du dette her.'\n\nconst relasjonerAttributt = 'tpsf.relasjoner'\n\nexport const Familierelasjoner = ({ formikBag }) => {\n\tconst opts = useContext(BestillingsveilederContext)\n\n\treturn (\n\t\t<Vis attributt={relasjonerAttributt}>\n\t\t\t<Panel\n\t\t\t\theading=\"Familierelasjoner\"\n\t\t\t\tinformasjonstekst={infoTekst}\n\t\t\t\thasErrors={panelError(formikBag, 'tpsf.relasjoner')}\n\t\t\t\ticonType={'relasjoner'}\n\t\t\t\tstartOpen={() => erForste(formikBag.values, [relasjonerAttributt])}\n\t\t\t>\n\t\t\t\t<Kategori title=\"Partnere\" vis=\"tpsf.relasjoner.partnere\">\n\t\t\t\t\t<Partnere formikBag={formikBag} personFoerLeggTil={opts.personFoerLeggTil} />\n\t\t\t\t</Kategori>\n\t\t\t\t<Kategori title=\"Barn\" vis=\"tpsf.relasjoner.barn\">\n\t\t\t\t\t<Barn formikBag={formikBag} personFoerLeggTil={opts.personFoerLeggTil} />\n\t\t\t\t</Kategori>\n\t\t\t\t<Kategori title=\"Foreldre\" vis=\"tpsf.relasjoner.foreldre\">\n\t\t\t\t\t<Foreldre formikBag={formikBag} personFoerLeggTil={opts.personFoerLeggTil} />\n\t\t\t\t</Kategori>\n\t\t\t</Panel>\n\t\t</Vis>\n\t)\n}\n","import React from 'react'\nimport _isEmpty from 'lodash/isEmpty'\nimport { validation } from './validation'\nimport { Personinformasjon } from './personinformasjon/Personinformasjon'\nimport { Adresser } from './adresser/Adresser'\nimport { Identhistorikk } from './Identhistorikk'\nimport { Familierelasjoner } from './familierelasjoner/Familierelasjoner'\n\nexport const TpsfForm = ({ formikBag }) => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Personinformasjon formikBag={formikBag} />\n\t\t\t<Identhistorikk formikBag={formikBag} />\n\t\t\t<Adresser formikBag={formikBag} />\n\t\t\t<Familierelasjoner formikBag={formikBag} />\n\t\t</React.Fragment>\n\t)\n}\n\nTpsfForm.validation = validation\n","import React from 'react'\nimport * as Yup from 'yup'\nimport { ifPresent, requiredBoolean } from '~/utils/YupValidations'\nimport _get from 'lodash/get'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikSelect, DollySelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport Panel from '~/components/ui/panel/Panel'\nimport { erForste, panelError } from '~/components/ui/form/formUtils'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { SelectOptionsOppslag } from '~/service/SelectOptionsOppslag'\nimport { FormikProps } from 'formik'\n\ntype KrrstubForm = {\n\tformikBag: FormikProps<{}>\n}\n\ntype Change = {\n\tvalue: boolean\n}\n\nconst krrAttributt = 'krrstub'\n\nexport const KrrstubForm = ({ formikBag }: KrrstubForm) => {\n\tconst leverandoerer = SelectOptionsOppslag.hentKrrLeverandoerer()\n\t//@ts-ignore\n\tconst leverandoerOptions = SelectOptionsOppslag.formatOptions('sdpLeverandoer', leverandoerer)\n\tconst registrert = _get(formikBag, 'values.krrstub.registrert')\n\n\tconst handleRegistrertChange = (registrert: Change) => {\n\t\tif (!registrert.value) {\n\t\t\tformikBag.setFieldValue('krrstub', {\n\t\t\t\tepost: '',\n\t\t\t\tgyldigFra: null,\n\t\t\t\tmobil: '',\n\t\t\t\tsdpAdresse: '',\n\t\t\t\tsdpLeverandoer: '',\n\t\t\t\tspraak: '',\n\t\t\t\tregistrert: registrert.value,\n\t\t\t\treservert: null\n\t\t\t})\n\t\t} else {\n\t\t\tformikBag.setFieldValue('krrstub.registrert', true)\n\t\t}\n\t}\n\n\treturn (\n\t\t//@ts-ignore\n\t\t<Vis attributt={krrAttributt}>\n\t\t\t<Panel\n\t\t\t\theading=\"Kontakt- og reservasjonsregisteret\"\n\t\t\t\thasErrors={panelError(formikBag, krrAttributt)}\n\t\t\t\ticonType=\"krr\"\n\t\t\t\t//@ts-ignore\n\t\t\t\tstartOpen={() => erForste(formikBag.values, [krrAttributt])}\n\t\t\t>\n\t\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t\t<DollySelect\n\t\t\t\t\t\tname=\"krrstub.registrert\"\n\t\t\t\t\t\tlabel=\"Registrert i KRR\"\n\t\t\t\t\t\toptions={Options('boolean')}\n\t\t\t\t\t\tonChange={handleRegistrertChange}\n\t\t\t\t\t\tvalue={registrert}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tfeil={registrert === null && { feilmelding: 'Feltet er påkrevd' }}\n\t\t\t\t\t/>\n\t\t\t\t\t{registrert && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\t\tname=\"krrstub.reservert\"\n\t\t\t\t\t\t\t\tlabel=\"Reservert\"\n\t\t\t\t\t\t\t\toptions={Options('boolean')}\n\t\t\t\t\t\t\t\tfastfield={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormikTextInput name=\"krrstub.epost\" label=\"E-post\" />\n\t\t\t\t\t\t\t<FormikTextInput name=\"krrstub.mobil\" label=\"Mobilnummer\" type=\"number\" />\n\t\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\t\tname=\"krrstub.spraak\"\n\t\t\t\t\t\t\t\tlabel=\"Språk\"\n\t\t\t\t\t\t\t\toptions={Options('spraaktype')}\n\t\t\t\t\t\t\t\tfastfield={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\t\tname=\"krrstub.gyldigFra\"\n\t\t\t\t\t\t\t\tlabel=\"Kontaktinfo gjelder fra\"\n\t\t\t\t\t\t\t\tfastfield={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{registrert && (\n\t\t\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t\t\t<Kategori title={'Sikker digital postkasse'}>\n\t\t\t\t\t\t\t<FormikTextInput name=\"krrstub.sdpAdresse\" label=\"Adresse\" />\n\t\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\t\tfastfield={false}\n\t\t\t\t\t\t\t\tname=\"krrstub.sdpLeverandoer\"\n\t\t\t\t\t\t\t\tlabel=\"Leverandør\"\n\t\t\t\t\t\t\t\toptions={leverandoerOptions}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Kategori>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Panel>\n\t\t</Vis>\n\t)\n}\n\nKrrstubForm.validation = {\n\tkrrstub: Yup.object({\n\t\tepost: Yup.string(),\n\t\tgyldigFra: Yup.date().nullable(),\n\t\tmobil: Yup.string().matches(/^[0-9]*$/, 'Ugyldig mobilnummer'),\n\t\tsdpAdresse: Yup.string(),\n\t\tsdpLeverandoer: Yup.string(),\n\t\tspraak: Yup.string(),\n\t\tregistrert: ifPresent('$krrstub.registrert', requiredBoolean),\n\t\treservert: Yup.boolean().nullable()\n\t})\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport _isString from 'lodash/isString'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { SigrunKodeverk } from '~/config/kodeverk'\n\nexport const EnkeltinntektForm = ({ path, header, initialGrunnlag, tjeneste, formikBag }) => {\n\treturn (\n\t\t<FormikDollyFieldArray name={path} header={header} newEntry={initialGrunnlag} nested>\n\t\t\t{(path, idx) => (\n\t\t\t\t<React.Fragment key={idx}>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.tekniskNavn`}\n\t\t\t\t\t\tlabel=\"Type inntekt\"\n\t\t\t\t\t\tkodeverk={SigrunKodeverk[tjeneste]}\n\t\t\t\t\t\tsize=\"xxlarge\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\toptionHeight={50}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikTextInput name={`${path}.verdi`} label=\"Beløp\" type=\"number\" />\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n","import React from 'react'\nimport { FieldArray } from 'formik'\nimport { subYears } from 'date-fns'\nimport _get from 'lodash/get'\nimport _isString from 'lodash/isString'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { ErrorMessage } from 'formik'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { EnkeltinntektForm } from './enkeltinntektForm'\nimport Formatters from '~/utils/DataFormatter'\n\nconst initialValues = {\n\tinntektsaar: new Date().getFullYear(),\n\ttjeneste: '',\n\tgrunnlag: [],\n\tsvalbardGrunnlag: []\n}\n\nexport const InntektsaarForm = ({ formikBag }) => {\n\tconst initialGrunnlag = {\n\t\ttekniskNavn: '',\n\t\tverdi: ''\n\t}\n\n\treturn (\n\t\t<FormikDollyFieldArray name=\"sigrunstub\" header=\"Inntekt\" newEntry={initialValues}>\n\t\t\t{path => (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\t\tname={`${path}.inntektsaar`}\n\t\t\t\t\t\t\t\tlabel=\"År\"\n\t\t\t\t\t\t\t\toptions={Formatters.getYearRangeOptions(\n\t\t\t\t\t\t\t\t\t1968,\n\t\t\t\t\t\t\t\t\tsubYears(new Date(), -5).getFullYear()\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\t\tname={`${path}.tjeneste`}\n\t\t\t\t\t\t\t\tlabel=\"Tjeneste\"\n\t\t\t\t\t\t\t\toptions={Options('tjeneste')}\n\t\t\t\t\t\t\t\tdisabled={_get(formikBag.values, `${path}.svalbardGrunnlag`, []).length > 0}\n\t\t\t\t\t\t\t\tfastfield={false}\n\t\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{tjenesteErValgt(formikBag, path) && (\n\t\t\t\t\t\t\t<EnkeltinntektForm\n\t\t\t\t\t\t\t\tpath={`${path}.grunnlag`}\n\t\t\t\t\t\t\t\theader=\"Grunnlag fra Fastlands-Norge\"\n\t\t\t\t\t\t\t\tinitialGrunnlag={initialGrunnlag}\n\t\t\t\t\t\t\t\ttjeneste={_get(formikBag.values, `${path}.tjeneste`)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{_get(formikBag.values, `${path}.tjeneste`) === 'SUMMERT_SKATTEGRUNNLAG' && (\n\t\t\t\t\t\t\t<EnkeltinntektForm\n\t\t\t\t\t\t\t\tpath={`${path}.svalbardGrunnlag`}\n\t\t\t\t\t\t\t\theader=\"Grunnlag fra Svalbard\"\n\t\t\t\t\t\t\t\tinitialGrunnlag={initialGrunnlag}\n\t\t\t\t\t\t\t\ttjeneste={_get(formikBag.values, `${path}.tjeneste`)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<div style={{ marginTop: '20px' }}>\n\t\t\t\t\t\t\t{/* TODO: Vise feilmelding uten at den drunker i annen tekst */}\n\t\t\t\t\t\t\t{_isString(_get(formikBag.errors, `${path}.grunnlag`)) && (\n\t\t\t\t\t\t\t\t<ErrorMessage name={`${path}.grunnlag`} className=\"error-message\" component=\"div\" />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n\nconst tjenesteErValgt = (formikBag, path) => {\n\treturn _get(formikBag.values, `${path}.tjeneste`)\n}\n","import React from 'react'\nimport * as Yup from 'yup'\nimport _get from 'lodash/get'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport Panel from '~/components/ui/panel/Panel'\nimport { panelError } from '~/components/ui/form/formUtils'\nimport { erForste } from '~/components/ui/form/formUtils'\nimport { InntektsaarForm } from './partials/inntektsaarForm'\nimport { ifPresent } from '~/utils/YupValidations'\n\nconst sigrunAttributt = 'sigrunstub'\nexport const SigrunstubForm = ({ formikBag }) => (\n\t<Vis attributt={sigrunAttributt}>\n\t\t<Panel\n\t\t\theading=\"Skatteoppgjør (Sigrun)\"\n\t\t\thasErrors={panelError(formikBag, sigrunAttributt)}\n\t\t\ticonType=\"sigrun\"\n\t\t\tstartOpen={() => erForste(formikBag.values, [sigrunAttributt])}\n\t\t>\n\t\t\t<InntektsaarForm formikBag={formikBag} />\n\t\t</Panel>\n\t</Vis>\n)\n\nSigrunstubForm.validation = {\n\tsigrunstub: ifPresent(\n\t\t'$sigrunstub',\n\t\tYup.array().of(\n\t\t\tYup.object({\n\t\t\t\tgrunnlag: Yup.array()\n\t\t\t\t\t.of(\n\t\t\t\t\t\tYup.object({\n\t\t\t\t\t\t\ttekniskNavn: Yup.string().required('Velg en type inntekt'),\n\t\t\t\t\t\t\tverdi: Yup.number()\n\t\t\t\t\t\t\t\t.min(0, 'Tast inn et gyldig beløp')\n\t\t\t\t\t\t\t\t.typeError('Tast inn et gyldig beløp')\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t\t.test('is-required', 'Legg til minst én inntekt', function checkTjenesteGrunnlag(val) {\n\t\t\t\t\t\tconst values = this.options.context\n\t\t\t\t\t\tconst path = this.options.path\n\t\t\t\t\t\tconst index = path.charAt(path.indexOf('[') + 1)\n\t\t\t\t\t\tif (values.sigrunstub[index].tjeneste === 'BEREGNET_SKATT') {\n\t\t\t\t\t\t\tif (values.sigrunstub[index].grunnlag.length > 0) {\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t} else return false\n\t\t\t\t\t\t} else if (values.sigrunstub[index].tjeneste === 'SUMMERT_SKATTEGRUNNLAG') {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tvalues.sigrunstub[index].grunnlag.length > 0 ||\n\t\t\t\t\t\t\t\tvalues.sigrunstub[index].svalbardGrunnlag.length > 0\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t} else return false\n\t\t\t\t\t\t} else return true\n\t\t\t\t\t}),\n\t\t\t\tinntektsaar: Yup.number()\n\t\t\t\t\t.integer('Ugyldig årstall')\n\t\t\t\t\t.required('Tast inn et gyldig år'),\n\t\t\t\tsvalbardGrunnlag: Yup.array().of(\n\t\t\t\t\tYup.object({\n\t\t\t\t\t\ttekniskNavn: Yup.string().required('Velg en type inntekt'),\n\t\t\t\t\t\tverdi: Yup.number()\n\t\t\t\t\t\t\t.min(0, 'Tast inn et gyldig beløp')\n\t\t\t\t\t\t\t.typeError('Tast inn et gyldig beløp')\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t\ttjeneste: Yup.string().required('Velg en type tjeneste')\n\t\t\t})\n\t\t)\n\t)\n}\n","import * as Yup from 'yup'\nimport _get from 'lodash/get'\nimport { addDays, areIntervalsOverlapping, subMonths } from 'date-fns'\nimport { messages, requiredDate, requiredNumber, requiredString } from '~/utils/YupValidations'\n\nconst unikOrgMndTest = validation => {\n\tconst errorMsg = 'Kombinasjonen av år, måned og virksomhet er ikke unik'\n\treturn validation.test('unikhet', errorMsg, function isUniqueCombination(orgnr) {\n\t\tif (!orgnr) return true\n\n\t\tconst values = this.options.context\n\t\tconst path = this.options.path\n\t\tconst currInntektsinformasjonPath = path.split('.', 2).join('.')\n\t\tconst inntektsinformasjonPath = currInntektsinformasjonPath.split('[')[0]\n\n\t\tconst alleInntekter = _get(values, inntektsinformasjonPath)\n\t\tconst currInntektsinformasjon = _get(values, currInntektsinformasjonPath)\n\t\tif (!currInntektsinformasjon.sisteAarMaaned) return true\n\n\t\treturn !nyeInntekterOverlapper(alleInntekter, currInntektsinformasjon)\n\t})\n}\n\nconst nyeInntekterOverlapper = (alleInntekter, currInntektsinformasjon) => {\n\tconst virksomheter = alleInntekter.map(inntektinfo => inntektinfo.virksomhet)\n\tconst maaneder = alleInntekter.map(inntektinfo => ({\n\t\tsisteAarMaaned: inntektinfo.sisteAarMaaned,\n\t\tantallMaaneder: inntektinfo.antallMaaneder\n\t}))\n\n\tconst likeOrgnrIndex = indexOfLikeOrgnr(virksomheter, currInntektsinformasjon.virksomhet)\n\t//Hvis ingen orgnr er like trenger vi ikke sjekke datoer. Hvis orgnr er like -> finn måneder\n\tif (likeOrgnrIndex.length < 2) return false\n\n\tconst tidsrom = finnTidsrom(maaneder)\n\treturn finnesOverlappendeDato(tidsrom, likeOrgnrIndex)\n}\n\nconst indexOfLikeOrgnr = (virksomheter, orgnr) => {\n\tconst index = []\n\tvirksomheter.forEach((virksomhet, idx) => virksomhet === orgnr && index.push(idx))\n\treturn index\n}\n\nconst dato = aarMaaned => {\n\tconst year = aarMaaned.split('-')[0]\n\tconst month = aarMaaned.split('-')[1]\n\treturn new Date(year, month - 1)\n}\n\nconst finnTidsrom = maaneder => maaneder.map(maaned => getInterval(maaned))\n\nconst getInterval = inntektsinformasjon => {\n\tconst currDato = dato(inntektsinformasjon.sisteAarMaaned)\n\treturn inntektsinformasjon.antallMaaneder && inntektsinformasjon.antallMaaneder > 1\n\t\t? {\n\t\t\t\tstart: subMonths(currDato, inntektsinformasjon.antallMaaneder - 1),\n\t\t\t\tend: currDato\n\t\t  }\n\t\t: {\n\t\t\t\tstart: currDato,\n\t\t\t\tend: addDays(currDato, 1)\n\t\t  }\n}\n\nconst finnesOverlappendeDato = (tidsrom, index) => {\n\tconst tidsromSomIkkeKanOverlappe = index.map(idx => tidsrom[idx])\n\tconst firstInterval = tidsromSomIkkeKanOverlappe[0]\n\n\treturn tidsromSomIkkeKanOverlappe.some((tidsrom, idx) => {\n\t\tif (idx === 0) return //Tester mot første tidsrom\n\t\treturn areIntervalsOverlapping(\n\t\t\t{ start: firstInterval.start, end: addDays(firstInterval.end, 1) },\n\t\t\t{ start: tidsrom.start, end: tidsrom.end }\n\t\t)\n\t})\n}\n\nconst inntektsliste = Yup.array().of(\n\tYup.object({\n\t\tbeloep: requiredNumber.typeError(messages.required),\n\t\tstartOpptjeningsperiode: Yup.string().nullable(),\n\t\tsluttOpptjeningsperiode: Yup.string().nullable()\n\t})\n)\n\nconst fradragsliste = Yup.array().of(\n\tYup.object({\n\t\tbeloep: requiredNumber.typeError(messages.required),\n\t\tbeskrivelse: requiredString\n\t})\n)\n\nconst forskuddstrekksliste = Yup.array().of(\n\tYup.object({\n\t\tbeloep: requiredNumber.typeError(messages.required),\n\t\tbeskrivelse: Yup.string().nullable()\n\t})\n)\n\nconst arbeidsforholdsliste = Yup.array().of(\n\tYup.object({\n\t\tarbeidsforholdstype: requiredString,\n\t\tstartdato: Yup.mixed().when('sluttdato', {\n\t\t\tis: val => val !== undefined,\n\t\t\tthen: requiredDate\n\t\t}),\n\t\tsluttdato: Yup.string().nullable(),\n\t\tantallTimerPerUkeSomEnFullStillingTilsvarer: Yup.number()\n\t\t\t.transform((i, j) => (j === '' ? null : i))\n\t\t\t.nullable(),\n\t\tavloenningstype: Yup.string().nullable(),\n\t\tyrke: Yup.string().nullable(),\n\t\tarbeidstidsordning: Yup.string().nullable(),\n\t\tstillingsprosent: Yup.number()\n\t\t\t.transform((i, j) => (j === '' ? null : i))\n\t\t\t.nullable(),\n\t\tsisteLoennsendringsdato: Yup.string().nullable(),\n\t\tsisteDatoForStillingsprosentendring: Yup.string().nullable()\n\t})\n)\n\nexport const validation = {\n\tinntektstub: Yup.object({\n\t\tinntektsinformasjon: Yup.array().of(\n\t\t\tYup.object({\n\t\t\t\tsisteAarMaaned: requiredString.matches(/^\\d{4}\\-(0[1-9]|1[012])$/, {\n\t\t\t\t\tmessage: 'Dato må være på formatet yyyy-MM',\n\t\t\t\t\texcludeEmptyString: true\n\t\t\t\t}),\n\t\t\t\tantallMaaneder: Yup.number()\n\t\t\t\t\t.integer('Kan ikke være et desimaltall')\n\t\t\t\t\t.transform((i, j) => (j === '' ? null : i))\n\t\t\t\t\t.min(1, 'Antall måneder må være et positivt tall')\n\t\t\t\t\t.nullable(),\n\t\t\t\tvirksomhet: unikOrgMndTest(requiredString.typeError(messages.required)).nullable(),\n\t\t\t\t// virksomhet: requiredString.typeError(messages.required),\n\t\t\t\topplysningspliktig: requiredString,\n\t\t\t\tinntektsliste: inntektsliste,\n\t\t\t\tfradragsliste: fradragsliste,\n\t\t\t\tforskuddstrekksliste: forskuddstrekksliste,\n\t\t\t\tarbeidsforholdsliste: arbeidsforholdsliste\n\t\t\t})\n\t\t)\n\t})\n}\n","import Api from '@/api'\n\nexport type Organisasjon = {\n\torgnummer: string\n\tenhetstype: string\n\tnavn: string\n\tredigertNavn?: string\n\tepost?: string\n\tinternetAdresse?: string\n\tnaeringskode?: string\n\toverenhet?: string\n\tforretningsAdresse?: Adresse\n\tpostadresse?: Adresse\n\topprinnelse?: string\n\ttags: string[]\n}\n\nexport type Adresse = {\n\tadresselinje1?: string\n\tadresselinje2?: string\n\tadresselinje3?: string\n\tpostnr?: string\n\tkommunenr?: string\n\tlandkode?: string\n\tpoststed?: string\n}\n\nconst fetchOrganisasjoner = (gruppe: string, kanHaArbeidsforhold: boolean = null) =>\n\tApi.fetchJson<Organisasjon[]>(\n\t\t`/testnav-organisasjon-faste-data-service/api/v1/organisasjoner?gruppe=${gruppe}${\n\t\t\tkanHaArbeidsforhold !== null ? '&kanHaArbeidsforhold=' + kanHaArbeidsforhold : ''\n\t\t}`,\n\t\t{\n\t\t\tmethod: 'GET'\n\t\t}\n\t)\n\nexport default { fetchOrganisasjoner }\n","import * as React from 'react'\nimport LoadableComponent, { Feilmelding } from '~/components/ui/loading/LoadableComponent'\nimport OrganisasjonFasteDataService, {\n\tOrganisasjon as FasteDataOrganisasjon\n} from '@/service/services/organisasjonFasteDataService/OrganisasjonFasteDataService'\nimport { Organisasjon } from './types'\nimport { ErrorBoundary } from '~/components/ui/appError/ErrorBoundary'\nimport LoadableComponentWithRetry from '~/components/ui/loading/LoadableComponentWithRetry'\n\ntype OrganisasjonLoaderProps = {\n\tkanHaArbeidsforhold?: boolean\n\tvalueNavn?: boolean\n\trender: (list: Organisasjon[]) => JSX.Element\n}\n\nexport const OrganisasjonLoader = ({\n\tkanHaArbeidsforhold,\n\trender,\n\tvalueNavn = false\n}: OrganisasjonLoaderProps) => {\n\tconst formatLabel = (response: FasteDataOrganisasjon) =>\n\t\t`${response.orgnummer} (${response.enhetstype}) - ${response.navn}`\n\tconst onFetch = () =>\n\t\tOrganisasjonFasteDataService.fetchOrganisasjoner('DOLLY', kanHaArbeidsforhold).then(\n\t\t\t(liste: FasteDataOrganisasjon[]) =>\n\t\t\t\tliste\n\t\t\t\t\t.sort(function(a: FasteDataOrganisasjon, b: FasteDataOrganisasjon) {\n\t\t\t\t\t\tif (a.opprinnelse < b.opprinnelse) return 1\n\t\t\t\t\t\tif (a.opprinnelse > b.opprinnelse) return -1\n\t\t\t\t\t\treturn 0\n\t\t\t\t\t})\n\t\t\t\t\t.map((response: FasteDataOrganisasjon) => ({\n\t\t\t\t\t\tvalue: valueNavn ? response.navn : response.orgnummer,\n\t\t\t\t\t\tlabel: formatLabel(response),\n\t\t\t\t\t\torgnr: response.orgnummer,\n\t\t\t\t\t\tjuridiskEnhet: response.overenhet,\n\t\t\t\t\t\tnavn: response.navn,\n\t\t\t\t\t\tforretningsAdresse: response.forretningsAdresse,\n\t\t\t\t\t\tpostadresse: response.postadresse\n\t\t\t\t\t}))\n\t\t)\n\treturn (\n\t\t<LoadableComponentWithRetry\n\t\t\tonFetch={onFetch}\n\t\t\trender={(list: Organisasjon[]) => render(list)}\n\t\t\tlabel=\"Laster organisasjoner\"\n\t\t/>\n\t)\n}\n","import * as React from 'react'\nimport { OrganisasjonLoader } from './OrganisasjonLoader'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\n\nexport type OrganisasjonSelectProps = {\n\tpath: string\n\tlabel: string\n\tisClearable?: boolean\n\tafterChange?: Function\n\tvalueNavn?: boolean\n\tkanHaArbeidsforhold?: boolean\n}\n\nexport const OrganisasjonSelect = ({\n\tpath,\n\tlabel,\n\tafterChange = null,\n\tvalueNavn = false,\n\tkanHaArbeidsforhold\n}: OrganisasjonSelectProps) => (\n\t<OrganisasjonLoader\n\t\tkanHaArbeidsforhold={kanHaArbeidsforhold}\n\t\tvalueNavn={valueNavn}\n\t\trender={liste => (\n\t\t\t<FormikSelect\n\t\t\t\tname={path}\n\t\t\t\tlabel={label}\n\t\t\t\toptions={liste}\n\t\t\t\ttype=\"text\"\n\t\t\t\tsize=\"xlarge\"\n\t\t\t\tisClearable={false}\n\t\t\t\toptionHeight={50}\n\t\t\t\tafterChange={afterChange}\n\t\t\t/>\n\t\t)}\n\t/>\n)\n","import * as React from 'react'\nimport { OrganisasjonSelect } from './OrganisasjonSelect'\n\ntype OrganisasjonMedArbeidsforholdSelect = {\n\tpath: string\n\tlabel: string\n\tafterChange?: Function\n\tvalueNavn?: boolean\n}\n\nexport const OrganisasjonMedArbeidsforholdSelect = (props: OrganisasjonMedArbeidsforholdSelect) => (\n\t<OrganisasjonSelect {...props} kanHaArbeidsforhold={true} />\n)\n","import React, { useEffect, useState } from 'react'\nimport { ToggleGruppe, ToggleKnapp } from '~/components/ui/toggle/Toggle'\nimport { DollyTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { OrganisasjonMedArbeidsforholdSelect } from '~/components/organisasjonSelect'\nimport { MiljoeApi, OrgserviceApi } from '~/service/Api'\nimport { useBoolean } from 'react-use'\nimport Icon from '~/components/ui/icon/Icon'\nimport { DollySelect } from '~/components/ui/form/inputs/select/Select'\n\nconst inputValg = { fraListe: 'velg', skrivSelv: 'skriv' }\n\nexport const OrgnummerToggle = ({ formikBag, path, opplysningspliktigPath }) => {\n\tconst [inputType, setInputType] = useState(inputValg.fraListe)\n\tconst [error, setError] = useState(null)\n\tconst [success, setSuccess] = useBoolean(false)\n\tconst [aktiveMiljoer, setAktiveMiljoer] = useState(null)\n\tconst [environment, setEnvironment] = useState(null)\n\tconst [orgnummer, setOrgnummer] = useState(null)\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst resp = await MiljoeApi.getAktiveMiljoer()\n\t\t\tsetAktiveMiljoer(resp.data)\n\t\t}\n\t\tfetchData()\n\t}, [])\n\n\tconst handleToggleChange = event => {\n\t\tsetInputType(event.target.value)\n\t\tformikBag.setFieldValue(path, '')\n\t}\n\n\tconst handleChange = value => {\n\t\topplysningspliktigPath &&\n\t\t\tformikBag.setFieldValue(`${opplysningspliktigPath}`, value.juridiskEnhet)\n\t\tformikBag.setFieldValue(`${path}`, value.orgnr)\n\t}\n\n\tconst handleManualOrgChange = (org, miljo) => {\n\t\tif (!orgnummer) return\n\t\tsetError(null)\n\t\tsetSuccess(false)\n\t\tOrgserviceApi.getOrganisasjonInfo(org, miljo)\n\t\t\t.then(response => {\n\t\t\t\tif (\n\t\t\t\t\t!response.data.enhetType.includes('BEDR') &&\n\t\t\t\t\t!response.data.enhetType.includes('AAFY')\n\t\t\t\t) {\n\t\t\t\t\tsetError('Organisasjonen må være av type BEDR eller AAFY')\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tsetSuccess(true)\n\t\t\t\topplysningspliktigPath &&\n\t\t\t\t\tformikBag.setFieldValue(`${opplysningspliktigPath}`, response.data.juridiskEnhet)\n\t\t\t\tformikBag.setFieldValue(`${path}`, response.data.orgnummer)\n\t\t\t})\n\t\t\t.catch(() => setError('Fant ikke organisasjonen i ' + (miljo ? miljo : 'q1')))\n\t}\n\n\treturn (\n\t\t<div className=\"toggle--wrapper\">\n\t\t\t<ToggleGruppe onChange={handleToggleChange} name={path}>\n\t\t\t\t<ToggleKnapp\n\t\t\t\t\tkey={inputValg.fraListe}\n\t\t\t\t\tvalue={inputValg.fraListe}\n\t\t\t\t\tchecked={inputType === inputValg.fraListe}\n\t\t\t\t>\n\t\t\t\t\tVelg organisasjonsnummer\n\t\t\t\t</ToggleKnapp>\n\t\t\t\t<ToggleKnapp\n\t\t\t\t\tkey={inputValg.skrivSelv}\n\t\t\t\t\tvalue={inputValg.skrivSelv}\n\t\t\t\t\tchecked={inputType === inputValg.skrivSelv}\n\t\t\t\t>\n\t\t\t\t\tSkriv inn organisasjonsnummer\n\t\t\t\t</ToggleKnapp>\n\t\t\t</ToggleGruppe>\n\n\t\t\t{inputType === inputValg.fraListe ? (\n\t\t\t\t<OrganisasjonMedArbeidsforholdSelect\n\t\t\t\t\tafterChange={handleChange}\n\t\t\t\t\tpath={path}\n\t\t\t\t\tlabel={'Organisasjonsnummer'}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<div className={'flexbox--align-center'}>\n\t\t\t\t\t<DollyTextInput\n\t\t\t\t\t\tname={path}\n\t\t\t\t\t\ttype={'number'}\n\t\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\t\tlabel={'Organisasjonsnummer'}\n\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\tconst org = event.target.value\n\t\t\t\t\t\t\tsetOrgnummer(org)\n\t\t\t\t\t\t\thandleManualOrgChange(org, environment)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tfeil={\n\t\t\t\t\t\t\terror && {\n\t\t\t\t\t\t\t\tfeilmelding: error\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<DollySelect\n\t\t\t\t\t\tname={path}\n\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tfastfield={false}\n\t\t\t\t\t\tlabel={'Organisasjon Miljø'}\n\t\t\t\t\t\toptions={\n\t\t\t\t\t\t\taktiveMiljoer &&\n\t\t\t\t\t\t\taktiveMiljoer\n\t\t\t\t\t\t\t\t.sort((a, b) =>\n\t\t\t\t\t\t\t\t\ta.localeCompare(b, undefined, {\n\t\t\t\t\t\t\t\t\t\tnumeric: true,\n\t\t\t\t\t\t\t\t\t\tsensitivity: 'base'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map(value => ({\n\t\t\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t\t\t\tlabel: value.toUpperCase()\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tplaceholder={'q1'}\n\t\t\t\t\t\tvalue={environment}\n\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\tsetEnvironment(event.value)\n\t\t\t\t\t\t\thandleManualOrgChange(orgnummer, event.value)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{success && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Icon kind=\"feedback-check-circle\" /> Organisasjon funnet\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import React, { useState } from 'react'\nimport _get from 'lodash/get'\nimport { FormikProps } from 'formik'\nimport { ToggleGruppe, ToggleKnapp } from '~/components/ui/toggle/Toggle'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { InntektstubOrgnummerSelect } from './inntektstubOrgnummerSelect'\n\ntype InntektstubVirksomhetToggle = {\n\tformikBag: FormikProps<{}>\n\tpath: string\n}\n\nenum ToggleValg {\n\tORGANISASJON = 'ORGANISASJON',\n\tPRIVAT = 'PRIVAT'\n}\n\nexport const InntektstubVirksomhetToggle = ({ formikBag, path }: InntektstubVirksomhetToggle) => {\n\tconst virksomhetPath = `${path}.virksomhet`\n\tconst opplysningspliktigPath = `${path}.opplysningspliktig`\n\tconst orgnummerLength = 9\n\n\tconst [inputType, setInputType] = useState(\n\t\t_get(formikBag.values, virksomhetPath)\n\t\t\t? _get(formikBag.values, virksomhetPath).length === orgnummerLength\n\t\t\t\t? ToggleValg.ORGANISASJON\n\t\t\t\t: ToggleValg.PRIVAT\n\t\t\t: ToggleValg.ORGANISASJON\n\t)\n\n\tconst handleToggleChange = (event: React.ChangeEvent<any>) => {\n\t\tsetInputType(event.target.value)\n\t\tformikBag.setFieldValue(virksomhetPath, '')\n\t\tformikBag.setFieldValue(opplysningspliktigPath, '')\n\t}\n\n\treturn (\n\t\t<div className=\"toggle--wrapper\">\n\t\t\t<ToggleGruppe onChange={handleToggleChange} name={path}>\n\t\t\t\t<ToggleKnapp\n\t\t\t\t\tkey={ToggleValg.ORGANISASJON}\n\t\t\t\t\tvalue={ToggleValg.ORGANISASJON}\n\t\t\t\t\tchecked={inputType === ToggleValg.ORGANISASJON}\n\t\t\t\t>\n\t\t\t\t\tOrganisasjon\n\t\t\t\t</ToggleKnapp>\n\t\t\t\t<ToggleKnapp\n\t\t\t\t\tkey={ToggleValg.PRIVAT}\n\t\t\t\t\tvalue={ToggleValg.PRIVAT}\n\t\t\t\t\tchecked={inputType === ToggleValg.PRIVAT}\n\t\t\t\t>\n\t\t\t\t\tPrivat\n\t\t\t\t</ToggleKnapp>\n\t\t\t</ToggleGruppe>\n\n\t\t\t{inputType === ToggleValg.ORGANISASJON ? (\n\t\t\t\t<InntektstubOrgnummerSelect path={path} formikBag={formikBag} />\n\t\t\t) : (\n\t\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t\t<FormikTextInput name={virksomhetPath} label=\"Virksomhet (fnr/dnr/bost)\" size=\"medium\" />\n\t\t\t\t\t<FormikTextInput name={opplysningspliktigPath} label=\"Opplysningspliktig\" size=\"medium\" />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { OrganisasjonLoader } from '~/components/organisasjonSelect'\nimport { OrgnummerToggle } from '~/components/fagsystem/aareg/form/partials/orgnummerToggle'\n\nexport const InntektstubOrgnummerSelect = ({ path, formikBag }) => {\n\treturn (\n\t\t<OrganisasjonLoader\n\t\t\tkanHaArbeidsforhold={true}\n\t\t\trender={() => (\n\t\t\t\t<OrgnummerToggle\n\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\tpath={`${path}.virksomhet`}\n\t\t\t\t\topplysningspliktigPath={`${path}.opplysningspliktig`}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n\t)\n}\n","const tilleggsinformasjonPaths = {\n\taaretUtbetalingenGjelderFor: 'tilleggsinformasjon.bonusFraForsvaret.aaretUtbetalingenGjelderFor',\n\tetterbetalingsperiodeStart: 'tilleggsinformasjon.etterbetalingsperiode.startdato',\n\tetterbetalingsperiodeSlutt: 'tilleggsinformasjon.etterbetalingsperiode.sluttdato',\n\tgrunnpensjonsbeloep: 'tilleggsinformasjon.pensjon.grunnpensjonsbeloep',\n\theravEtterlattepensjon: 'tilleggsinformasjon.pensjon.heravEtterlattepensjon',\n\tpensjonsgrad: 'tilleggsinformasjon.pensjon.pensjonsgrad',\n\tpensjonTidsromStart: 'tilleggsinformasjon.pensjon.tidsrom.startdato',\n\tpensjonTidsromSlutt: 'tilleggsinformasjon.pensjon.tidsrom.sluttdato',\n\ttilleggspensjonsbeloep: 'tilleggsinformasjon.pensjon.tilleggspensjonsbeloep',\n\tufoeregrad: 'tilleggsinformasjon.pensjon.ufoeregrad',\n\tpersontype: 'tilleggsinformasjon.reiseKostOgLosji.persontype',\n\tinntjeningsforhold: 'tilleggsinformasjon.inntjeningsforhold.inntjeningsforhold'\n}\n\nexport default key => (tilleggsinformasjonPaths[key] ? tilleggsinformasjonPaths[key] : key)\n","import React, { useEffect } from 'react'\nimport _get from 'lodash/get'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport texts from '../texts'\nimport tilleggsinformasjonPaths from '../paths'\n\nconst sjekkFelt = (field, options, values, path) => {\n\tconst fieldValue = _get(values, path)\n\tconst fieldPath = tilleggsinformasjonPaths(field)\n\tif (!options.includes('<TOM>')) {\n\t\tif (fieldValue && !_get(fieldValue, fieldPath) && _get(fieldValue, fieldPath) !== false) {\n\t\t\treturn { feilmelding: 'Feltet er påkrevd' }\n\t\t}\n\t}\n}\n\nconst dateFields = [\n\t'etterbetalingsperiodeStart',\n\t'etterbetalingsperiodeSlutt',\n\t'pensjonTidsromStart',\n\t'pensjonTidsromSlutt'\n]\n\nconst numberFields = [\n\t'grunnpensjonsbeloep',\n\t'heravEtterlattepensjon',\n\t'pensjonsgrad',\n\t'tilleggspensjonsbeloep',\n\t'ufoeregrad',\n\t'antall'\n]\n\nconst wideFields = ['beskrivelse', 'inntjeningsforhold', 'persontype']\n\nconst booleanField = options => {\n\treturn options.length > 0 && typeof options[0] === 'boolean'\n}\n\nfunction optionsUtfylt(options) {\n\treturn (\n\t\t(options.length === 2 && options.includes('<TOM>') && options.includes('<UTFYLT>')) ||\n\t\t(options.length === 1 && options[0] === '<UTFYLT>')\n\t)\n}\n\nconst fieldResolver = (\n\tfield,\n\thandleChange,\n\tformik,\n\tpath,\n\tindex,\n\tresetForm,\n\ttilleggsinformasjonAttributter,\n\toptions = []\n) => {\n\tconst values = formik.values\n\tif (dateFields.includes(field)) {\n\t\treturn (\n\t\t\t<FormikDatepicker\n\t\t\t\tkey={index}\n\t\t\t\tvisHvisAvhuket={false}\n\t\t\t\tname={field}\n\t\t\t\tlabel={texts(field)}\n\t\t\t\tafterChange={handleChange}\n\t\t\t\tfeil={sjekkFelt(field, options, values, path)}\n\t\t\t/>\n\t\t)\n\t} else if (field === 'skattemessigBosattILand' || field === 'opptjeningsland') {\n\t\treturn (\n\t\t\t<FormikSelect\n\t\t\t\tkey={index}\n\t\t\t\tname={field}\n\t\t\t\tlabel={texts(field)}\n\t\t\t\tkodeverk={AdresseKodeverk.ArbeidOgInntektLand}\n\t\t\t\tfastfield={false}\n\t\t\t\tafterChange={handleChange}\n\t\t\t\tsize=\"large\"\n\t\t\t\tfeil={sjekkFelt(field, options, values, path)}\n\t\t\t/>\n\t\t)\n\t} else if (optionsUtfylt(options)) {\n\t\treturn (\n\t\t\t<FormikTextInput\n\t\t\t\tkey={index}\n\t\t\t\tvisHvisAvhuket={false}\n\t\t\t\tname={field}\n\t\t\t\tlabel={texts(field)}\n\t\t\t\tonSubmit={handleChange}\n\t\t\t\tsize={numberFields.includes(field) ? 'medium' : 'large'}\n\t\t\t\tfeil={sjekkFelt(field, options, values, path)}\n\t\t\t\ttype={numberFields.includes(field) ? 'number' : 'text'}\n\t\t\t/>\n\t\t)\n\t}\n\tconst filteredOptions = options.map(option => ({ label: texts(option), value: option }))\n\tconst fieldPath = `${path}.${tilleggsinformasjonPaths(field)}`\n\tconst tomTilleggsinformasjonFieldPath =\n\t\ttilleggsinformasjonAttributter[filteredOptions[0].value] &&\n\t\t`${path}.tilleggsinformasjon.${tilleggsinformasjonAttributter[filteredOptions[0].value]}`\n\n\tif (\n\t\t!resetForm &&\n\t\tfilteredOptions.length === 1 &&\n\t\ttilleggsinformasjonAttributter[filteredOptions[0].value] &&\n\t\t!_get(values, tomTilleggsinformasjonFieldPath)\n\t) {\n\t\tuseEffect(() => {\n\t\t\tformik.setFieldValue(\n\t\t\t\t`${path}.tilleggsinformasjon.${tilleggsinformasjonAttributter[filteredOptions[0].value]}`,\n\t\t\t\t{}\n\t\t\t)\n\t\t\tformik.setFieldValue(`${path}.tilleggsinformasjonstype`, filteredOptions[0].value)\n\t\t})\n\t} else if (\n\t\t!resetForm &&\n\t\tfilteredOptions.length === 1 &&\n\t\t_get(values, fieldPath) !== filteredOptions[0].value &&\n\t\t!tilleggsinformasjonAttributter[filteredOptions[0].value]\n\t) {\n\t\tuseEffect(() => {\n\t\t\tformik.setFieldValue(fieldPath, filteredOptions[0].value)\n\t\t})\n\t}\n\n\treturn (\n\t\t<FormikSelect\n\t\t\tkey={index}\n\t\t\tname={field}\n\t\t\tvalue={filteredOptions.length === 1 ? filteredOptions[0].value : _get(values, fieldPath)}\n\t\t\tlabel={texts(field)}\n\t\t\toptions={filteredOptions.filter(option => option.value !== '<TOM>')}\n\t\t\tfastfield={false}\n\t\t\tafterChange={handleChange}\n\t\t\tsize={booleanField(options) ? 'small' : wideFields.includes(field) ? 'xxlarge' : 'large'}\n\t\t\tfeil={sjekkFelt(field, options, values, path)}\n\t\t\tisClearable={field !== 'inntektstype'}\n\t\t/>\n\t)\n}\n\nconst Inntekt = ({\n\tfields = {},\n\tonValidate,\n\tformikBag,\n\tpath,\n\tresetForm,\n\ttilleggsinformasjonAttributter\n}) => {\n\treturn (\n\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t{fieldResolver(\n\t\t\t\t'inntektstype',\n\t\t\t\tonValidate,\n\t\t\t\tformikBag,\n\t\t\t\tpath,\n\t\t\t\t`${path}.inntektstype`,\n\t\t\t\tresetForm,\n\t\t\t\ttilleggsinformasjonAttributter,\n\t\t\t\t['LOENNSINNTEKT', 'YTELSE_FRA_OFFENTLIGE', 'PENSJON_ELLER_TRYGD', 'NAERINGSINNTEKT']\n\t\t\t)}\n\n\t\t\t{Object.keys(fields)\n\t\t\t\t.filter(field => !(fields[field].length === 1 && fields[field][0] === '<TOM>'))\n\t\t\t\t.map(field =>\n\t\t\t\t\tfieldResolver(\n\t\t\t\t\t\tfield,\n\t\t\t\t\t\tonValidate,\n\t\t\t\t\t\tformikBag,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\t`${path}.${field}`,\n\t\t\t\t\t\tresetForm,\n\t\t\t\t\t\ttilleggsinformasjonAttributter,\n\t\t\t\t\t\tfields[field]\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t</div>\n\t)\n}\n\nInntekt.displayName = 'Inntekt'\n\nexport default Inntekt\n","import React, { useEffect, useState } from 'react'\nimport _get from 'lodash/get'\nimport Inntekt from './Inntekt'\nimport { Formik } from 'formik'\nimport tilleggsinformasjonPaths from '../paths'\nimport { useBoolean } from 'react-use'\nimport InntektstubService from '@/service/services/inntektstub/InntektstubService'\n\nconst InntektStub = ({ formikBag, inntektPath }) => {\n\tconst [fields, setFields] = useState({})\n\tconst [reset, setReset] = useBoolean(false)\n\tconst [inntektValues, setInntektValues] = useState(_get(formikBag.values, inntektPath))\n\tconst [currentInntektstype, setCurrentInntektstype] = useState(\n\t\t_get(formikBag.values, `${inntektPath}.inntektstype`)\n\t)\n\tconst [currentTilleggsinformasjonstype, setCurrentTilleggsinformasjonstype] = useState(\n\t\t_get(formikBag.values, `${inntektPath}.tilleggsinformasjonstype`)\n\t)\n\n\tconst tilleggsinformasjonAttributter = {\n\t\tBilOgBaat: 'bilOgBaat',\n\t\tDagmammaIEgenBolig: 'dagmammaIEgenBolig',\n\t\tNorskKontinentalsokkel: 'inntektPaaNorskKontinentalsokkel',\n\t\tLivrente: 'livrente',\n\t\tLottOgPartInnenFiske: 'lottOgPart',\n\t\tNettoloennsordning: 'nettoloenn',\n\t\tUtenlandskArtist: 'utenlandskArtist'\n\t}\n\n\tuseEffect(() => {\n\t\tsetCurrentInntektstype(_get(formikBag.values, `${inntektPath}.inntektstype`))\n\t})\n\n\tuseEffect(() => {\n\t\tsetCurrentTilleggsinformasjonstype(\n\t\t\t_get(formikBag.values, `${inntektPath}.tilleggsinformasjonstype`)\n\t\t)\n\t})\n\n\tuseEffect(() => {\n\t\tif (inntektValues.inntektstype !== '' && Object.keys(fields).length < 1) {\n\t\t\tInntektstubService.validate(inntektValues).then(response => {\n\t\t\t\tsetFields(response)\n\t\t\t})\n\t\t}\n\t}, [])\n\n\tconst setFormikBag = values => {\n\t\tconst nullstiltInntekt = {\n\t\t\tbeloep: _get(formikBag.values, `${inntektPath}.beloep`),\n\t\t\tstartOpptjeningsperiode: _get(formikBag.values, `${inntektPath}.startOpptjeningsperiode`),\n\t\t\tsluttOpptjeningsperiode: _get(formikBag.values, `${inntektPath}.sluttOpptjeningsperiode`),\n\t\t\tinntektstype: values.inntektstype\n\t\t}\n\n\t\tif (values.inntektstype !== currentInntektstype) {\n\t\t\tformikBag.setFieldValue(inntektPath, nullstiltInntekt)\n\t\t} else {\n\t\t\tfor (const [key, value] of Object.entries(values)) {\n\t\t\t\tif (key === 'tilleggsinformasjonstype') {\n\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\tformikBag.setFieldValue(`${inntektPath}.tilleggsinformasjon`, undefined)\n\t\t\t\t\t\tformikBag.setFieldValue(`${inntektPath}.tilleggsinformasjonstype`, '')\n\t\t\t\t\t} else if (value !== currentTilleggsinformasjonstype) {\n\t\t\t\t\t\tformikBag.setFieldValue(`${inntektPath}.tilleggsinformasjon`, {})\n\t\t\t\t\t}\n\t\t\t\t\tsetCurrentTilleggsinformasjonstype(value)\n\t\t\t\t}\n\t\t\t\tif (tilleggsinformasjonAttributter[value]) {\n\t\t\t\t\tformikBag.setFieldValue(\n\t\t\t\t\t\t`${inntektPath}.tilleggsinformasjon.${tilleggsinformasjonAttributter[value]}`,\n\t\t\t\t\t\t{}\n\t\t\t\t\t)\n\t\t\t\t\tformikBag.setFieldValue(`${inntektPath}.${key}`, value)\n\t\t\t\t} else {\n\t\t\t\t\tif (tilleggsinformasjonPaths(key) !== key) {\n\t\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\t\tformikBag.setFieldValue(`${inntektPath}.tilleggsinformasjon`, undefined)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tformikBag.setFieldValue(`${inntektPath}.${tilleggsinformasjonPaths(key)}`, value)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (key === 'tilleggsinformasjonstype' && value === null) {\n\t\t\t\t\t\t\tformikBag.setFieldValue(`${inntektPath}.tilleggsinformasjon`, undefined)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tformikBag.setFieldValue(`${inntektPath}.${key}`, value)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tObject.entries(fields).forEach(entry => {\n\t\t\tconst name = entry[0]\n\t\t\tconst valueArray = entry[1]\n\t\t\tif (\n\t\t\t\tvalueArray.length === 1 &&\n\t\t\t\tvalueArray[0] === '<TOM>' &&\n\t\t\t\t_get(formikBag.values, `${inntektPath}.${name}`)\n\t\t\t) {\n\t\t\t\tformikBag.setFieldValue(`${inntektPath}.${name}`, undefined)\n\t\t\t}\n\t\t})\n\t})\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={inntektValues.inntektstype !== '' ? inntektValues : {}}\n\t\t\tonSubmit={(values, { resetForm }) => {\n\t\t\t\tif (currentInntektstype && values.inntektstype !== currentInntektstype) {\n\t\t\t\t\tresetForm({ values: { inntektstype: values.inntektstype } })\n\t\t\t\t\tvalues = { inntektstype: values.inntektstype }\n\t\t\t\t\tsetReset(true)\n\t\t\t\t} else {\n\t\t\t\t\tsetReset(false)\n\t\t\t\t}\n\t\t\t\tfor (const [key, value] of Object.entries(values)) {\n\t\t\t\t\tif (value === '') {\n\t\t\t\t\t\tvalues[key] = undefined\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tInntektstubService.validate(values).then(response => setFields(response))\n\t\t\t\tsetFormikBag(values)\n\t\t\t}}\n\t\t\tcomponent={({ handleSubmit }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Inntekt\n\t\t\t\t\t\t\tfields={fields}\n\t\t\t\t\t\t\tonValidate={handleSubmit}\n\t\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\t\tpath={inntektPath}\n\t\t\t\t\t\t\tresetForm={reset}\n\t\t\t\t\t\t\ttilleggsinformasjonAttributter={tilleggsinformasjonAttributter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}}\n\t\t/>\n\t)\n}\n\nexport default InntektStub\n","import React, { SyntheticEvent } from 'react'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport InntektStub from '~/components/inntektStub/validerInntekt'\nimport { useBoolean } from 'react-use'\nimport { ToggleGruppe, ToggleKnapp } from '~/components/ui/toggle/Toggle'\nimport { FormikProps } from 'formik'\nimport _get from 'lodash/get'\n\nconst initialValues = {\n\tbeloep: '',\n\tstartOpptjeningsperiode: '',\n\tsluttOpptjeningsperiode: '',\n\tinntektstype: ''\n}\n\nconst simpleInitialValues = {\n\tbeloep: '',\n\tstartOpptjeningsperiode: '',\n\tsluttOpptjeningsperiode: '',\n\tinntektstype: 'LOENNSINNTEKT',\n\tinngaarIGrunnlagForTrekk: true,\n\tutloeserArbeidsgiveravgift: true,\n\tfordel: 'kontantytelse',\n\tbeskrivelse: 'fastloenn'\n}\n\ntype inntekt = {\n\tbeloep: string\n\tstartOpptjeningsperiode: string\n\tsluttOpptjeningsperiode: string\n\tinntektstype: string\n\tinngaarIGrunnlagForTrekk: boolean\n\tutloeserArbeidsgiveravgift: boolean\n\tfordel: string\n\tbeskrivelse: string\n}\n\ntype data = {\n\tformikBag: FormikProps<{}>\n\tinntektsinformasjonPath: string\n}\n\nconst simpleValues = {\n\tinntektstype: 'LOENNSINNTEKT',\n\tinngaarIGrunnlagForTrekk: true,\n\tutloeserArbeidsgiveravgift: true,\n\tfordel: 'kontantytelse',\n\tbeskrivelse: 'fastloenn'\n}\n\nexport const InntektForm = ({ formikBag, inntektsinformasjonPath }: data) => {\n\tconst [formSimple, setFormSimple] = useBoolean(false)\n\n\tconst changeFormType = (event: SyntheticEvent<EventTarget, Event>) => {\n\t\t// @ts-ignore\n\t\tconst eventValueSimple = event.target?.value.includes('forenklet')\n\t\tsetFormSimple(eventValueSimple)\n\n\t\tconst restValues = eventValueSimple && { ...simpleValues }\n\n\t\tconst inntektsListe = _get(formikBag.values, `${inntektsinformasjonPath}.inntektsliste`)\n\t\tconst newInntektArray =\n\t\t\tinntektsListe &&\n\t\t\tinntektsListe.map((inntekt: inntekt) => ({\n\t\t\t\tbeloep: inntekt.beloep,\n\t\t\t\tstartOpptjeningsperiode: inntekt.startOpptjeningsperiode,\n\t\t\t\tsluttOpptjeningsperiode: inntekt.sluttOpptjeningsperiode,\n\t\t\t\t...restValues\n\t\t\t}))\n\n\t\tnewInntektArray &&\n\t\t\tformikBag.setFieldValue(`${inntektsinformasjonPath}.inntektsliste`, newInntektArray)\n\t}\n\treturn (\n\t\t<>\n\t\t\t<div className=\"toggle--wrapper\">\n\t\t\t\t<ToggleGruppe onChange={changeFormType} name=\"toggler\">\n\t\t\t\t\t<ToggleKnapp value=\"standard\" checked={!formSimple}>\n\t\t\t\t\t\tStandard\n\t\t\t\t\t</ToggleKnapp>\n\t\t\t\t\t<ToggleKnapp value=\"forenklet\" checked={formSimple}>\n\t\t\t\t\t\tForenklet\n\t\t\t\t\t</ToggleKnapp>\n\t\t\t\t</ToggleGruppe>\n\t\t\t</div>\n\t\t\t<FormikDollyFieldArray\n\t\t\t\tname={`${inntektsinformasjonPath}.inntektsliste`}\n\t\t\t\theader=\"Inntekt\"\n\t\t\t\tnewEntry={formSimple ? simpleInitialValues : initialValues}\n\t\t\t\ttag={null}\n\t\t\t>\n\t\t\t\t{(path: string) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FormikTextInput name={`${path}.beloep`} label=\"Beløp\" type=\"number\" />\n\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\tname={`${path}.startOpptjeningsperiode`}\n\t\t\t\t\t\t\tlabel=\"Start opptjeningsperiode\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\tname={`${path}.sluttOpptjeningsperiode`}\n\t\t\t\t\t\t\tlabel=\"Slutt opptjeningsperiode\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{!formSimple && <InntektStub formikBag={formikBag} inntektPath={path} />}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</FormikDollyFieldArray>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { InntektstubKodeverk } from '~/config/kodeverk'\n\nconst initialValues = {\n\tbeloep: '',\n\tbeskrivelse: ''\n}\n\nexport const FradragForm = ({ formikBag, inntektsinformasjonPath }) => {\n\treturn (\n\t\t<FormikDollyFieldArray\n\t\t\tname={`${inntektsinformasjonPath}.fradragsliste`}\n\t\t\theader=\"Fradrag\"\n\t\t\tnewEntry={initialValues}\n\t\t>\n\t\t\t{path => (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<FormikTextInput name={`${path}.beloep`} label=\"Beløp\" type=\"number\" />\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.beskrivelse`}\n\t\t\t\t\t\tlabel=\"Beskrivelse\"\n\t\t\t\t\t\tkodeverk={InntektstubKodeverk.Fradragbeskrivelse}\n\t\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n","import React from 'react'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { InntektstubKodeverk } from '~/config/kodeverk'\n\nconst initialValues = {\n\tbeloep: '',\n\tbeskrivelse: null\n}\n\nexport const ForskuddstrekkForm = ({ formikBag, inntektsinformasjonPath }) => {\n\treturn (\n\t\t<FormikDollyFieldArray\n\t\t\tname={`${inntektsinformasjonPath}.forskuddstrekksliste`}\n\t\t\theader=\"Forskuddstrekk\"\n\t\t\tnewEntry={initialValues}\n\t\t>\n\t\t\t{path => (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<FormikTextInput name={`${path}.beloep`} label=\"Beløp\" type=\"number\" />\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.beskrivelse`}\n\t\t\t\t\t\tlabel=\"Beskrivelse\"\n\t\t\t\t\t\tkodeverk={InntektstubKodeverk.Forskuddstrekkbeskrivelse}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { DollySelect, FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { SelectOptionsOppslag } from '~/service/SelectOptionsOppslag'\nimport { ArbeidKodeverk } from '~/config/kodeverk'\n\nconst initialValues = {\n\tarbeidsforholdstype: '',\n\tstartdato: undefined,\n\tsluttdato: undefined,\n\tantallTimerPerUkeSomEnFullStillingTilsvarer: '',\n\tavloenningstype: undefined,\n\tyrke: undefined,\n\tarbeidstidsordning: undefined,\n\tstillingsprosent: '',\n\tsisteLoennsendringsdato: undefined,\n\tsisteDatoForStillingsprosentendring: undefined\n}\n\nexport const ArbeidsforholdForm = ({ formikBag, inntektsinformasjonPath }) => {\n\tconst arbeidsforholdstyper = SelectOptionsOppslag.hentArbeidsforholdstyperInntektstub()\n\tconst arbeidsforholdstyperFormatted = SelectOptionsOppslag.formatOptions(\n\t\t'arbeidsforholdstyper',\n\t\tarbeidsforholdstyper\n\t)\n\n\treturn (\n\t\t<FormikDollyFieldArray\n\t\t\tname={`${inntektsinformasjonPath}.arbeidsforholdsliste`}\n\t\t\theader=\"Arbeidsforhold\"\n\t\t\tnewEntry={initialValues}\n\t\t>\n\t\t\t{path => (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<DollySelect\n\t\t\t\t\t\tname={`${path}.arbeidsforholdstype`}\n\t\t\t\t\t\tlabel=\"Arbeidsforholdstype\"\n\t\t\t\t\t\toptions={arbeidsforholdstyperFormatted}\n\t\t\t\t\t\tisLoading={arbeidsforholdstyper.loading}\n\t\t\t\t\t\tonChange={forhold =>\n\t\t\t\t\t\t\tformikBag.setFieldValue(`${path}.arbeidsforholdstype`, forhold.value)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={_get(formikBag.values, `${path}.arbeidsforholdstype`)}\n\t\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormikDatepicker name={`${path}.startdato`} label=\"Startdato\" />\n\t\t\t\t\t<FormikDatepicker name={`${path}.sluttdato`} label=\"Sluttdato\" />\n\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\tname={`${path}.antallTimerPerUkeSomEnFullStillingTilsvarer`}\n\t\t\t\t\t\tlabel=\"Timer per uke (full stilling)\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\tname={`${path}.stillingsprosent`}\n\t\t\t\t\t\tlabel=\"Stillingsprosent\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.avloenningstype`}\n\t\t\t\t\t\tlabel=\"Avlønningstype\"\n\t\t\t\t\t\tkodeverk={ArbeidKodeverk.Avloenningstyper}\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.yrke`}\n\t\t\t\t\t\tlabel=\"Yrke\"\n\t\t\t\t\t\tkodeverk={ArbeidKodeverk.Yrker}\n\t\t\t\t\t\tsize=\"xxxlarge\"\n\t\t\t\t\t\toptionHeight={50}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.arbeidstidsordning`}\n\t\t\t\t\t\tlabel=\"Arbeidstidsordning\"\n\t\t\t\t\t\tkodeverk={ArbeidKodeverk.Arbeidstidsordninger}\n\t\t\t\t\t\tsize=\"xxlarge\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`${path}.sisteLoennsendringsdato`}\n\t\t\t\t\t\tlabel=\"Siste lønnsendringsdato\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`${path}.sisteDatoForStillingsprosentendring`}\n\t\t\t\t\t\tlabel=\"Stillingsprosentendring\"\n\t\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n","import React from 'react'\nimport { FormikProps } from 'formik'\nimport { InntektForm } from './inntektForm'\nimport { FradragForm } from './fradragForm'\nimport { ForskuddstrekkForm } from './forskuddstrekkForm'\nimport { ArbeidsforholdForm } from './arbeidsforholdForm'\n\ninterface InntektsinformasjonLister {\n\tpath: string\n\tformikBag: FormikProps<{}>\n}\n\nexport default ({ path, formikBag }: InntektsinformasjonLister) => {\n\treturn (\n\t\t<>\n\t\t\t<InntektForm formikBag={formikBag} inntektsinformasjonPath={path} />\n\t\t\t<FradragForm formikBag={formikBag} inntektsinformasjonPath={path} />\n\t\t\t<ForskuddstrekkForm formikBag={formikBag} inntektsinformasjonPath={path} />\n\t\t\t<ArbeidsforholdForm formikBag={formikBag} inntektsinformasjonPath={path} />\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { FormikProps, FieldArray } from 'formik'\nimport {\n\tDollyFaBlokk,\n\tDollyFieldArrayWrapper,\n\tFieldArrayAddButton\n} from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { Inntekt, Fradrag, Forskudd, Arbeidsforhold } from './inntektstubTypes'\nimport InntektsinformasjonLister from './inntektsinformasjonLister/inntektsinformasjonLister'\nimport { ErrorBoundary } from '~/components/ui/appError/ErrorBoundary'\n\ninterface InntektendringForm {\n\tformikBag: FormikProps<{}>\n\tpath: string\n}\n\ntype Inntektslister = {\n\tinntektsliste: Array<Inntekt>\n\tfradragsliste: Array<Fradrag>\n\tforskuddstrekksliste: Array<Forskudd>\n\tarbeidsforholdsliste: Array<Arbeidsforhold>\n}\n\nconst hjelpetekst = `Den øverste inntektinformasjonen er den gjeldende inntekten. All inntektsinformasjon merket med \"Versjon #\" er historiske endringer der økende versjonsnummer er nyere.`\n\nexport default ({ formikBag, path }: InntektendringForm) => {\n\tconst kopiAvGjeldendeInntekt = _get(formikBag.values, path)\n\tconst initialValues: Inntektslister = {\n\t\tarbeidsforholdsliste: kopiAvGjeldendeInntekt.arbeidsforholdsliste,\n\t\tforskuddstrekksliste: kopiAvGjeldendeInntekt.forskuddstrekksliste,\n\t\tfradragsliste: kopiAvGjeldendeInntekt.fradragsliste,\n\t\tinntektsliste: kopiAvGjeldendeInntekt.inntektsliste\n\t}\n\tconst historikkPath = `${path}.historikk`\n\tconst data = _get(formikBag.values, historikkPath, [])\n\n\treturn (\n\t\t<FieldArray name={historikkPath}>\n\t\t\t{arrayHelpers => {\n\t\t\t\tconst addNewEntry = () => arrayHelpers.push(initialValues)\n\t\t\t\treturn (\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<DollyFieldArrayWrapper>\n\t\t\t\t\t\t\t{data.map((c: Inntektslister, idx: number) => {\n\t\t\t\t\t\t\t\tconst listePath = `${historikkPath}[${idx}]`\n\t\t\t\t\t\t\t\tconst clickRemove = () => arrayHelpers.remove(idx)\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<DollyFaBlokk\n\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\t\t\t\thjelpetekst={hjelpetekst}\n\t\t\t\t\t\t\t\t\t\theader={`Inntektsendring (versjon ${idx + 1})`}\n\t\t\t\t\t\t\t\t\t\thandleRemove={clickRemove}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<InntektsinformasjonLister formikBag={formikBag} path={listePath} />\n\t\t\t\t\t\t\t\t\t</DollyFaBlokk>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t<FieldArrayAddButton\n\t\t\t\t\t\t\t\taddEntryButtonText=\"Inntektsendring (historikk)\"\n\t\t\t\t\t\t\t\tonClick={addNewEntry}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</DollyFieldArrayWrapper>\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t)\n\t\t\t}}\n\t\t</FieldArray>\n\t)\n}\n","import React from 'react'\nimport ReactDatepicker from 'react-datepicker'\nimport _get from 'lodash/get'\nimport { FormikProps } from 'formik'\nimport { InputWrapper } from '~/components/ui/form/inputWrapper/InputWrapper'\nimport { Label } from '~/components/ui/form/inputs/label/Label'\nimport { TextInput } from '~/components/ui/form/inputs/textInput/TextInput'\n\ninterface Monthpicker {\n\tformikBag: FormikProps<any>\n\tname: string\n\tlabel: string\n\tdate: Date\n\thandleDateChange: (dato: string, type: string) => void\n}\n\nexport const Monthpicker = ({ formikBag, name, label, date, handleDateChange }: Monthpicker) => {\n\tconst getFeilmelding = (formikProps: FormikProps<any>, formikPath: string) => {\n\t\tconst feilmelding = _get(formikProps.errors, formikPath)\n\t\treturn feilmelding ? { feilmelding: feilmelding } : null\n\t}\n\n\treturn (\n\t\t<InputWrapper size={'medium'}>\n\t\t\t<Label name={name} label={label} feil={getFeilmelding(formikBag, name)} containerClass={null}>\n\t\t\t\t<ReactDatepicker\n\t\t\t\t\tclassName={'skjemaelement__input'}\n\t\t\t\t\tlocale=\"nb\"\n\t\t\t\t\tdateFormat=\"yyyy-MM\"\n\t\t\t\t\tselected={date}\n\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\tplaceholderText={'yyyy-MM'}\n\t\t\t\t\tshowMonthYearPicker\n\t\t\t\t\tcustomInput={<TextInput icon=\"calendar\" feil={getFeilmelding(formikBag, name)} />}\n\t\t\t\t\tdropdownMode=\"select\"\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t</Label>\n\t\t</InputWrapper>\n\t)\n}\n","import React, { useState } from 'react'\nimport { FormikProps } from 'formik'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { InntektstubVirksomhetToggle } from './inntektstubVirksomhetToggle'\nimport InntektsinformasjonLister from './inntektsinformasjonLister/inntektsinformasjonLister'\nimport InntektsendringForm from './inntektsendringForm'\nimport _get from 'lodash/get'\nimport { Monthpicker } from '~/components/ui/form/inputs/monthpicker/Monthpicker'\n\ninterface InntektsinformasjonForm {\n\tpath: string\n\tformikBag: FormikProps<{}>\n}\n\nexport default ({ path, formikBag }: InntektsinformasjonForm) => {\n\tconst [date, setDate] = useState(\n\t\t_get(formikBag.values, `${path}.sisteAarMaaned`) != ''\n\t\t\t? Date.parse(_get(formikBag.values, `${path}.sisteAarMaaned`))\n\t\t\t: null\n\t)\n\n\tconst handleDateChange = (selectedDate: Date) => {\n\t\tsetDate(selectedDate)\n\t\tformikBag.setFieldValue(\n\t\t\t`${path}.sisteAarMaaned`,\n\t\t\tselectedDate ? selectedDate.toISOString().substr(0, 7) : undefined\n\t\t)\n\t}\n\n\treturn (\n\t\t<div key={path}>\n\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t<Monthpicker\n\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\tname={`${path}.sisteAarMaaned`}\n\t\t\t\t\tlabel=\"År/måned\"\n\t\t\t\t\tdate={date}\n\t\t\t\t\thandleDateChange={handleDateChange}\n\t\t\t\t/>\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tname={`${path}.antallMaaneder`}\n\t\t\t\t\tlabel=\"Generer antall måneder\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<InntektstubVirksomhetToggle formikBag={formikBag} path={path} />\n\t\t\t<InntektsinformasjonLister formikBag={formikBag} path={path} />\n\t\t\t<InntektsendringForm formikBag={formikBag} path={path} />\n\t\t</div>\n\t)\n}\n","export enum Kodeverk {\n\tAarsakTilInnsending = 'AARSAK_TIL_INNSENDING_TYPE',\n\tAarsakTilUtsettelse = 'AARSAK_TIL_UTSETTELSE_TYPE',\n\tAarsakVedEndring = 'AARSAK_VED_ENDRING_TYPE',\n\tBegrunnelse = 'BEGRUNNELSE_TYPE',\n\tNaturalYtelse = 'NATURALYTELSE_TYPE',\n\tYtelse = 'YTELSE_TYPE'\n}\n\nexport enum Ytelser {\n\tSykepenger = 'SYKEPENGER',\n\tForeldrepenger = 'FORELDREPENGER',\n\tSvangerskapspenger = 'SVANGERSKAPSPENGER',\n\tPleiepenger = 'PLEIEPENGER',\n\tPleiepengerBarn = 'PLEIEPENGER_BARN',\n\tPleiepengerNaerstaaende = 'PLEIEPENGER_NAERSTAAENDE',\n\tOmsorgspenger = 'OMSORGSPENGER',\n\tOpplaeringspenger = 'OPPLAERINGSPENGER'\n}\n\nexport enum Tema {\n\tSyk = 'SYK',\n\tOms = 'OMS',\n\tFor = 'FOR'\n}\n\nexport type Inntektsmelding = {\n\tjoarkMetadata: { tema: string }\n\tinntekter: Array<Inntekt>\n\tid?: number\n}\n\nexport type Inntekt = {\n\taarsakTilInnsending: string\n\tnaerRelasjon: boolean\n\tstartdatoForeldrepengeperiode: string\n\tytelse: string //enum?\n\tarbeidsforhold: Arbeidsforhold\n\tarbeidsgiver?: Arbeidsgiver\n\tarbeidsgiverPrivat?: ArbeidsgiverPrivat\n\tavsendersystem?: Avsendersystem\n\tgjenopptakelseNaturalytelseListe?: Array<Naturalytelse>\n\topphoerAvNaturalytelseListe?: Array<Naturalytelse>\n\tomsorgspenger?: Omsorgspenger\n\tpleiepengerPerioder?: Array<Pleiepenger>\n\trefusjon?: Refusjon\n\tsykepengerIArbeidsgiverperioden?: Sykepenger\n}\n\nexport type Arbeidsforhold = {\n\tarbeidsforholdId: string\n\tberegnetInntekt: BeregnetInntekt\n\tavtaltFerieListe?: Array<AvtaltFerie>\n\tfoersteFravaersdag?: string\n}\n\nexport type BeregnetInntekt = {\n\tbeloep: number\n\taarsakVedEndring: string //enum?\n}\n\nexport type AvtaltFerie = {\n\tfom: string\n\ttom: string\n}\n\nexport type Arbeidsgiver = {\n\tkontaktinformasjon: { kontaktinformasjonNavn: string; telefonnummer: string }\n\tvirksomhetsnummer: string\n\torgnummer?: string\n}\n\nexport type ArbeidsgiverPrivat = {\n\tarbeidsgiverFnr: string\n\tkontaktinformasjon: { kontaktinformasjonNavn: string; telefonnummer: string }\n}\n\nexport type Avsendersystem = {\n\tinnsendingstidspunkt: string\n\tsystemnavn: string\n\tsystemversjon: string\n}\nexport type Naturalytelse = { beloepPrMnd?: number; fom?: string; naturalytelseType?: string } //enum\nexport type Omsorgspenger = {\n\tdelvisFravaersListe?: Array<DelvisFravaer>\n\tfravaersPerioder?: Array<Fravaer>\n\tharUtbetaltPliktigeDager?: boolean\n}\n\nexport type DelvisFravaer = {\n\tdato?: string\n\ttimer?: number\n}\n\nexport type Fravaer = {\n\tfom?: string\n\ttom?: string\n}\nexport type Pleiepenger = { fom: string; tom: string }\n\nexport type Refusjon = {\n\trefusjonsbeloepPrMnd?: number\n\trefusjonsopphoersdato?: string\n\tendringIRefusjonListe?: Array<EndringIRefusjon>\n}\nexport type EndringIRefusjon = {\n\trefusjonsbeloepPrMnd?: number\n\tendringsdato?: string\n}\nexport type Sykepenger = {\n\tarbeidsgiverperiodeListe?: Array<Periode>\n\tbegrunnelseForReduksjonEllerIkkeUtbetalt?: string //enum\n\tbruttoUtbetalt?: number\n}\n\nexport type Periode = {\n\tfom?: string\n\ttom?: string\n}\n\nexport type EnkelInntektsmelding = {\n\tbestilling: BestillingData\n\tdata: Journalpost[]\n}\n\nexport type Dokument = {\n\tjournalpostId: number\n\tdokumentInfoId: number\n\tdokument: string\n}\n\nexport type TransaksjonId = {\n\tmiljoe: string\n\ttransaksjonId: {\n\t\tjournalpostId: number\n\t\tdokumentInfoId: number\n\t}\n\tbestillingId: string\n}\n\nexport type Journalpost = {\n\tbestillingId?: number\n\tmiljoe?: string\n\tdokumenter: Dokument[]\n}\n\nexport type BestillingData = {\n\tdata: {\n\t\tinntektsmelding?: {\n\t\t\tinntekter: Array<Inntekt>\n\t\t}\n\t}\n\terGjenopprettet: boolean\n\tid: number\n}\n\nexport type Bestilling = {\n\tinntektsmelding?: Array<Inntektsmelding>\n}\n","import React from 'react'\nimport { FormikProps } from 'formik'\nimport _get from 'lodash/get'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport Panel from '~/components/ui/panel/Panel'\nimport { panelError, erForste } from '~/components/ui/form/formUtils'\nimport { validation } from './validation'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport InntektsinformasjonForm from './partials/inntektsinformasjonForm'\nimport { Inntektsinformasjon } from './partials/inntektstubTypes'\n\ninterface InntektstubForm {\n\tformikBag: FormikProps<{}>\n}\n\nexport const initialValues: Inntektsinformasjon = {\n\tsisteAarMaaned: '',\n\tantallMaaneder: '',\n\tvirksomhet: '',\n\topplysningspliktig: '',\n\tversjon: null,\n\tinntektsliste: [\n\t\t{\n\t\t\tbeloep: '',\n\t\t\tstartOpptjeningsperiode: undefined,\n\t\t\tsluttOpptjeningsperiode: undefined,\n\t\t\tinntektstype: ''\n\t\t}\n\t],\n\tfradragsliste: [],\n\tforskuddstrekksliste: [],\n\tarbeidsforholdsliste: []\n}\n\nconst inntektstubAttributt = 'inntektstub'\nconst inntektstubPath = 'inntektstub.inntektsinformasjon'\n\nconst infotekst =\n\t'For å generere samme inntektsinformasjon for flere måneder - fyll inn siste måned/år, samt antall måneder bakover inntektsinformasjonen skal genereres for.'\n\nexport const InntektstubForm = ({ formikBag }: InntektstubForm) => (\n\t//@ts-ignore\n\t<Vis attributt={inntektstubAttributt}>\n\t\t<Panel\n\t\t\theading=\"A-ordningen (Inntektskomponenten)\"\n\t\t\thasErrors={panelError(formikBag, inntektstubAttributt)}\n\t\t\ticonType=\"inntektstub\"\n\t\t\t//@ts-ignore\n\t\t\tstartOpen={() => erForste(formikBag.values, [inntektstubAttributt])}\n\t\t>\n\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t<FormikDollyFieldArray\n\t\t\t\t\ttag={undefined}\n\t\t\t\t\tname={inntektstubPath}\n\t\t\t\t\theader=\"Inntektsinformasjon\"\n\t\t\t\t\tnewEntry={initialValues}\n\t\t\t\t\thjelpetekst={infotekst}\n\t\t\t\t\tcanBeEmpty={false}\n\t\t\t\t>\n\t\t\t\t\t{(path: string) => <InntektsinformasjonForm path={path} formikBag={formikBag} />}\n\t\t\t\t</FormikDollyFieldArray>\n\t\t\t</div>\n\t\t</Panel>\n\t</Vis>\n)\n\nInntektstubForm.validation = validation\n","import React from 'react'\nimport LoadableComponent, { Feilmelding } from '~/components/ui/loading/LoadableComponent'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { SelectOptionsOppslag } from '~/service/SelectOptionsOppslag'\nimport Formatters from '~/utils/DataFormatter'\nimport { ErrorBoundary } from '~/components/ui/appError/ErrorBoundary'\n\ninterface InntektsmeldingSelect {\n\tpath: string\n\tlabel: string\n\tkodeverk: string\n\tsize?: string\n}\n\ntype Option = {\n\tlabel: string\n\tvalue: string\n\ttema?: string\n}\n\nexport default ({ path, label, kodeverk, size = 'medium' }: InntektsmeldingSelect) => {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<LoadableComponent\n\t\t\t\tonFetch={() =>\n\t\t\t\t\tSelectOptionsOppslag.hentInntektsmeldingOptions(kodeverk).then(response =>\n\t\t\t\t\t\tresponse.map((value: string) => ({ value, label: Formatters.codeToNorskLabel(value) }))\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\trender={(data: Array<Option>, feilmelding: Feilmelding) => (\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={path}\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\toptions={data}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\tfeil={feilmelding}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</ErrorBoundary>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport _has from 'lodash/has'\nimport LoadableComponent, { Feilmelding } from '~/components/ui/loading/LoadableComponent'\nimport { DollySelect } from '~/components/ui/form/inputs/select/Select'\nimport { SelectOptionsOppslag } from '~/service/SelectOptionsOppslag'\nimport Formatters from '~/utils/DataFormatter'\nimport { FormikProps } from 'formik'\nimport { Tema, Ytelser } from '~/components/fagsystem/inntektsmelding/InntektsmeldingTypes'\nimport { ErrorBoundary } from '~/components/ui/appError/ErrorBoundary'\n\ninterface InntektsmeldingSelect {\n\tpath: string\n\tidx: number\n\tlabel: string\n\tformikBag: FormikProps<{}>\n\tkodeverk: string\n\tsize?: string\n}\n\ntype Option = {\n\tlabel: string\n\tvalue: string\n\ttema?: string\n}\n\nexport default ({\n\tpath,\n\tidx,\n\tlabel,\n\tkodeverk,\n\tformikBag,\n\tsize = 'medium'\n}: InntektsmeldingSelect) => {\n\tconst ytelsePath = `${path}.ytelse`\n\n\tconst feil = (feilmelding: Feilmelding) => {\n\t\tif (_has(formikBag.touched, ytelsePath) && _get(formikBag.values, ytelsePath) === '')\n\t\t\treturn { feilmelding: 'Feltet er påkrevd' }\n\t\telse return feilmelding\n\t}\n\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<LoadableComponent\n\t\t\t\tonFetch={() =>\n\t\t\t\t\tSelectOptionsOppslag.hentInntektsmeldingOptions(kodeverk).then(response =>\n\t\t\t\t\t\tresponse.map((value: string) => ({\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tlabel: Formatters.codeToNorskLabel(value),\n\t\t\t\t\t\t\ttema: findTema(value)\n\t\t\t\t\t\t}))\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\trender={(data: Array<Option>, feilmelding: Feilmelding) => (\n\t\t\t\t\t<DollySelect\n\t\t\t\t\t\tname={ytelsePath}\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\toptions={data}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\tvalue={_get(formikBag.values, ytelsePath)}\n\t\t\t\t\t\tonChange={(e: Option) => setYtelseOgTema(e, formikBag, path, idx)}\n\t\t\t\t\t\tfeil={feil(feilmelding)}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</ErrorBoundary>\n\t)\n}\n\nconst findTema = (ytelse: string) => {\n\tif (ytelse === Ytelser.Sykepenger) return Tema.Syk\n\telse if (ytelse === Ytelser.Foreldrepenger || ytelse === Ytelser.Svangerskapspenger)\n\t\treturn Tema.For\n\telse return Tema.Oms\n}\n\nconst setYtelseOgTema = (value: Option, formikBag: FormikProps<{}>, path: string, idx: number) => {\n\tformikBag.setFieldValue('inntektsmelding.joarkMetadata.tema', value.tema)\n\n\tconst {\n\t\tsykepengerIArbeidsgiverperioden,\n\t\tstartdatoForeldrepengeperiode,\n\t\tpleiepengerPerioder,\n\t\tomsorgspenger,\n\t\t...rest\n\t} = _get(formikBag.values, path)\n\n\tif (value.value === Ytelser.Omsorgspenger) {\n\t\tformikBag.setFieldValue(path, {\n\t\t\t...rest,\n\t\t\tytelse: value.value,\n\t\t\tomsorgspenger: { harUtbetaltPliktigeDager: false },\n\t\t\tsykepengerIArbeidsgiverperioden: { bruttoUtbetalt: '' }\n\t\t})\n\t} else if (value.value === Ytelser.Sykepenger) {\n\t\tformikBag.setFieldValue(path, {\n\t\t\t...rest,\n\t\t\tytelse: value.value,\n\t\t\tsykepengerIArbeidsgiverperioden: { bruttoUtbetalt: '' }\n\t\t})\n\t} else if (value.value === Ytelser.Foreldrepenger) {\n\t\tformikBag.setFieldValue(path, {\n\t\t\t...rest,\n\t\t\tytelse: value.value,\n\t\t\tstartdatoForeldrepengeperiode: ''\n\t\t})\n\t} else if (\n\t\tvalue.value === Ytelser.Pleiepenger ||\n\t\tvalue.value === Ytelser.PleiepengerBarn ||\n\t\tvalue.value === Ytelser.PleiepengerNaerstaaende\n\t) {\n\t\tformikBag.setFieldValue(path, {\n\t\t\t...rest,\n\t\t\tytelse: value.value,\n\t\t\tpleiepengerPerioder: [{ fom: '', tom: '' }]\n\t\t})\n\t} else {\n\t\t// Foreløpig ingen spesielle keys for opplærings- og svangerskapspenger\n\t\tformikBag.setFieldValue(`${path}.ytelse`, value.value)\n\t}\n}\n","import React, { useState } from 'react'\nimport * as Yup from 'yup'\nimport _get from 'lodash/get'\nimport _has from 'lodash/has'\nimport Panel from '~/components/ui/panel/Panel'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { erForste, panelError } from '~/components/ui/form/formUtils'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { DollySelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { FormikCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport {\n\tifPresent,\n\tmessages,\n\trequiredDate,\n\trequiredNumber,\n\trequiredString\n} from '~/utils/YupValidations'\nimport { FormikProps } from 'formik'\nimport { Inntekt, Kodeverk, Ytelser } from '../InntektsmeldingTypes'\nimport InntektsmeldingSelect from './partials/InntektsmeldingSelect'\nimport InntektsmeldingYtelseSelect from './partials/InntektsmeldingYtelseSelect'\nimport OmsorgspengerForm from './partials/omsorgspengerForm'\nimport SykepengerForm from './partials/sykepengerForm'\nimport PleiepengerForm from './partials/pleiepengerForm'\nimport RefusjonForm from './partials/refusjonForm'\nimport ArbeidsforholdForm from './partials/arbeidsforholdForm'\nimport NaturalytelseForm from './partials/naturalytelseForm'\nimport { OrganisasjonMedArbeidsforholdSelect } from '~/components/organisasjonSelect'\nimport { AlertAaregRequired } from '~/components/ui/brukerAlert/AlertAaregRequired'\nimport { InputWarning } from '~/components/ui/form/inputWarning/inputWarning'\n\ninterface InntektsmeldingForm {\n\tformikBag: FormikProps<{}>\n}\n\nenum TypeArbeidsgiver {\n\tVIRKSOMHET = 'VIRKSOMHET',\n\tPRIVATPERSON = 'PRIVATPERSON'\n}\n\nexport const initialValues = (type: string) => ({\n\taarsakTilInnsending: '',\n\tarbeidsgiver:\n\t\ttype === TypeArbeidsgiver.VIRKSOMHET\n\t\t\t? {\n\t\t\t\t\tvirksomhetsnummer: ''\n\t\t\t  }\n\t\t\t: undefined,\n\tarbeidsgiverPrivat:\n\t\ttype === TypeArbeidsgiver.PRIVATPERSON\n\t\t\t? {\n\t\t\t\t\tarbeidsgiverFnr: ''\n\t\t\t  }\n\t\t\t: undefined,\n\tarbeidsforhold: {\n\t\tarbeidsforholdId: '',\n\t\tberegnetInntekt: {\n\t\t\tbeloep: ''\n\t\t},\n\t\tfoersteFravaersdag: ''\n\t},\n\tavsendersystem: {\n\t\tinnsendingstidspunkt: new Date()\n\t},\n\trefusjon: {\n\t\trefusjonsbeloepPrMnd: '',\n\t\trefusjonsopphoersdato: ''\n\t},\n\tnaerRelasjon: false,\n\tytelse: ''\n})\n\nconst inntektsmeldingAttributt = 'inntektsmelding'\nconst informasjonstekst = 'Personen må ha et arbeidsforhold knyttet til den valgte virksomheten.'\n\nexport const InntektsmeldingForm = ({ formikBag }: InntektsmeldingForm) => {\n\tconst [typeArbeidsgiver, setTypeArbeidsgiver] = useState(\n\t\t_get(formikBag.values, 'inntektsmelding.inntekter[0].arbeidsgiverPrivat')\n\t\t\t? TypeArbeidsgiver.PRIVATPERSON\n\t\t\t: TypeArbeidsgiver.VIRKSOMHET\n\t)\n\n\tconst handleArbeidsgiverChange = (type: string) => {\n\t\tsetTypeArbeidsgiver(type)\n\n\t\t_get(formikBag.values, 'inntektsmelding.inntekter').forEach((inntekt: Inntekt, idx: number) => {\n\t\t\tif (type === TypeArbeidsgiver.VIRKSOMHET) {\n\t\t\t\tformikBag.setFieldValue(\n\t\t\t\t\t`inntektsmelding.inntekter[${idx}].arbeidsgiver.virksomhetsnummer`,\n\t\t\t\t\t''\n\t\t\t\t)\n\t\t\t\tformikBag.setFieldValue(`inntektsmelding.inntekter[${idx}].arbeidsgiverPrivat`, undefined)\n\t\t\t} else if (type === TypeArbeidsgiver.PRIVATPERSON) {\n\t\t\t\tformikBag.setFieldValue(`inntektsmelding.inntekter[${idx}].arbeidsgiver`, undefined)\n\t\t\t\tformikBag.setFieldValue(\n\t\t\t\t\t`inntektsmelding.inntekter[${idx}].arbeidsgiverPrivat.arbeidsgiverFnr`,\n\t\t\t\t\t''\n\t\t\t\t)\n\t\t\t}\n\t\t})\n\t}\n\n\treturn (\n\t\t//@ts-ignore\n\t\t<Vis attributt={inntektsmeldingAttributt}>\n\t\t\t<Panel\n\t\t\t\theading=\"Inntektsmelding (fra Altinn)\"\n\t\t\t\thasErrors={panelError(formikBag, inntektsmeldingAttributt)}\n\t\t\t\ticonType=\"inntektsmelding\"\n\t\t\t\tinformasjonstekst={informasjonstekst}\n\t\t\t\t//@ts-ignore\n\t\t\t\tstartOpen={() => erForste(formikBag.values, [inntektsmeldingAttributt])}\n\t\t\t>\n\t\t\t\t{!_has(formikBag.values, 'aareg') && (\n\t\t\t\t\t<AlertAaregRequired meldingSkjema=\"Inntektsmeldingen\" />\n\t\t\t\t)}\n\n\t\t\t\t<DollySelect\n\t\t\t\t\tname=\"inntektsmelding.typeArbeidsgiver\"\n\t\t\t\t\tlabel=\"Type arbeidsgiver\"\n\t\t\t\t\toptions={[\n\t\t\t\t\t\t{ value: TypeArbeidsgiver.VIRKSOMHET, label: 'Virksomhet' },\n\t\t\t\t\t\t{ value: TypeArbeidsgiver.PRIVATPERSON, label: 'Privatperson' }\n\t\t\t\t\t]}\n\t\t\t\t\tonChange={type => handleArbeidsgiverChange(type.value)}\n\t\t\t\t\tvalue={typeArbeidsgiver}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\n\t\t\t\t<FormikDollyFieldArray\n\t\t\t\t\tname=\"inntektsmelding.inntekter\"\n\t\t\t\t\theader=\"Inntekt\"\n\t\t\t\t\tnewEntry={initialValues(typeArbeidsgiver)}\n\t\t\t\t\tcanBeEmpty={false}\n\t\t\t\t>\n\t\t\t\t\t{(path: string, idx: number) => {\n\t\t\t\t\t\tconst ytelse = _get(formikBag.values, `${path}.ytelse`)\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"flexbox--column\">\n\t\t\t\t\t\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t\t\t\t\t\t<InntektsmeldingSelect\n\t\t\t\t\t\t\t\t\t\tpath={`${path}.aarsakTilInnsending`}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Årsak til innsending\"\n\t\t\t\t\t\t\t\t\t\tkodeverk={Kodeverk.AarsakTilInnsending}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<InntektsmeldingYtelseSelect\n\t\t\t\t\t\t\t\t\t\tpath={path}\n\t\t\t\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Ytelse\"\n\t\t\t\t\t\t\t\t\t\tkodeverk={Kodeverk.Ytelse}\n\t\t\t\t\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{typeArbeidsgiver === TypeArbeidsgiver.PRIVATPERSON && (\n\t\t\t\t\t\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\t\t\t\t\t\tname={`${path}.arbeidsgiverPrivat.arbeidsgiverFnr`}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Arbeidsgiver (fnr/dnr/bost)\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\t\t\t\tname={`${path}.avsendersystem.innsendingstidspunkt`}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Innsendingstidspunkt\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{typeArbeidsgiver === TypeArbeidsgiver.VIRKSOMHET && (\n\t\t\t\t\t\t\t\t\t\t<OrganisasjonMedArbeidsforholdSelect\n\t\t\t\t\t\t\t\t\t\t\tpath={`${path}.arbeidsgiver.virksomhetsnummer`}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Arbeidsgiver (orgnr)\"\n\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<FormikCheckbox\n\t\t\t\t\t\t\t\t\t\tname={`${path}.naerRelasjon`}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Nær relasjon\"\n\t\t\t\t\t\t\t\t\t\tcheckboxMargin\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<ArbeidsforholdForm path={`${path}.arbeidsforhold`} ytelse={ytelse} />\n\t\t\t\t\t\t\t\t<Kategori title=\"Refusjon\">\n\t\t\t\t\t\t\t\t\t<RefusjonForm path={`${path}.refusjon`} ytelse={ytelse} />\n\t\t\t\t\t\t\t\t</Kategori>\n\t\t\t\t\t\t\t\t<Kategori title=\"Naturalytelse\">\n\t\t\t\t\t\t\t\t\t<NaturalytelseForm path={`${path}`} />\n\t\t\t\t\t\t\t\t</Kategori>\n\t\t\t\t\t\t\t\t{ytelse === Ytelser.Foreldrepenger && (\n\t\t\t\t\t\t\t\t\t<Kategori title=\"Foreldrepenger\">\n\t\t\t\t\t\t\t\t\t\t<InputWarning\n\t\t\t\t\t\t\t\t\t\t\tvisWarning={!_get(formikBag.values, `${path}.startdatoForeldrepengeperiode`)}\n\t\t\t\t\t\t\t\t\t\t\twarningText=\"For automatisk behandling av inntektsmelding må dette feltet fylles ut\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\t\t\t\t\t\tname={`${path}.startdatoForeldrepengeperiode`}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Startdato for periode\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</InputWarning>\n\t\t\t\t\t\t\t\t\t</Kategori>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{(ytelse === Ytelser.Sykepenger || ytelse === Ytelser.Omsorgspenger) && (\n\t\t\t\t\t\t\t\t\t<Kategori title=\"Sykepenger\">\n\t\t\t\t\t\t\t\t\t\t<SykepengerForm path={`${path}.sykepengerIArbeidsgiverperioden`} />\n\t\t\t\t\t\t\t\t\t</Kategori>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{(ytelse === Ytelser.Pleiepenger ||\n\t\t\t\t\t\t\t\t\tytelse === Ytelser.PleiepengerBarn ||\n\t\t\t\t\t\t\t\t\tytelse === Ytelser.PleiepengerNaerstaaende) && (\n\t\t\t\t\t\t\t\t\t<PleiepengerForm path={`${path}.pleiepengerPerioder`} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{ytelse === Ytelser.Omsorgspenger && (\n\t\t\t\t\t\t\t\t\t<Kategori title=\"Omsorgspenger\">\n\t\t\t\t\t\t\t\t\t\t<OmsorgspengerForm path={`${path}.omsorgspenger`} />\n\t\t\t\t\t\t\t\t\t</Kategori>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</FormikDollyFieldArray>\n\t\t\t</Panel>\n\t\t</Vis>\n\t)\n}\n\nInntektsmeldingForm.validation = {\n\tinntektsmelding: Yup.object({\n\t\tinntekter: Yup.array().of(\n\t\t\tYup.object({\n\t\t\t\taarsakTilInnsending: requiredString,\n\t\t\t\tarbeidsgiver: Yup.object({\n\t\t\t\t\tvirksomhetsnummer: ifPresent(\n\t\t\t\t\t\t'$inntektsmelding.inntekter[0].arbeidsgiver.virksomhetsnummer',\n\t\t\t\t\t\trequiredString\n\t\t\t\t\t)\n\t\t\t\t}),\n\t\t\t\tarbeidsgiverPrivat: Yup.object({\n\t\t\t\t\tarbeidsgiverFnr: ifPresent(\n\t\t\t\t\t\t'$inntektsmelding.inntekter[0].arbeidsgiverPrivat.arbeidsgiverFnr',\n\t\t\t\t\t\trequiredString\n\t\t\t\t\t)\n\t\t\t\t}),\n\t\t\t\tarbeidsforhold: Yup.object({\n\t\t\t\t\tberegnetInntekt: Yup.object({\n\t\t\t\t\t\tbeloep: requiredNumber.typeError(messages.required)\n\t\t\t\t\t})\n\t\t\t\t}),\n\t\t\t\tavsendersystem: Yup.object({\n\t\t\t\t\tinnsendingstidspunkt: requiredDate\n\t\t\t\t}),\n\t\t\t\tytelse: requiredString\n\t\t\t})\n\t\t)\n\t})\n}\n","import * as React from 'react'\nimport { get as _get } from 'lodash'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { FormikCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\n\ninterface OmsorgspengerForm {\n\tpath: string\n}\n\nconst initialDelvisFravaer = {\n\tdato: '',\n\ttimer: ''\n}\n\nconst initialFravaersperioder = {\n\tfom: '',\n\ttom: ''\n}\n\nexport default ({ path }: OmsorgspengerForm) => {\n\treturn (\n\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t<FormikDollyFieldArray\n\t\t\t\tname={`${path}.delvisFravaersListe`}\n\t\t\t\theader=\"Delvis fravær\"\n\t\t\t\tnewEntry={initialDelvisFravaer}\n\t\t\t>\n\t\t\t\t{(path: string) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FormikDatepicker name={`${path}.dato`} label=\"Dato\" />\n\t\t\t\t\t\t<FormikTextInput name={`${path}.timer`} label=\"Antall timer\" type=\"number\" />\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</FormikDollyFieldArray>\n\t\t\t<FormikDollyFieldArray\n\t\t\t\tname={`${path}.fravaersPerioder`}\n\t\t\t\theader=\"Fraværsperioder\"\n\t\t\t\tnewEntry={initialFravaersperioder}\n\t\t\t>\n\t\t\t\t{(path: string) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FormikDatepicker name={`${path}.fom`} label=\"Fra og med dato\" />\n\t\t\t\t\t\t<FormikDatepicker name={`${path}.tom`} label=\"Til og med dato\" />\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</FormikDollyFieldArray>\n\t\t\t<FormikCheckbox\n\t\t\t\tname={`${path}.harUtbetaltPliktigeDager`}\n\t\t\t\tlabel=\"Har utbetalt pliktige dager\"\n\t\t\t\tcheckboxMargin\n\t\t\t\tsize=\"medium\"\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","import * as React from 'react'\nimport InntektsmeldingSelect from './InntektsmeldingSelect'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { Kodeverk } from '~/components/fagsystem/inntektsmelding/InntektsmeldingTypes'\n\ninterface SykepengerForm {\n\tpath: string\n}\n\nconst initialArbeidsperiode = {\n\tfom: '',\n\ttom: ''\n}\n\nexport default ({ path }: SykepengerForm) => (\n\t<div className=\"flexbox--flex-wrap\">\n\t\t<FormikTextInput name={`${path}.bruttoUtbetalt`} label=\"Brutto utbetalt\" type=\"number\" />\n\t\t<InntektsmeldingSelect\n\t\t\tpath={`${path}.begrunnelseForReduksjonEllerIkkeUtbetalt`}\n\t\t\tlabel=\"Begrunnelse for reduksjon eller ikke utbetalt\"\n\t\t\tkodeverk={Kodeverk.Begrunnelse}\n\t\t\tsize=\"large\"\n\t\t/>\n\t\t<FormikDollyFieldArray\n\t\t\tname={`${path}.arbeidsgiverperiodeListe`}\n\t\t\theader=\"Arbeidsgiverperioder\"\n\t\t\tnewEntry={initialArbeidsperiode}\n\t\t>\n\t\t\t{(newPath: string) => (\n\t\t\t\t<>\n\t\t\t\t\t<FormikDatepicker name={`${newPath}.fom`} label=\"Fra og med dato\" />\n\t\t\t\t\t<FormikDatepicker name={`${newPath}.tom`} label=\"Til og med dato\" />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t</div>\n)\n","import * as React from 'react'\nimport { get as _get } from 'lodash'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\n\ninterface PleiepengerForm {\n\tpath: string\n}\n\nconst initialPleiepengerperiode = {\n\tfom: '',\n\ttom: ''\n}\n\nexport default ({ path }: PleiepengerForm) => (\n\t<FormikDollyFieldArray\n\t\tname={path}\n\t\theader=\"Pleiepengerperioder\"\n\t\tnewEntry={initialPleiepengerperiode}\n\t\tnested\n\t>\n\t\t{(path: string) => (\n\t\t\t<>\n\t\t\t\t<FormikDatepicker name={`${path}.fom`} label=\"Fra og med dato\" />\n\t\t\t\t<FormikDatepicker name={`${path}.tom`} label=\"Til og med dato\" />\n\t\t\t</>\n\t\t)}\n\t</FormikDollyFieldArray>\n)\n","import * as React from 'react'\nimport { get as _get } from 'lodash'\nimport _has from 'lodash/has'\nimport Button from '~/components/ui/button/Button'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { Ytelser } from '~/components/fagsystem/inntektsmelding/InntektsmeldingTypes'\n\ninterface RefusjonForm {\n\tpath: string\n\tytelse: string\n}\n\nconst initialEndringIRefusjon = {\n\tfom: '',\n\ttom: ''\n}\n\nexport default ({ path, ytelse }: RefusjonForm) => {\n\treturn (\n\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t<FormikTextInput\n\t\t\t\tname={`${path}.refusjonsbeloepPrMnd`}\n\t\t\t\tlabel=\"Samlet månedlig refusjonsbeløp\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tsize=\"medium\"\n\t\t\t/>\n\t\t\t<FormikDatepicker name={`${path}.refusjonsopphoersdato`} label=\"Opphørsdato for refusjon\" />\n\t\t\t{/* Endring i refusjon gjelder sykepenger, foreldrepenger, svangerskapspenger, pleiepenger, opplæring */}\n\t\t\t{ytelse !== Ytelser.Omsorgspenger && (\n\t\t\t\t<FormikDollyFieldArray\n\t\t\t\t\tname={`${path}.endringIRefusjonListe`}\n\t\t\t\t\theader=\"Endring i refusjon\"\n\t\t\t\t\tnewEntry={initialEndringIRefusjon}\n\t\t\t\t>\n\t\t\t\t\t{(path: string) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<FormikDatepicker name={`${path}.endringsdato`} label=\"Endringsdato\" />\n\t\t\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\t\t\tname={`${path}.refusjonsbeloepPrMnd`}\n\t\t\t\t\t\t\t\tlabel=\"Nytt refusjonsbeløp per måned\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</FormikDollyFieldArray>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import * as React from 'react'\nimport { get as _get } from 'lodash'\nimport InntektsmeldingSelect from './InntektsmeldingSelect'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { Kodeverk, Ytelser } from '~/components/fagsystem/inntektsmelding/InntektsmeldingTypes'\n\ninterface ArbeidsforholdForm {\n\tpath: string\n\tytelse: string\n}\n\nconst initialPeriode = { fom: '', tom: '' }\n\nexport default ({ path, ytelse }: ArbeidsforholdForm) => (\n\t<div className=\"flexbox--flex-wrap\">\n\t\t<FormikTextInput name={`${path}.arbeidsforholdId`} label=\"Arbeidsforhold-ID\" type=\"number\" />\n\t\t<FormikTextInput name={`${path}.beregnetInntekt.beloep`} label=\"Beløp\" type=\"number\" />\n\t\t<InntektsmeldingSelect\n\t\t\tpath={`${path}.beregnetInntekt.aarsakVedEndring`}\n\t\t\tlabel=\"Årsak ved endring\"\n\t\t\tkodeverk={Kodeverk.AarsakVedEndring}\n\t\t/>\n\t\t<FormikDatepicker name={`${path}.foersteFravaersdag`} label=\"Første fraværsdag\" />\n\t\t{/* Gjelder for sykepoenger, svangerskapspenger, pleie, omsorg og opplæring*/}\n\t\t{ytelse !== Ytelser.Foreldrepenger && (\n\t\t\t<FormikDollyFieldArray\n\t\t\t\tname={`${path}.avtaltFerieListe`}\n\t\t\t\theader=\"Avtalt ferieliste\"\n\t\t\t\tnewEntry={initialPeriode}\n\t\t\t>\n\t\t\t\t{(path: string) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FormikDatepicker name={`${path}.fom`} label=\"Fra og med dato\" />\n\t\t\t\t\t\t<FormikDatepicker name={`${path}.tom`} label=\"Til og med dato\" />\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</FormikDollyFieldArray>\n\t\t)}\n\t</div>\n)\n","import * as React from 'react'\nimport { get as _get } from 'lodash'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport InntektsmeldingSelect from './InntektsmeldingSelect'\nimport { Kodeverk } from '~/components/fagsystem/inntektsmelding/InntektsmeldingTypes'\n\ninterface NaturalytelseForm {\n\tpath: string\n}\n\nconst initialNaturalytelse = {\n\tbeloepPrMnd: '',\n\tfom: '',\n\tnaturalytelseType: ''\n}\n\nexport default ({ path }: NaturalytelseForm) => (\n\t<>\n\t\t<FormikDollyFieldArray\n\t\t\tname={`${path}.opphoerAvNaturalytelseListe`}\n\t\t\theader=\"Opphør av naturalytelse\"\n\t\t\tnewEntry={initialNaturalytelse}\n\t\t>\n\t\t\t{(path: string) => (\n\t\t\t\t<>\n\t\t\t\t\t<FormikTextInput name={`${path}.beloepPrMnd`} label=\"Beløp per måned\" type=\"number\" />\n\t\t\t\t\t<FormikDatepicker name={`${path}.fom`} label=\"Fra og med dato\" />\n\t\t\t\t\t<InntektsmeldingSelect\n\t\t\t\t\t\tpath={`${path}.naturalytelseType`}\n\t\t\t\t\t\tlabel=\"Årsak til innsending\"\n\t\t\t\t\t\tkodeverk={Kodeverk.NaturalYtelse}\n\t\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t\t<FormikDollyFieldArray\n\t\t\tname={`${path}.gjenopptakelseNaturalytelseListe`}\n\t\t\theader=\"Gjenopptakelse av naturalytelse\"\n\t\t\tnewEntry={initialNaturalytelse}\n\t\t>\n\t\t\t{(path: string) => (\n\t\t\t\t<>\n\t\t\t\t\t<FormikTextInput name={`${path}.beloepPrMnd`} label=\"Beløp per måned\" type=\"number\" />\n\t\t\t\t\t<FormikDatepicker name={`${path}.fom`} label=\"Fra og med dato\" />\n\t\t\t\t\t<InntektsmeldingSelect\n\t\t\t\t\t\tpath={`${path}.naturalytelseType`}\n\t\t\t\t\t\tlabel=\"Årsak til innsending\"\n\t\t\t\t\t\tkodeverk={Kodeverk.NaturalYtelse}\n\t\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t</>\n)\n","import React from 'react'\nimport { AlertStripeAdvarsel } from 'nav-frontend-alertstriper'\n\nexport const AlertAaregRequired = ({ meldingSkjema }: { meldingSkjema: string }) => {\n\treturn (\n\t\t<AlertStripeAdvarsel style={{ marginBottom: '20px' }}>\n\t\t\tPersonen må ha et arbeidsforhold knyttet til den samme virksomheten som du velger i{' '}\n\t\t\t{meldingSkjema}. Det kan du legge til ved å gå tilbake til forrige side og huke av for\n\t\t\tArbeidsforhold (Aareg) under Arbeid og inntekt.\n\t\t</AlertStripeAdvarsel>\n\t)\n}\n","import React from 'react'\nimport Icon from '~/components/ui/icon/Icon'\nimport cn from 'classnames'\nimport './inputWarning.less'\n\ntype WarningData = {\n\tvisWarning: boolean\n\twarningText: string\n\tchildren: any\n\tsize?: string\n}\n\nexport const InputWarning = ({\n\tvisWarning,\n\twarningText,\n\tchildren,\n\tsize = 'small'\n}: WarningData) => {\n\tconst css = cn('dolly-form-input', size)\n\n\treturn (\n\t\t<div className=\"warning-input\">\n\t\t\t{children}\n\t\t\t{visWarning && (\n\t\t\t\t<div className={css}>\n\t\t\t\t\t<div className=\"flexbox\">\n\t\t\t\t\t\t<Icon kind=\"personinformasjon\" className=\"warning-ikon\" />\n\t\t\t\t\t\t<div className=\"warning-text\">{warningText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import * as Yup from 'yup'\nimport _get from 'lodash/get'\nimport _isNil from 'lodash/isNil'\nimport { isWithinInterval, getMonth, getYear } from 'date-fns'\nimport { ifPresent, requiredDate, requiredString, messages } from '~/utils/YupValidations'\n\nconst innenforAnsettelsesforholdTest = (validation, validateFomMonth) => {\n\tconst errorMsg = 'Dato må være innenfor ansettelsesforhold'\n\tconst errorMsgMonth =\n\t\t'Dato må være innenfor ansettelsesforhold, og i samme kalendermåned og år som fra-dato'\n\treturn validation.test(\n\t\t'range',\n\t\tvalidateFomMonth ? errorMsgMonth : errorMsg,\n\t\tfunction isWithinTest(val) {\n\t\t\tif (!val) return true\n\n\t\t\t// Husk at dato som kommer fra en Mal kan være av typen String\n\t\t\tconst dateValue = new Date(val)\n\t\t\tconst path = this.path\n\t\t\tconst values = this.options.context\n\t\t\tconst aaregIndex = parseInt(path.match(/\\d+/g)[0])\n\t\t\tconst ameldingIndex = parseInt(path.match(/\\d+/g)[1])\n\t\t\tconst arbeidsforholdIndex = this.options.index\n\n\t\t\tif (validateFomMonth) {\n\t\t\t\tconst fomPath = path.replace('.tom', '.fom')\n\t\t\t\tconst fomMonth = _get(values, fomPath)\n\t\t\t\tif (\n\t\t\t\t\tgetMonth(dateValue) !== getMonth(new Date(fomMonth)) ||\n\t\t\t\t\tgetYear(dateValue) !== getYear(new Date(fomMonth))\n\t\t\t\t)\n\t\t\t\t\treturn false\n\t\t\t}\n\t\t\tconst arrayPos = _get(values, 'aareg[0].amelding')\n\t\t\t\t? `aareg[0].amelding[${ameldingIndex}].arbeidsforhold[${arbeidsforholdIndex}]`\n\t\t\t\t: `aareg[${aaregIndex}]`\n\n\t\t\tconst ansattFom = _get(values, `${arrayPos}.ansettelsesPeriode.fom`)\n\t\t\tconst ansattTom = _get(values, `${arrayPos}.ansettelsesPeriode.tom`)\n\n\t\t\treturn isWithinInterval(dateValue, {\n\t\t\t\tstart: new Date(ansattFom),\n\t\t\t\tend: _isNil(ansattTom) ? new Date() : new Date(ansattTom)\n\t\t\t})\n\t\t}\n\t)\n}\n\nconst fullArbeidsforholdTest = validation => {\n\tconst fullArbeidsforholdTyper = ['', 'ordinaertArbeidsforhold', 'maritimtArbeidsforhold']\n\treturn validation.test('isRequired', 'Feltet er påkrevd', function checkRequired(val) {\n\t\tlet gyldig = true\n\t\tconst values = this.options.context\n\t\tconst index = this.options.index\n\t\tconst arbeidsforholdType = _get(values, `aareg[${index}].arbeidsforholdstype`)\n\t\tif (fullArbeidsforholdTyper.some(value => value === arbeidsforholdType) && !val) {\n\t\t\tgyldig = false\n\t\t}\n\t\treturn gyldig\n\t})\n}\n\nconst ansettelsesPeriode = Yup.object({\n\tfom: requiredDate,\n\ttom: Yup.date().nullable(),\n\tsluttaarsak: Yup.string().nullable()\n})\n\nconst arbeidsgiver = Yup.object({\n\taktoertype: requiredString,\n\torgnummer: Yup.string().when('aktoertype', {\n\t\tis: 'ORG',\n\t\tthen: Yup.string()\n\t\t\t.matches(/^[0-9]*$/, 'Orgnummer må være et tall med 9 sifre')\n\t\t\t.test('len', 'Orgnummer må være et tall med 9 sifre', val => val && val.length === 9)\n\t}),\n\tident: Yup.string().when('aktoertype', {\n\t\tis: 'PERS',\n\t\tthen: Yup.string()\n\t\t\t.matches(/^[0-9]*$/, 'Ident må være et tall med 11 sifre')\n\t\t\t.test('len', 'Ident må være et tall med 11 sifre', val => val && val.length === 11)\n\t})\n})\n\nconst arbeidsavtale = Yup.object({\n\tyrke: fullArbeidsforholdTest(Yup.string()),\n\tansettelsesform: Yup.string(),\n\tstillingsprosent: fullArbeidsforholdTest(\n\t\tYup.number()\n\t\t\t.min(0, 'Kan ikke være mindre enn ${min}')\n\t\t\t.max(100, 'Kan ikke være større enn ${max}')\n\t\t\t.typeError(messages.required)\n\t),\n\tendringsdatoStillingsprosent: Yup.date().nullable(),\n\tsisteLoennsendringsdato: Yup.date().nullable(),\n\tarbeidstidsordning: fullArbeidsforholdTest(Yup.string()),\n\tavtaltArbeidstimerPerUke: fullArbeidsforholdTest(\n\t\tYup.number()\n\t\t\t.min(1, 'Kan ikke være mindre enn ${min}')\n\t\t\t.max(75, 'Kan ikke være større enn ${max}')\n\t\t\t.typeError(messages.required)\n\t)\n})\n\nconst fartoy = Yup.array().of(\n\tYup.object({\n\t\tskipsregister: requiredString,\n\t\tskipstype: requiredString,\n\t\tfartsomraade: requiredString\n\t})\n)\n\nconst requiredPeriode = Yup.mixed()\n\t.when('$aareg[0].arbeidsforholdstype', {\n\t\tis: 'frilanserOppdragstakerHonorarPersonerMm',\n\t\tthen: requiredString\n\t})\n\t.when('$aareg[0].arbeidsforholdstype', {\n\t\tis: 'maritimtArbeidsforhold',\n\t\tthen: requiredString\n\t})\n\t.when('$aareg[0].arbeidsforholdstype', {\n\t\tis: 'ordinaertArbeidsforhold',\n\t\tthen: requiredString\n\t})\n\t.nullable()\n\nexport const validation = {\n\taareg: Yup.array().of(\n\t\tYup.object({\n\t\t\tansettelsesPeriode: ifPresent('$aareg[0].arbeidsgiver', ansettelsesPeriode),\n\t\t\tarbeidsforholdstype: requiredString,\n\t\t\tarbeidsforholdID: Yup.string().nullable(),\n\t\t\tarbeidsgiver: ifPresent('$aareg[0].arbeidsgiver', arbeidsgiver),\n\t\t\tarbeidsavtale: ifPresent('$aareg[0].arbeidsgiver', arbeidsavtale),\n\t\t\tfartoy: ifPresent('$aareg[0].fartoy', fartoy),\n\t\t\tantallTimerForTimeloennet: Yup.array().of(\n\t\t\t\tYup.object({\n\t\t\t\t\tperiode: Yup.object({\n\t\t\t\t\t\tfom: innenforAnsettelsesforholdTest(requiredDate),\n\t\t\t\t\t\ttom: innenforAnsettelsesforholdTest(requiredDate, true)\n\t\t\t\t\t}),\n\t\t\t\t\tantallTimer: Yup.number()\n\t\t\t\t\t\t.min(1, 'Kan ikke være mindre enn ${min}')\n\t\t\t\t\t\t.typeError(messages.required)\n\t\t\t\t})\n\t\t\t),\n\t\t\tutenlandsopphold: Yup.array().of(\n\t\t\t\tYup.object({\n\t\t\t\t\tperiode: Yup.object({\n\t\t\t\t\t\tfom: innenforAnsettelsesforholdTest(requiredDate),\n\t\t\t\t\t\ttom: innenforAnsettelsesforholdTest(requiredDate, true)\n\t\t\t\t\t}),\n\t\t\t\t\tland: requiredString\n\t\t\t\t})\n\t\t\t),\n\t\t\tpermisjon: Yup.array().of(\n\t\t\t\tYup.object({\n\t\t\t\t\tpermisjonsPeriode: Yup.object({\n\t\t\t\t\t\tfom: innenforAnsettelsesforholdTest(requiredDate),\n\t\t\t\t\t\ttom: innenforAnsettelsesforholdTest(Yup.date().nullable())\n\t\t\t\t\t}),\n\t\t\t\t\tpermisjonsprosent: Yup.number()\n\t\t\t\t\t\t.min(1, 'Kan ikke være mindre enn ${min}')\n\t\t\t\t\t\t.max(100, 'Kan ikke være større enn ${max}')\n\t\t\t\t\t\t.typeError(messages.required),\n\t\t\t\t\tpermisjon: requiredString\n\t\t\t\t})\n\t\t\t),\n\t\t\tpermittering: Yup.array().of(\n\t\t\t\tYup.object({\n\t\t\t\t\tpermitteringsPeriode: Yup.object({\n\t\t\t\t\t\tfom: innenforAnsettelsesforholdTest(requiredDate),\n\t\t\t\t\t\ttom: innenforAnsettelsesforholdTest(Yup.date().nullable())\n\t\t\t\t\t}),\n\t\t\t\t\tpermitteringsprosent: Yup.number()\n\t\t\t\t\t\t.min(1, 'Kan ikke være mindre enn ${min}')\n\t\t\t\t\t\t.max(100, 'Kan ikke være større enn ${max}')\n\t\t\t\t\t\t.typeError(messages.required)\n\t\t\t\t})\n\t\t\t),\n\t\t\tamelding: ifPresent(\n\t\t\t\t'$aareg[0].amelding',\n\t\t\t\tYup.array().of(\n\t\t\t\t\tYup.object({\n\t\t\t\t\t\tarbeidsforhold: Yup.array().of(\n\t\t\t\t\t\t\tYup.object({\n\t\t\t\t\t\t\t\tansettelsesPeriode: ansettelsesPeriode,\n\t\t\t\t\t\t\t\tarbeidsforholdID: Yup.string().nullable(),\n\t\t\t\t\t\t\t\tarbeidsgiver: arbeidsgiver,\n\t\t\t\t\t\t\t\tarbeidsavtale: arbeidsavtale,\n\t\t\t\t\t\t\t\tfartoy: fartoy,\n\t\t\t\t\t\t\t\tantallTimerForTimeloennet: Yup.array().of(\n\t\t\t\t\t\t\t\t\tYup.object({\n\t\t\t\t\t\t\t\t\t\tperiode: Yup.object({\n\t\t\t\t\t\t\t\t\t\t\tfom: requiredDate,\n\t\t\t\t\t\t\t\t\t\t\ttom: requiredDate\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\tantallTimer: Yup.number()\n\t\t\t\t\t\t\t\t\t\t\t.min(1, 'Kan ikke være mindre enn ${min}')\n\t\t\t\t\t\t\t\t\t\t\t.typeError(messages.required)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tutenlandsopphold: Yup.array().of(\n\t\t\t\t\t\t\t\t\tYup.object({\n\t\t\t\t\t\t\t\t\t\tperiode: Yup.object({\n\t\t\t\t\t\t\t\t\t\t\tfom: requiredDate,\n\t\t\t\t\t\t\t\t\t\t\ttom: requiredDate\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\tland: requiredString\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tpermisjon: Yup.array().of(\n\t\t\t\t\t\t\t\t\tYup.object({\n\t\t\t\t\t\t\t\t\t\tpermisjonsPeriode: Yup.object({\n\t\t\t\t\t\t\t\t\t\t\tfom: requiredDate,\n\t\t\t\t\t\t\t\t\t\t\ttom: Yup.date().nullable()\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\tpermisjonsprosent: Yup.number()\n\t\t\t\t\t\t\t\t\t\t\t.min(1, 'Kan ikke være mindre enn ${min}')\n\t\t\t\t\t\t\t\t\t\t\t.max(100, 'Kan ikke være større enn ${max}')\n\t\t\t\t\t\t\t\t\t\t\t.typeError(messages.required),\n\t\t\t\t\t\t\t\t\t\tpermisjon: requiredString\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tpermittering: Yup.array().of(\n\t\t\t\t\t\t\t\t\tYup.object({\n\t\t\t\t\t\t\t\t\t\tpermitteringsPeriode: Yup.object({\n\t\t\t\t\t\t\t\t\t\t\tfom: requiredDate,\n\t\t\t\t\t\t\t\t\t\t\ttom: Yup.date().nullable()\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\tpermitteringsprosent: Yup.number()\n\t\t\t\t\t\t\t\t\t\t\t.min(1, 'Kan ikke være mindre enn ${min}')\n\t\t\t\t\t\t\t\t\t\t\t.max(100, 'Kan ikke være større enn ${max}')\n\t\t\t\t\t\t\t\t\t\t\t.typeError(messages.required)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t),\n\t\t\tgenererPeriode: ifPresent(\n\t\t\t\t'$aareg[0].amelding',\n\t\t\t\tYup.object({\n\t\t\t\t\tfom: requiredPeriode,\n\t\t\t\t\ttom: requiredPeriode\n\t\t\t\t})\n\t\t\t)\n\t\t})\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { initialTimeloennet } from '../initialValues'\n\nconst infotekst =\n\t'Start- og sluttdato må både være innenfor samme kalendermåned i samme år og perioden til arbeidsforholdet'\n\nexport const TimeloennetForm = ({\n\tpath,\n\tameldingIndex,\n\tarbeidsforholdIndex,\n\tformikBag,\n\terLenket,\n\tonChangeLenket\n}) => {\n\tconst maaneder = _get(formikBag.values, 'aareg[0].amelding')\n\n\tconst handleNewEntry = () => {\n\t\tif (!maaneder) return\n\t\tmaaneder.forEach((maaned, idMaaned) => {\n\t\t\tif (!erLenket && idMaaned != ameldingIndex) return\n\t\t\tconst currTimeloennet = _get(\n\t\t\t\tformikBag.values,\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].antallTimerForTimeloennet`\n\t\t\t)\n\t\t\tformikBag.setFieldValue(\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].antallTimerForTimeloennet`,\n\t\t\t\tcurrTimeloennet ? [...currTimeloennet, initialTimeloennet] : [initialTimeloennet]\n\t\t\t)\n\t\t})\n\t}\n\n\tconst handleRemoveEntry = idTimeloennet => {\n\t\tif (!maaneder) return\n\t\tmaaneder.forEach((maaned, idMaaned) => {\n\t\t\tif (!erLenket && idMaaned != ameldingIndex) return\n\t\t\tconst currTimeloennet = _get(\n\t\t\t\tformikBag.values,\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].antallTimerForTimeloennet`\n\t\t\t)\n\t\t\tcurrTimeloennet.splice(idTimeloennet, 1)\n\t\t\tformikBag.setFieldValue(\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].antallTimerForTimeloennet`,\n\t\t\t\tcurrTimeloennet\n\t\t\t)\n\t\t})\n\t}\n\n\t//! Har disablet changehandlers fordi de mest sannsynlig ikke er nødvendige, og de kompliserer skjemaet mye.\n\t//! Lar dem bli liggende en stund i tilfelle det blir behov for dem.\n\n\treturn (\n\t\t<FormikDollyFieldArray\n\t\t\tname={path}\n\t\t\theader=\"Timer med timelønnet\"\n\t\t\thjelpetekst={infotekst}\n\t\t\tnewEntry={initialTimeloennet}\n\t\t\tnested\n\t\t\t// handleNewEntry={maaneder ? handleNewEntry : null}\n\t\t\t// handleRemoveEntry={maaneder ? handleRemoveEntry : null}\n\t\t>\n\t\t\t{(path, idx) => (\n\t\t\t\t<div key={idx} className=\"flexbox\">\n\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\tname={`${path}.antallTimer`}\n\t\t\t\t\t\tlabel=\"Antall timer for timelønnet\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`antallTimerForTimeloennet[${idx}].antallTimer`)}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`${path}.periode.fom`}\n\t\t\t\t\t\tlabel=\"Periode fra\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`antallTimerForTimeloennet[${idx}].periode.fom`)}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`${path}.periode.tom`}\n\t\t\t\t\t\tlabel=\"Periode til\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`antallTimerForTimeloennet[${idx}].periode.tom`)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { initialPermisjon } from '../initialValues'\nimport { ArbeidKodeverk } from '~/config/kodeverk'\n\nconst infotekst = 'Start- og sluttdato må være innenfor perioden til arbeidsforholdet'\n\nexport const PermisjonForm = ({\n\tpath,\n\tameldingIndex,\n\tarbeidsforholdIndex,\n\tformikBag,\n\terLenket,\n\tonChangeLenket\n}) => {\n\tconst maaneder = _get(formikBag.values, 'aareg[0].amelding')\n\n\tconst handleNewEntry = () => {\n\t\tif (!maaneder) return\n\t\tmaaneder.forEach((maaned, idMaaned) => {\n\t\t\tif (!erLenket && idMaaned != ameldingIndex) return\n\t\t\tconst currPermisjon = _get(\n\t\t\t\tformikBag.values,\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].permisjon`\n\t\t\t)\n\t\t\tformikBag.setFieldValue(\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].permisjon`,\n\t\t\t\tcurrPermisjon ? [...currPermisjon, initialPermisjon] : [initialPermisjon]\n\t\t\t)\n\t\t})\n\t}\n\n\tconst handleRemoveEntry = idPermisjon => {\n\t\tif (!maaneder) return\n\t\tmaaneder.forEach((maaned, idMaaned) => {\n\t\t\tif (!erLenket && idMaaned != ameldingIndex) return\n\t\t\tconst currPermisjon = _get(\n\t\t\t\tformikBag.values,\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].permisjon`\n\t\t\t)\n\t\t\tcurrPermisjon.splice(idPermisjon, 1)\n\t\t\tformikBag.setFieldValue(\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].permisjon`,\n\t\t\t\tcurrPermisjon\n\t\t\t)\n\t\t})\n\t}\n\n\t//! Har disablet changehandlers fordi de mest sannsynlig ikke er nødvendige, og de kompliserer skjemaet mye.\n\t//! Lar dem bli liggende en stund i tilfelle det blir behov for dem.\n\n\treturn (\n\t\t<FormikDollyFieldArray\n\t\t\tname={path}\n\t\t\theader=\"Permisjon\"\n\t\t\thjelpetekst={infotekst}\n\t\t\tnewEntry={initialPermisjon}\n\t\t\tnested\n\t\t\t// handleNewEntry={maaneder ? handleNewEntry : null}\n\t\t\t// handleRemoveEntry={maaneder ? handleRemoveEntry : null}\n\t\t>\n\t\t\t{(path, idx) => (\n\t\t\t\t<React.Fragment key={idx}>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.permisjon`}\n\t\t\t\t\t\tlabel=\"Permisjonstype\"\n\t\t\t\t\t\tkodeverk={ArbeidKodeverk.PermisjonsOgPermitteringsBeskrivelse}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`permisjon[${idx}].permisjon`)}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`${path}.permisjonsPeriode.fom`}\n\t\t\t\t\t\tlabel=\"Permisjon fra\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`permisjon[${idx}].permisjonsPeriode.fom`)}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`${path}.permisjonsPeriode.tom`}\n\t\t\t\t\t\tlabel=\"Permisjon til\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`permisjon[${idx}].permisjonsPeriode.tom`)}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\tname={`${path}.permisjonsprosent`}\n\t\t\t\t\t\tlabel=\"Permisjonsprosent\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`permisjon[${idx}].permisjonsprosent`)}\n\t\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { initialPermittering } from '../initialValues'\nimport { FormikProps } from 'formik'\nimport { AaregListe, Amelding } from '~/components/fagsystem/aareg/AaregTypes'\n\ntype Permittering = {\n\tpath: string\n\tameldingIndex: number\n\tarbeidsforholdIndex: number\n\tformikBag: FormikProps<{ aareg: AaregListe }>\n\terLenket: boolean\n}\n\nconst infotekst = 'Start- og sluttdato må være innenfor perioden til arbeidsforholdet'\n\nexport const PermitteringForm = ({\n\tpath,\n\tameldingIndex,\n\tarbeidsforholdIndex,\n\tformikBag,\n\terLenket,\n\tonChangeLenket\n}: Permittering) => {\n\tconst maaneder = _get(formikBag.values, 'aareg[0].amelding')\n\n\tconst handleNewEntry = () => {\n\t\tif (!maaneder) return\n\t\tmaaneder.forEach((maaned: Amelding, idMaaned: number) => {\n\t\t\tif (!erLenket && idMaaned != ameldingIndex) return\n\t\t\tconst currPermittering = _get(\n\t\t\t\tformikBag.values,\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].permittering`\n\t\t\t)\n\t\t\tformikBag.setFieldValue(\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].permittering`,\n\t\t\t\tcurrPermittering ? [...currPermittering, initialPermittering] : [initialPermittering]\n\t\t\t)\n\t\t})\n\t}\n\n\tconst handleRemoveEntry = (idPermittering: number) => {\n\t\tif (!maaneder) return\n\t\tmaaneder.forEach((maaned: Amelding, idMaaned: number) => {\n\t\t\tif (!erLenket && idMaaned != ameldingIndex) return\n\t\t\tconst currPermittering = _get(\n\t\t\t\tformikBag.values,\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].permittering`\n\t\t\t)\n\t\t\tcurrPermittering.splice(idPermittering, 1)\n\t\t\tformikBag.setFieldValue(\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].permittering`,\n\t\t\t\tcurrPermittering\n\t\t\t)\n\t\t})\n\t}\n\n\t//! Har disablet changehandlers fordi de mest sannsynlig ikke er nødvendige, og de kompliserer skjemaet mye.\n\t//! Lar dem bli liggende en stund i tilfelle det blir behov for dem.\n\n\treturn (\n\t\t<FormikDollyFieldArray\n\t\t\tname={path}\n\t\t\theader=\"Permittering\"\n\t\t\thjelpetekst={infotekst}\n\t\t\tnewEntry={initialPermittering}\n\t\t\tnested\n\t\t\t// handleNewEntry={maaneder ? handleNewEntry : null}\n\t\t\t// handleRemoveEntry={maaneder ? handleRemoveEntry : null}\n\t\t>\n\t\t\t{(path: string, idx: number) => (\n\t\t\t\t<React.Fragment key={idx}>\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`${path}.permitteringsPeriode.fom`}\n\t\t\t\t\t\tlabel=\"Permittering fra\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`permittering[${idx}].permitteringsPeriode.fom`)}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`${path}.permitteringsPeriode.tom`}\n\t\t\t\t\t\tlabel=\"Permittering til\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`permittering[${idx}].permitteringsPeriode.tom`)}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\tname={`${path}.permitteringsprosent`}\n\t\t\t\t\t\tlabel=\"Permitteringsprosent\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`permittering[${idx}].permitteringsprosent`)}\n\t\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { initialUtenlandsopphold } from '../initialValues'\n\nconst infotekst =\n\t'Start- og sluttdato må både være innenfor samme kalendermåned i samme år og perioden til arbeidsforholdet'\n\nexport const UtenlandsoppholdForm = ({\n\tpath,\n\tameldingIndex,\n\tarbeidsforholdIndex,\n\tformikBag,\n\terLenket,\n\tonChangeLenket\n}) => {\n\tconst maaneder = _get(formikBag.values, 'aareg[0].amelding')\n\n\tconst handleNewEntry = () => {\n\t\tif (!maaneder) return\n\t\tmaaneder.forEach((maaned, idMaaned) => {\n\t\t\tif (!erLenket && idMaaned != ameldingIndex) return\n\t\t\tconst currUtenlandsopphold = _get(\n\t\t\t\tformikBag.values,\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].utenlandsopphold`\n\t\t\t)\n\t\t\tformikBag.setFieldValue(\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].utenlandsopphold`,\n\t\t\t\tcurrUtenlandsopphold\n\t\t\t\t\t? [...currUtenlandsopphold, initialUtenlandsopphold]\n\t\t\t\t\t: [initialUtenlandsopphold]\n\t\t\t)\n\t\t})\n\t}\n\n\tconst handleRemoveEntry = idUtenlandsopphold => {\n\t\tif (!maaneder) return\n\t\tmaaneder.forEach((maaned, idMaaned) => {\n\t\t\tif (!erLenket && idMaaned != ameldingIndex) return\n\t\t\tconst currUtenlandsopphold = _get(\n\t\t\t\tformikBag.values,\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].utenlandsopphold`\n\t\t\t)\n\t\t\tcurrUtenlandsopphold.splice(idUtenlandsopphold, 1)\n\t\t\tformikBag.setFieldValue(\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold[${arbeidsforholdIndex}].utenlandsopphold`,\n\t\t\t\tcurrUtenlandsopphold\n\t\t\t)\n\t\t})\n\t}\n\n\t//! Har disablet changehandlers fordi de mest sannsynlig ikke er nødvendige, og de kompliserer skjemaet mye.\n\t//! Lar dem bli liggende en stund i tilfelle det blir behov for dem.\n\n\treturn (\n\t\t<FormikDollyFieldArray\n\t\t\tname={path}\n\t\t\theader=\"Utenlandsopphold\"\n\t\t\thjelpetekst={infotekst}\n\t\t\tnewEntry={initialUtenlandsopphold}\n\t\t\tnested\n\t\t\t// handleNewEntry={maaneder ? handleNewEntry : null}\n\t\t\t// handleRemoveEntry={maaneder ? handleRemoveEntry : null}\n\t\t>\n\t\t\t{(path, idx) => (\n\t\t\t\t<div key={idx} className=\"flexbox\">\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.land`}\n\t\t\t\t\t\tlabel=\"Land\"\n\t\t\t\t\t\tkodeverk={AdresseKodeverk.ArbeidOgInntektLand}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`utenlandsopphold[${idx}].land`)}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`${path}.periode.fom`}\n\t\t\t\t\t\tlabel=\"Opphold fra\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`utenlandsopphold[${idx}].periode.fom`)}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`${path}.periode.tom`}\n\t\t\t\t\t\tlabel=\"Opphold til\"\n\t\t\t\t\t\t// onChange={onChangeLenket(`utenlandsopphold[${idx}].periode.tom`)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n","export enum ArbeidsgiverTyper {\n\tegen = 'EGEN',\n\tfelles = 'FELLES',\n\tfritekst = 'FRITEKST',\n\tprivat = 'PRIVAT'\n}\n\nexport type AaregListe = {\n\taareg: Array<Aareg>\n}\n\nexport type Aareg = {\n\tarbeidsforholdstype: string\n\tgenererPeriode: {\n\t\tfom: string\n\t\ttom: string\n\t\tpeiode: Array<string>\n\t}\n\tamelding: Amelding\n}\n\nexport type AmeldingListe = {\n\tamelding: Array<Amelding>\n}\n\nexport type Amelding = {\n\tmaaned: string\n\tarbeidsforhold: Array<Arbeidsforhold>\n}\n\ntype Arbeidsforhold = {\n\tarbeidsforholdID: string\n}\n\nexport type KodeverkValue = {\n\tgyldigFra: string\n\tgyldigTil: string\n\tlabel: string\n\tvalue: string\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { ArbeidKodeverk } from '~/config/kodeverk'\n\nexport const ArbeidsavtaleForm = ({ path, onChangeLenket }) => {\n\treturn (\n\t\t<div>\n\t\t\t<h3>Ansettelsesdetaljer</h3>\n\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.yrke`}\n\t\t\t\t\tlabel=\"Yrke\"\n\t\t\t\t\tkodeverk={ArbeidKodeverk.Yrker}\n\t\t\t\t\tsize=\"xxxlarge\"\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\toptionHeight={50}\n\t\t\t\t\tonChange={onChangeLenket('arbeidsavtale.yrke')}\n\t\t\t\t/>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.ansettelsesform`}\n\t\t\t\t\tlabel=\"Ansettelsesform\"\n\t\t\t\t\tkodeverk={ArbeidKodeverk.AnsettelsesformAareg}\n\t\t\t\t\tonChange={onChangeLenket('arbeidsavtale.ansettelsesform')}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tkey={`${path}.stillingsprosent`}\n\t\t\t\t\tname={`${path}.stillingsprosent`}\n\t\t\t\t\tlabel=\"Stillingsprosent\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tonBlur={onChangeLenket('arbeidsavtale.stillingsprosent')}\n\t\t\t\t/>\n\t\t\t\t<FormikDatepicker\n\t\t\t\t\tname={`${path}.endringsdatoStillingsprosent`}\n\t\t\t\t\tlabel=\"Endringsdato stillingsprosent\"\n\t\t\t\t\tonChange={onChangeLenket('arbeidsavtale.endringsdatoStillingsprosent')}\n\t\t\t\t\tfastfield={false}\n\t\t\t\t/>\n\t\t\t\t<FormikDatepicker\n\t\t\t\t\tname={`${path}.sisteLoennsendringsdato`}\n\t\t\t\t\tlabel=\"Endringsdato lønn\"\n\t\t\t\t\tonChange={onChangeLenket('arbeidsavtale.sisteLoennsendringsdato')}\n\t\t\t\t\tfastfield={false}\n\t\t\t\t/>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.arbeidstidsordning`}\n\t\t\t\t\tlabel=\"Arbeidstidsordning\"\n\t\t\t\t\tkodeverk={ArbeidKodeverk.Arbeidstidsordninger}\n\t\t\t\t\tsize=\"xxlarge\"\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\tonChange={onChangeLenket('arbeidsavtale.arbeidstidsordning')}\n\t\t\t\t/>\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tkey={`${path}.avtaltArbeidstimerPerUke`}\n\t\t\t\t\tname={`${path}.avtaltArbeidstimerPerUke`}\n\t\t\t\t\tlabel=\"Avtalte arbeidstimer per uke\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tonBlur={onChangeLenket('arbeidsavtale.avtaltArbeidstimerPerUke')}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { ArbeidKodeverk } from '~/config/kodeverk'\n\ntype MaritimtArbeidsforhold = {\n\tpath: string\n\tonChangeLenket: (fieldPath: string) => string\n}\n\nexport const MaritimtArbeidsforholdForm = ({ path, onChangeLenket }: MaritimtArbeidsforhold) => {\n\treturn (\n\t\t<div>\n\t\t\t<h3>Fartøy</h3>\n\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.skipsregister`}\n\t\t\t\t\tlabel=\"Skipsregister\"\n\t\t\t\t\tkodeverk={ArbeidKodeverk.Skipsregistre}\n\t\t\t\t\tonChange={onChangeLenket('fartoy[0].skipsregister')}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.skipstype`}\n\t\t\t\t\tlabel=\"Fartøystype\"\n\t\t\t\t\tkodeverk={ArbeidKodeverk.Skipstyper}\n\t\t\t\t\tonChange={onChangeLenket('fartoy[0].skipstype')}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.fartsomraade`}\n\t\t\t\t\tlabel=\"Fartsområde\"\n\t\t\t\t\tkodeverk={ArbeidKodeverk.Fartsområder}\n\t\t\t\t\tonChange={onChangeLenket('fartoy[0].fartsomraade')}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import * as React from 'react'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { SelectOptionsOppslag } from '~/service/SelectOptionsOppslag'\nimport { ErrorBoundary } from '~/components/ui/appError/ErrorBoundary'\nimport LoadableComponent from '~/components/ui/loading/LoadableComponent'\n\ntype EgenOrganisasjonSelect = {\n\tname: string\n\tisClearable?: boolean\n\tonChange?: (selected: any) => void\n}\n\nexport const EgenOrganisasjonSelect = ({\n\tname,\n\tisClearable = true,\n\tonChange = null\n}: EgenOrganisasjonSelect) => {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<LoadableComponent\n\t\t\t\tonFetch={() =>\n\t\t\t\t\tSelectOptionsOppslag.hentVirksomheterFraOrgforvalter().then(response =>\n\t\t\t\t\t\tresponse.map(virksomhet => ({\n\t\t\t\t\t\t\tvalue: virksomhet.orgnummer,\n\t\t\t\t\t\t\tlabel: `${virksomhet.orgnummer} (${virksomhet.enhetstype}) - ${virksomhet.orgnavn}`\n\t\t\t\t\t\t}))\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\trender={data => (\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tlabel=\"Organisasjonsnummer\"\n\t\t\t\t\t\toptions={data}\n\t\t\t\t\t\tsize=\"xxlarge\"\n\t\t\t\t\t\tisClearable={isClearable}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</ErrorBoundary>\n\t)\n}\n","import React, { useState } from 'react'\nimport { useBoolean } from 'react-use'\nimport _get from 'lodash/get'\nimport Icon from '~/components/ui/icon/Icon'\nimport Loading from '~/components/ui/loading/Loading'\nimport { DollyTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { TpsfApi } from '~/service/Api'\nimport { FormikProps } from 'formik'\n\ntype ArbeidsgiverIdentProps = {\n\tformikBag: FormikProps<{}>\n\tpath: string\n}\n\nexport const ArbeidsgiverIdent = ({ formikBag, path }: ArbeidsgiverIdentProps) => {\n\tconst [error, setError] = useState(null)\n\tconst [personnummer, setPersonnummer] = useState(_get(formikBag.values, path))\n\tconst [success, setSuccess] = useBoolean(false)\n\tconst [loading, setLoading] = useBoolean(false)\n\tconst [miljoer, setMiljoer] = useState(null)\n\n\tconst handleChange = (event: React.ChangeEvent<any>) => {\n\t\tevent.preventDefault()\n\t\tsetError(null)\n\t\tsetMiljoer(null)\n\t\tsetSuccess(false)\n\n\t\tlet personnr = event.target.value\n\n\t\t// TODO: move to frontend validation\n\t\tif (personnr.match(/^[0-9]{11}$/) != null) {\n\t\t\thandleManualPersonnrChange(personnr)\n\t\t} else {\n\t\t\tsetError('Ident må være et tall med 11 siffer.')\n\t\t\tformikBag.setFieldValue(`${path}`, '')\n\t\t}\n\t}\n\n\tconst handleManualPersonnrChange = (personnr: string) => {\n\t\tsetLoading(true)\n\n\t\tTpsfApi.getMiljoerByFnr(personnr)\n\t\t\t.then((response: any) => {\n\t\t\t\tif (\n\t\t\t\t\t!('statusPaaIdenter' in response.data) ||\n\t\t\t\t\tresponse.data.statusPaaIdenter.length === 0 ||\n\t\t\t\t\tresponse.data.statusPaaIdenter[0].env.length === 0\n\t\t\t\t) {\n\t\t\t\t\tsetError('Fant ikke arbeidsgiver ident.')\n\t\t\t\t\tsetLoading(false)\n\t\t\t\t\tformikBag.setFieldValue(`${path}`, '')\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tsetError(null)\n\t\t\t\tsetSuccess(true)\n\t\t\t\tsetLoading(false)\n\t\t\t\tsetPersonnummer(personnr)\n\n\t\t\t\tlet env = response.data.statusPaaIdenter[0].env\n\t\t\t\tsetMiljoer(env === null ? env : env.toString())\n\n\t\t\t\tformikBag.setFieldValue(`${path}`, personnr)\n\t\t\t})\n\t\t\t.catch(() => setError('Fant ikke arbeidsgiver ident.'))\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<DollyTextInput\n\t\t\t\tname={path}\n\t\t\t\t// @ts-ignore\n\t\t\t\tdefaultValue={personnummer}\n\t\t\t\tlabel={'Arbeidsgiver ident'}\n\t\t\t\tonBlur={handleChange}\n\t\t\t\tdisabled={loading}\n\t\t\t\tfeil={\n\t\t\t\t\terror && {\n\t\t\t\t\t\tfeilmelding: error\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t/>\n\t\t\t{success && (\n\t\t\t\t<div className=\"flexbox\">\n\t\t\t\t\t<Icon size={22} kind=\"feedback-check-circle\" /> Ident funnet i miljø: {miljoer}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{loading && <Loading label=\"Sjekker arbeidsgiver ident.\" />}\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport _has from 'lodash/has'\nimport _set from 'lodash/set'\nimport _cloneDeep from 'lodash/cloneDeep'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { TimeloennetForm } from './timeloennetForm'\nimport { PermisjonForm } from './permisjonForm'\nimport { PermitteringForm } from './permitteringForm'\nimport { UtenlandsoppholdForm } from './utenlandsoppholdForm'\nimport { ArbeidsavtaleForm } from './arbeidsavtaleForm'\nimport { MaritimtArbeidsforholdForm } from './maritimtArbeidsforholdForm'\nimport { OrganisasjonMedArbeidsforholdSelect } from '~/components/organisasjonSelect'\nimport { ArbeidKodeverk } from '~/config/kodeverk'\nimport { ArbeidsgiverTyper } from '~/components/fagsystem/aareg/AaregTypes'\nimport {\n\tinitialForenkletOppgjoersordningOrg,\n\tinitialForenkletOppgjoersordningPers,\n\tinitialArbeidsforholdOrg,\n\tinitialArbeidsforholdPers,\n\tinitialFartoy\n} from '../initialValues'\nimport { EgenOrganisasjonSelect } from '~/components/organisasjonSelect/EgenOrganisasjonSelect'\nimport { ArbeidsgiverIdent } from '~/components/fagsystem/aareg/form/partials/arbeidsgiverIdent.tsx'\nimport { isDate } from 'date-fns'\n\nexport const ArbeidsforholdForm = ({\n\tpath,\n\tameldingIndex,\n\tarbeidsforholdIndex,\n\tformikBag,\n\terLenket,\n\tarbeidsgiverType\n}) => {\n\tconst arbeidsforholdstype =\n\t\ttypeof ameldingIndex !== 'undefined'\n\t\t\t? _get(formikBag.values, 'aareg[0].arbeidsforholdstype')\n\t\t\t: _get(formikBag.values, `${path}.arbeidsforholdstype`)\n\tconst onChangeLenket = fieldPath => {\n\t\tif (arbeidsgiverType !== ArbeidsgiverTyper.egen) {\n\t\t\treturn field => {\n\t\t\t\tconst value = isDate(field) ? field : field?.value || field?.target?.value || null\n\t\t\t\tformikBag.setFieldValue(`${path}.${fieldPath}`, value)\n\t\t\t}\n\t\t} else {\n\t\t\treturn field => {\n\t\t\t\tconst value = isDate(field) ? field : field?.value || field?.target?.value || null\n\t\t\t\tconst amelding = _get(formikBag.values, 'aareg[0].amelding')\n\t\t\t\tamelding.forEach((maaned, idx) => {\n\t\t\t\t\tif (!erLenket && idx < ameldingIndex) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst arbeidsforholdClone = _cloneDeep(\n\t\t\t\t\t\t\tamelding[idx].arbeidsforhold[arbeidsforholdIndex]\n\t\t\t\t\t\t)\n\t\t\t\t\t\t_set(arbeidsforholdClone, fieldPath, value)\n\t\t\t\t\t\t_set(amelding[idx], `arbeidsforhold[${arbeidsforholdIndex}]`, arbeidsforholdClone)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tformikBag.setFieldValue('aareg[0].amelding', amelding)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst handleArbeidsforholdstypeChange = event => {\n\t\tif (event.value === 'forenkletOppgjoersordning') {\n\t\t\tif (arbeidsforholdstype !== 'forenkletOppgjoersordning') {\n\t\t\t\tif (\n\t\t\t\t\tarbeidsgiverType === ArbeidsgiverTyper.felles ||\n\t\t\t\t\tarbeidsgiverType === ArbeidsgiverTyper.fritekst\n\t\t\t\t) {\n\t\t\t\t\tformikBag.setFieldValue(path, {\n\t\t\t\t\t\t...initialForenkletOppgjoersordningOrg,\n\t\t\t\t\t\tarbeidsforholdstype: event.value\n\t\t\t\t\t})\n\t\t\t\t} else if (arbeidsgiverType === ArbeidsgiverTyper.privat) {\n\t\t\t\t\tformikBag.setFieldValue(path, {\n\t\t\t\t\t\t...initialForenkletOppgjoersordningPers,\n\t\t\t\t\t\tarbeidsforholdstype: event.value\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (arbeidsforholdstype === 'forenkletOppgjoersordning' || arbeidsforholdstype === '') {\n\t\t\t\tif (\n\t\t\t\t\tarbeidsgiverType === ArbeidsgiverTyper.felles ||\n\t\t\t\t\tarbeidsgiverType === ArbeidsgiverTyper.fritekst\n\t\t\t\t) {\n\t\t\t\t\tformikBag.setFieldValue(path, {\n\t\t\t\t\t\t...initialArbeidsforholdOrg,\n\t\t\t\t\t\tarbeidsforholdstype: event.value\n\t\t\t\t\t})\n\t\t\t\t} else if (arbeidsgiverType === ArbeidsgiverTyper.privat) {\n\t\t\t\t\tformikBag.setFieldValue(path, {\n\t\t\t\t\t\t...initialArbeidsforholdPers,\n\t\t\t\t\t\tarbeidsforholdstype: event.value\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tformikBag.setFieldValue(`${path}.arbeidsforholdstype`, event.value)\n\t\t\t}\n\t\t\tif (event.value === 'maritimtArbeidsforhold') {\n\t\t\t\tformikBag.setFieldValue(`${path}.fartoy`, initialFartoy)\n\t\t\t} else {\n\t\t\t\tformikBag.setFieldValue(`${path}.fartoy`, undefined)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst feilmelding = () => {\n\t\tif (\n\t\t\t!_get(formikBag.values, `${path}.arbeidsforholdstype`) &&\n\t\t\t_has(formikBag.touched, `${path}.arbeidsforholdstype`)\n\t\t) {\n\t\t\treturn {\n\t\t\t\tfeilmelding: _get(formikBag.errors, `${path}.arbeidsforholdstype`)\n\t\t\t}\n\t\t}\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t{arbeidsgiverType !== ArbeidsgiverTyper.egen && (\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.arbeidsforholdstype`}\n\t\t\t\t\t\tlabel=\"Type arbeidsforhold\"\n\t\t\t\t\t\tkodeverk={ArbeidKodeverk.Arbeidsforholdstyper}\n\t\t\t\t\t\tsize=\"large-plus\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tonChange={handleArbeidsforholdstypeChange}\n\t\t\t\t\t\tfeil={feilmelding()}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{arbeidsgiverType === ArbeidsgiverTyper.egen && (\n\t\t\t\t\t<EgenOrganisasjonSelect\n\t\t\t\t\t\tname={`${path}.arbeidsgiver.orgnummer`}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tonChange={onChangeLenket('arbeidsgiver.orgnummer')}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{arbeidsgiverType === ArbeidsgiverTyper.felles && (\n\t\t\t\t\t<OrganisasjonMedArbeidsforholdSelect\n\t\t\t\t\t\tpath={`${path}.arbeidsgiver.orgnummer`}\n\t\t\t\t\t\tlabel={'Organisasjonsnummer'}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{arbeidsgiverType === ArbeidsgiverTyper.fritekst && (\n\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\tname={`${path}.arbeidsgiver.orgnummer`}\n\t\t\t\t\t\tlabel={'Organisasjonsnummer'}\n\t\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{arbeidsgiverType === ArbeidsgiverTyper.privat && (\n\t\t\t\t\t<ArbeidsgiverIdent formikBag={formikBag} path={`${path}.arbeidsgiver.ident`} />\n\t\t\t\t)}\n\t\t\t\t{arbeidsforholdstype !== 'forenkletOppgjoersordning' && (\n\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\tkey={`${path}.arbeidsforholdID`}\n\t\t\t\t\t\tname={`${path}.arbeidsforholdID`}\n\t\t\t\t\t\tlabel=\"Arbeidsforhold-ID\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonBlur={onChangeLenket('arbeidsforholdID')}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<FormikDatepicker\n\t\t\t\t\tname={`${path}.ansettelsesPeriode.fom`}\n\t\t\t\t\tlabel=\"Ansatt fra\"\n\t\t\t\t\tonChange={onChangeLenket('ansettelsesPeriode.fom')}\n\t\t\t\t\tfastfield={false}\n\t\t\t\t/>\n\t\t\t\t<FormikDatepicker\n\t\t\t\t\tname={`${path}.ansettelsesPeriode.tom`}\n\t\t\t\t\tlabel=\"Ansatt til\"\n\t\t\t\t\tonChange={onChangeLenket('ansettelsesPeriode.tom')}\n\t\t\t\t\tfastfield={false}\n\t\t\t\t/>\n\t\t\t\t{arbeidsforholdstype !== 'forenkletOppgjoersordning' && (\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.ansettelsesPeriode.sluttaarsak`}\n\t\t\t\t\t\tlabel=\"Sluttårsak\"\n\t\t\t\t\t\tkodeverk={ArbeidKodeverk.SluttaarsakAareg}\n\t\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\t\tonChange={onChangeLenket('ansettelsesPeriode.sluttaarsak')}\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t_get(formikBag.values, `${path}.ansettelsesPeriode.tom`) === null ? true : false\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{arbeidsforholdstype === 'forenkletOppgjoersordning' && (\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.arbeidsavtale.yrke`}\n\t\t\t\t\t\tlabel=\"Yrke\"\n\t\t\t\t\t\tkodeverk={ArbeidKodeverk.Yrker}\n\t\t\t\t\t\tsize=\"xxxlarge\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\toptionHeight={50}\n\t\t\t\t\t\tonChange={onChangeLenket('arbeidsavtale.yrke')}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t{arbeidsforholdstype !== 'forenkletOppgjoersordning' && (\n\t\t\t\t<ArbeidsavtaleForm path={`${path}.arbeidsavtale`} onChangeLenket={onChangeLenket} />\n\t\t\t)}\n\t\t\t{arbeidsforholdstype === 'maritimtArbeidsforhold' && (\n\t\t\t\t<MaritimtArbeidsforholdForm path={`${path}.fartoy[0]`} onChangeLenket={onChangeLenket} />\n\t\t\t)}\n\n\t\t\t{arbeidsforholdstype !== 'forenkletOppgjoersordning' && (\n\t\t\t\t<>\n\t\t\t\t\t<TimeloennetForm\n\t\t\t\t\t\tpath={`${path}.antallTimerForTimeloennet`}\n\t\t\t\t\t\tameldingIndex={ameldingIndex}\n\t\t\t\t\t\tarbeidsforholdIndex={arbeidsforholdIndex}\n\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\terLenket={erLenket}\n\t\t\t\t\t\tonChangeLenket={onChangeLenket}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<UtenlandsoppholdForm\n\t\t\t\t\t\tpath={`${path}.utenlandsopphold`}\n\t\t\t\t\t\tameldingIndex={ameldingIndex}\n\t\t\t\t\t\tarbeidsforholdIndex={arbeidsforholdIndex}\n\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\terLenket={erLenket}\n\t\t\t\t\t\tonChangeLenket={onChangeLenket}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<PermisjonForm\n\t\t\t\t\t\tpath={`${path}.permisjon`}\n\t\t\t\t\t\tameldingIndex={ameldingIndex}\n\t\t\t\t\t\tarbeidsforholdIndex={arbeidsforholdIndex}\n\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\terLenket={erLenket}\n\t\t\t\t\t\tonChangeLenket={onChangeLenket}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<PermitteringForm\n\t\t\t\t\t\tpath={`${path}.permittering`}\n\t\t\t\t\t\tameldingIndex={ameldingIndex}\n\t\t\t\t\t\tarbeidsforholdIndex={arbeidsforholdIndex}\n\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\terLenket={erLenket}\n\t\t\t\t\t\tonChangeLenket={onChangeLenket}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</React.Fragment>\n\t)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Icon from '~/components/ui/icon/Icon'\nimport './DollyKjede.less'\n\nexport interface KjedeIconProps {\n\tlocked: boolean\n\tonClick: () => void\n}\n\nconst KjedeIcon = styled.div`\n\tborder-radius: 2px;\n\tdisplay: block;\n\tmargin: 2px 2px 2px 6px;\n\tpadding: 5px 5px 3px 5px;\n\tcursor: pointer;\n\tfill: white;\n`\n\nexport default ({ locked, onClick }: KjedeIconProps) => {\n\treturn (\n\t\t<KjedeIcon onClick={() => onClick()} className={'background-color-lightblue'}>\n\t\t\t<Icon size={24} kind={locked ? 'link' : 'linkBroken'} />\n\t\t</KjedeIcon>\n\t)\n}\n","import React, { ReactFragment, useState } from 'react'\nimport styled from 'styled-components'\nimport useBoolean from '~/utils/hooks/useBoolean'\nimport _get from 'lodash/get'\nimport _has from 'lodash/has'\nimport _set from 'lodash/set'\nimport _cloneDeep from 'lodash/cloneDeep'\nimport { format, eachMonthOfInterval } from 'date-fns'\nimport Hjelpetekst from '~/components/hjelpetekst'\nimport { DollySelect } from '~/components/ui/form/inputs/select/Select'\nimport { ArbeidKodeverk } from '~/config/kodeverk'\nimport NavButton from '~/components/ui/button/NavButton/NavButton'\nimport Button from '~/components/ui/button/Button'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport {\n\tinitialPeriode,\n\tinitialAmelding,\n\tinitialArbeidsforholdOrg,\n\tinitialForenkletOppgjoersordningOrg,\n\tinitialFartoy\n} from '../initialValues'\nimport { ArbeidsforholdForm } from './arbeidsforholdForm'\nimport { Monthpicker } from '~/components/ui/form/inputs/monthpicker/Monthpicker'\nimport DollyKjede from '~/components/dollyKjede/DollyKjede'\nimport KjedeIcon from '~/components/dollyKjede/KjedeIcon'\nimport { FormikProps } from 'formik'\nimport { Amelding, KodeverkValue, AaregListe } from '~/components/fagsystem/aareg/AaregTypes'\n\ninterface AmeldingForm {\n\tformikBag: FormikProps<{ aareg: AaregListe }>\n}\n\nconst KjedeContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\twidth: 100%;\n`\n\nconst Fyllknapp = styled(NavButton)`\n\tmargin-bottom: 10px;\n`\n\nconst Slettknapp = styled(Button)`\n\tmargin: 10px 0;\n`\n\nexport const AmeldingForm = ({ formikBag }: AmeldingForm): ReactFragment => {\n\tconst arbeidsforholdstype = _get(formikBag.values, 'aareg[0].arbeidsforholdstype')\n\n\tconst fom = _get(formikBag.values, 'aareg[0].genererPeriode.fom')\n\tconst tom = _get(formikBag.values, 'aareg[0].genererPeriode.tom')\n\tconst periode = _get(formikBag.values, 'aareg[0].genererPeriode.periode')\n\tconst ameldinger = _get(formikBag.values, 'aareg[0].amelding')\n\n\tconst [erLenket, setErLenket, setErIkkeLenket] = useBoolean(true)\n\tconst [selectedIndex, setSelectedIndex] = useState(0)\n\n\tconst handlePeriodeChange = (dato: string, type: string) => {\n\t\tformikBag.setFieldValue(`aareg[0].genererPeriode.${type}`, dato)\n\n\t\tif ((type === 'tom' && fom) || (type === 'fom' && tom)) {\n\t\t\tconst maanederPrev: Array<Amelding> = _get(formikBag.values, 'aareg[0].amelding')\n\t\t\tconst maaneder: Array<string> = []\n\t\t\tconst maanederTmp = eachMonthOfInterval({\n\t\t\t\tstart: new Date(type === 'fom' ? dato : fom),\n\t\t\t\tend: new Date(type === 'tom' ? dato : tom)\n\t\t\t})\n\t\t\tmaanederTmp.forEach(maaned => {\n\t\t\t\tmaaneder.push(format(maaned, 'yyyy-MM'))\n\t\t\t})\n\t\t\tformikBag.setFieldValue('aareg[0].genererPeriode.periode', maaneder)\n\n\t\t\tif (maaneder.length < maanederPrev.length) {\n\t\t\t\tconst maanederFiltered = maanederPrev.filter(maaned => maaneder.includes(maaned.maaned))\n\t\t\t\tformikBag.setFieldValue('aareg[0].amelding', maanederFiltered)\n\t\t\t} else {\n\t\t\t\tmaaneder.forEach((mnd, idx) => {\n\t\t\t\t\tconst currMaaned = _get(formikBag.values, 'aareg[0].amelding').find(\n\t\t\t\t\t\t(element: Amelding) => element.maaned == mnd\n\t\t\t\t\t)\n\t\t\t\t\tformikBag.setFieldValue(`aareg[0].amelding[${idx}]`, {\n\t\t\t\t\t\tmaaned: mnd,\n\t\t\t\t\t\tarbeidsforhold: currMaaned\n\t\t\t\t\t\t\t? currMaaned.arbeidsforhold\n\t\t\t\t\t\t\t: arbeidsforholdstype === 'forenkletOppgjoersordning'\n\t\t\t\t\t\t\t? [initialForenkletOppgjoersordningOrg]\n\t\t\t\t\t\t\t: [initialArbeidsforholdOrg]\n\t\t\t\t\t})\n\t\t\t\t\tif (arbeidsforholdstype === 'maritimtArbeidsforhold') {\n\t\t\t\t\t\tformikBag.setFieldValue(\n\t\t\t\t\t\t\t`aareg[0].amelding[${idx}].arbeidsforhold[0].fartoy`,\n\t\t\t\t\t\t\tinitialFartoy\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tconst handleArbeidsforholdstypeChange = (event: KodeverkValue) => {\n\t\tconst amelding = _get(formikBag.values, 'aareg[0].amelding')\n\t\tconst ameldingClone = _cloneDeep(amelding)\n\n\t\tif (event.value === 'forenkletOppgjoersordning') {\n\t\t\tameldingClone.forEach((maaned: string, idx: number) => {\n\t\t\t\t_set(ameldingClone[idx], 'arbeidsforhold', [initialForenkletOppgjoersordningOrg])\n\t\t\t})\n\t\t} else {\n\t\t\tameldingClone.forEach((maaned: string, idx: number) => {\n\t\t\t\tif (arbeidsforholdstype === 'forenkletOppgjoersordning' || arbeidsforholdstype === '') {\n\t\t\t\t\t_set(ameldingClone[idx], 'arbeidsforhold', [initialArbeidsforholdOrg])\n\t\t\t\t}\n\t\t\t\tif (event.value === 'maritimtArbeidsforhold') {\n\t\t\t\t\tmaaned.arbeidsforhold.forEach((arbforh, id) => {\n\t\t\t\t\t\t_set(ameldingClone[idx], `arbeidsforhold[${id}].fartoy`, initialFartoy)\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tmaaned.arbeidsforhold.forEach((arbforh, id) => {\n\t\t\t\t\t\t_set(ameldingClone[idx], `arbeidsforhold[${id}].fartoy`, undefined)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tformikBag.setFieldValue('aareg[0].amelding', ameldingClone)\n\t\tformikBag.setFieldValue('aareg[0].arbeidsforholdstype', event.value)\n\t}\n\n\tconst handleNewEntry = () => {\n\t\tameldinger.forEach((maaned: Amelding, idMaaned: number) => {\n\t\t\tif (!erLenket && idMaaned != selectedIndex) return\n\t\t\tconst currArbeidsforhold = _get(\n\t\t\t\tformikBag.values,\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold`\n\t\t\t)\n\t\t\tconst nyttArbeidsforhold =\n\t\t\t\tarbeidsforholdstype === 'forenkletOppgjoersordning'\n\t\t\t\t\t? initialForenkletOppgjoersordningOrg\n\t\t\t\t\t: arbeidsforholdstype === 'maritimtArbeidsforhold'\n\t\t\t\t\t? { ...initialArbeidsforholdOrg, fartoy: initialFartoy }\n\t\t\t\t\t: initialArbeidsforholdOrg\n\t\t\tformikBag.setFieldValue(`aareg[0].amelding[${idMaaned}].arbeidsforhold`, [\n\t\t\t\t...currArbeidsforhold,\n\t\t\t\tnyttArbeidsforhold\n\t\t\t])\n\t\t})\n\t}\n\n\tconst handleRemoveEntry = (idArbeidsforhold: number) => {\n\t\tameldinger.forEach((maaned: Amelding, idMaaned: number) => {\n\t\t\tif (!erLenket && idMaaned != selectedIndex) return\n\t\t\tconst currArbeidsforhold = _get(\n\t\t\t\tformikBag.values,\n\t\t\t\t`aareg[0].amelding[${idMaaned}].arbeidsforhold`\n\t\t\t)\n\t\t\tcurrArbeidsforhold.splice(idArbeidsforhold, 1)\n\t\t\tformikBag.setFieldValue(`aareg[0].amelding[${idMaaned}].arbeidsforhold`, currArbeidsforhold)\n\t\t})\n\t}\n\n\tconst handleFjernMaaned = () => {\n\t\tconst currAmelding = _get(formikBag.values, 'aareg[0].amelding')\n\t\tcurrAmelding.splice(selectedIndex, 1)\n\t\tformikBag.setFieldValue('aareg[0].amelding', currAmelding)\n\n\t\tconst nyPeriode = periode\n\t\tnyPeriode.splice(selectedIndex, 1)\n\t\tformikBag.setFieldValue('aareg[0].genererPeriode.periode', nyPeriode)\n\n\t\tif (periode.length === 1) {\n\t\t\tsetSelectedIndex(0)\n\t\t} else if (selectedIndex > 0) {\n\t\t\tsetSelectedIndex(selectedIndex - 1)\n\t\t} else {\n\t\t\tsetSelectedIndex(selectedIndex)\n\t\t}\n\t}\n\n\tconst feilmelding = () => {\n\t\tif (\n\t\t\t!_get(formikBag.values, 'aareg[0].arbeidsforholdstype') &&\n\t\t\t_has(formikBag.touched, 'aareg[0].arbeidsforholdstype')\n\t\t) {\n\t\t\treturn {\n\t\t\t\tfeilmelding: _get(formikBag.errors, 'aareg[0].arbeidsforholdstype')\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"flexbox--align-center\">\n\t\t\t\t<h3>A-melding</h3>\n\t\t\t\t<Hjelpetekst hjelpetekstFor=\"A-melding\">\n\t\t\t\t\tOm du har opprettet dine egne testorganisasjoner kan du sende A-meldinger til disse\n\t\t\t\t\torganisasjonene. Velg først hvilken type arbeidsforhold du ønsker å opprette, deretter kan\n\t\t\t\t\tdu fylle ut resten av informasjonen.\n\t\t\t\t</Hjelpetekst>\n\t\t\t</div>\n\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t<DollySelect\n\t\t\t\t\tname={`aareg[0].arbeidsforholdstype`}\n\t\t\t\t\tlabel=\"Type arbeidsforhold\"\n\t\t\t\t\tkodeverk={ArbeidKodeverk.Arbeidsforholdstyper}\n\t\t\t\t\tsize=\"large-plus\"\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\tonChange={handleArbeidsforholdstypeChange}\n\t\t\t\t\tvalue={arbeidsforholdstype}\n\t\t\t\t\tfeil={feilmelding()}\n\t\t\t\t/>\n\t\t\t\t<>\n\t\t\t\t\t<Monthpicker\n\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\tname=\"aareg[0].genererPeriode.fom\"\n\t\t\t\t\t\tlabel=\"F.o.m. kalendermåned\"\n\t\t\t\t\t\tdate={fom}\n\t\t\t\t\t\thandleDateChange={(dato: string) => handlePeriodeChange(dato, 'fom')}\n\t\t\t\t\t/>\n\t\t\t\t\t<Monthpicker\n\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\tname=\"aareg[0].genererPeriode.tom\"\n\t\t\t\t\t\tlabel=\"T.o.m. kalendermåned\"\n\t\t\t\t\t\tdate={tom}\n\t\t\t\t\t\thandleDateChange={(dato: string) => handlePeriodeChange(dato, 'tom')}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"flexbox--full-width\">\n\t\t\t\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t\t\t\t{/* //TODO lag onClick for å fylle felter */}\n\t\t\t\t\t\t\t{/* <Fyllknapp mini onClick={null} disabled={!fom || !tom}> */}\n\t\t\t\t\t\t\t<Fyllknapp\n\t\t\t\t\t\t\t\tmini\n\t\t\t\t\t\t\t\tonClick={null}\n\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\ttitle=\"Denne funksjonaliteten er foreløpig ikke tilgjengelig\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tFyll felter automatisk\n\t\t\t\t\t\t\t</Fyllknapp>\n\t\t\t\t\t\t\t<Hjelpetekst hjelpetekstFor=\"Fyllknapp\">\n\t\t\t\t\t\t\t\tNår du har fylt ut perioden du ønsker å opprette A-meldinger for, vil det genereres\n\t\t\t\t\t\t\t\tet skjema for hver måned. Du kan velge om du ønsker å fylle ut alt selv, eller fylle\n\t\t\t\t\t\t\t\tfeltene automatisk. Ved automatisk utfylling vil det bli generert en logisk\n\t\t\t\t\t\t\t\thistorikk for A-meldingene i perioden. OBS! Denne funksjonaliteten er foreløpig ikke\n\t\t\t\t\t\t\t\ttilgjengelig, men vi jobber med saken.\n\t\t\t\t\t\t\t</Hjelpetekst>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{periode.length > 0 && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<KjedeContainer>\n\t\t\t\t\t\t\t\t<DollyKjede\n\t\t\t\t\t\t\t\t\tobjectList={periode}\n\t\t\t\t\t\t\t\t\titemLimit={10}\n\t\t\t\t\t\t\t\t\tselectedIndex={selectedIndex}\n\t\t\t\t\t\t\t\t\tsetSelectedIndex={setSelectedIndex}\n\t\t\t\t\t\t\t\t\tisLocked={erLenket}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<KjedeIcon locked={erLenket} onClick={erLenket ? setErIkkeLenket : setErLenket} />\n\t\t\t\t\t\t\t\t<Hjelpetekst hjelpetekstFor=\"DollyKjede\">\n\t\t\t\t\t\t\t\t\tNår du ser et lenke-symbol til høyre for månedsoversikten er alle måneder lenket\n\t\t\t\t\t\t\t\t\tsammen. Det vil si at om du gjør endringer på én måned vil disse bli gjort på alle\n\t\t\t\t\t\t\t\t\tmånedene. Om du trykker på lenken vises en brutt lenke og månedene vil være\n\t\t\t\t\t\t\t\t\tuavhengige av hverandre. Ihvertfall nesten - endringer som gjøres på én måned vil\n\t\t\t\t\t\t\t\t\tkun påvirke den valgte måneden og månedene som kommer etter den i perioden.\n\t\t\t\t\t\t\t\t</Hjelpetekst>\n\t\t\t\t\t\t\t</KjedeContainer>\n\t\t\t\t\t\t\t{arbeidsforholdstype === 'frilanserOppdragstakerHonorarPersonerMm' &&\n\t\t\t\t\t\t\t\tperiode.length > 1 && (\n\t\t\t\t\t\t\t\t\t<Slettknapp kind=\"trashcan\" onClick={handleFjernMaaned}>\n\t\t\t\t\t\t\t\t\t\tFjern måned\n\t\t\t\t\t\t\t\t\t</Slettknapp>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<FormikDollyFieldArray\n\t\t\t\t\t\t\t\tname={`aareg[0].amelding[${selectedIndex}].arbeidsforhold`}\n\t\t\t\t\t\t\t\theader=\"Arbeidsforhold\"\n\t\t\t\t\t\t\t\tnewEntry={\n\t\t\t\t\t\t\t\t\tarbeidsforholdstype === 'forenkletOppgjoersordning'\n\t\t\t\t\t\t\t\t\t\t? initialForenkletOppgjoersordningOrg\n\t\t\t\t\t\t\t\t\t\t: initialArbeidsforholdOrg\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcanBeEmpty={false}\n\t\t\t\t\t\t\t\thandleNewEntry={handleNewEntry}\n\t\t\t\t\t\t\t\thandleRemoveEntry={handleRemoveEntry}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{(path: string, idx: number) => (\n\t\t\t\t\t\t\t\t\t<ArbeidsforholdForm\n\t\t\t\t\t\t\t\t\t\tpath={path}\n\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\tameldingIndex={selectedIndex}\n\t\t\t\t\t\t\t\t\t\tarbeidsforholdIndex={idx}\n\t\t\t\t\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\t\t\t\t\tarbeidsgiverType={'EGEN'}\n\t\t\t\t\t\t\t\t\t\terLenket={erLenket}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</FormikDollyFieldArray>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import React, { ReactElement, ReactFragment, useState } from 'react'\nimport _get from 'lodash/get'\nimport styled from 'styled-components'\nimport { ToggleGruppe, ToggleKnapp } from '~/components/ui/toggle/Toggle'\nimport { AmeldingForm } from './ameldingForm'\nimport { ArbeidsforholdForm } from './arbeidsforholdForm'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport {\n\tinitialValues,\n\tinitialAaregOrg,\n\tinitialArbeidsforholdOrg,\n\tinitialArbeidsforholdPers,\n\tinitialAaregPers\n} from '../initialValues'\nimport { ArbeidsgiverTyper } from '~/components/fagsystem/aareg/AaregTypes'\nimport { AlertStripeInfo, AlertStripeAdvarsel } from 'nav-frontend-alertstriper'\nimport { FormikProps } from 'formik'\nimport { AaregListe } from '~/components/fagsystem/aareg/AaregTypes'\nimport { SelectOptionsOppslag } from '~/service/SelectOptionsOppslag'\nimport LoadableComponent from '~/components/ui/loading/LoadableComponent'\nimport { ErrorBoundary } from '~/components/ui/appError/ErrorBoundary'\n\ninterface ArbeidsforholdToggle {\n\tformikBag: FormikProps<{ aareg: AaregListe }>\n}\n\nconst ToggleArbeidsgiver = styled(ToggleGruppe)`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n`\n\n// Har hardkodet liste over felles Dolly-arbeidsgivere, fordi det tar for lang tid å hente ut fra API\nconst fellesOrg = [\n\t'972674818',\n\t'896929119',\n\t'839942907',\n\t'967170232',\n\t'805824352',\n\t'907670201',\n\t'947064649'\n]\n\nexport const ArbeidsforholdToggle = ({ formikBag }: ArbeidsforholdToggle): ReactElement => {\n\t// const fellesOrg = SelectOptionsOppslag.hentOrgnr().value?.liste\n\t// TODO hent felles organisasjoner fra api istedenfor hardkodet liste\n\n\tconst getArbeidsgiverType =\n\t\t_get(formikBag.values, 'aareg[0].amelding') || _get(formikBag.values, 'aareg[0].arbeidsforhold')\n\t\t\t? ArbeidsgiverTyper.egen\n\t\t\t: _get(formikBag.values, 'aareg[0].arbeidsgiver.aktoertype') === 'PERS'\n\t\t\t? ArbeidsgiverTyper.privat\n\t\t\t: fellesOrg.some(org => org === _get(formikBag.values, 'aareg[0].arbeidsgiver.orgnummer'))\n\t\t\t? ArbeidsgiverTyper.felles\n\t\t\t: ArbeidsgiverTyper.fritekst\n\n\tconst [typeArbeidsgiver, setTypeArbeidsgiver] = useState(getArbeidsgiverType)\n\n\tconst toggleValues = [\n\t\t{\n\t\t\tvalue: ArbeidsgiverTyper.egen,\n\t\t\tlabel: 'Egen organisasjon'\n\t\t},\n\t\t{\n\t\t\tvalue: ArbeidsgiverTyper.felles,\n\t\t\tlabel: 'Felles organisasjoner'\n\t\t},\n\t\t{\n\t\t\tvalue: ArbeidsgiverTyper.fritekst,\n\t\t\tlabel: 'Skriv inn org.nr.'\n\t\t},\n\t\t{\n\t\t\tvalue: ArbeidsgiverTyper.privat,\n\t\t\tlabel: 'Privat arbeidsgiver'\n\t\t}\n\t]\n\n\tconst handleToggleChange = (value: ArbeidsgiverTyper) => {\n\t\tsetTypeArbeidsgiver(value)\n\t\tif (value === ArbeidsgiverTyper.privat) {\n\t\t\tformikBag.setFieldValue('aareg', [initialAaregPers])\n\t\t} else if (value === ArbeidsgiverTyper.felles || value === ArbeidsgiverTyper.fritekst) {\n\t\t\tformikBag.setFieldValue('aareg', [initialAaregOrg])\n\t\t} else if (value === ArbeidsgiverTyper.egen) {\n\t\t\tformikBag.setFieldValue('aareg', [initialValues])\n\t\t}\n\t}\n\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<LoadableComponent\n\t\t\t\tonFetch={() =>\n\t\t\t\t\tSelectOptionsOppslag.hentVirksomheterFraOrgforvalter().then(response => {\n\t\t\t\t\t\treturn response\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\trender={data => {\n\t\t\t\t\tconst harEgneOrg = data && data.length > 0 ? true : false\n\t\t\t\t\tconst orgLink = <a href=\"/organisasjoner\">her</a>\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"toggle--wrapper\">\n\t\t\t\t\t\t\t<ToggleArbeidsgiver\n\t\t\t\t\t\t\t\tonChange={event => handleToggleChange(event.target.value)}\n\t\t\t\t\t\t\t\tname={'arbeidsforhold'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{toggleValues.map(type => (\n\t\t\t\t\t\t\t\t\t<ToggleKnapp\n\t\t\t\t\t\t\t\t\t\tkey={type.value}\n\t\t\t\t\t\t\t\t\t\tvalue={type.value}\n\t\t\t\t\t\t\t\t\t\tchecked={type.value === typeArbeidsgiver}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{type.label}\n\t\t\t\t\t\t\t\t\t</ToggleKnapp>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ToggleArbeidsgiver>\n\t\t\t\t\t\t\t{typeArbeidsgiver === ArbeidsgiverTyper.egen ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{!harEgneOrg && (\n\t\t\t\t\t\t\t\t\t\t<AlertStripeAdvarsel>\n\t\t\t\t\t\t\t\t\t\t\tDu har ingen egne organisasjoner, og kan derfor ikke sende inn A-meldinger for\n\t\t\t\t\t\t\t\t\t\t\ttestperson. For å lage dine egne testorganisasjoner trykk {orgLink}. For å\n\t\t\t\t\t\t\t\t\t\t\topprette testperson med arbeidsforhold i felles organisasjoner eller andre\n\t\t\t\t\t\t\t\t\t\t\tarbeidsgivere, velg en annen kategori ovenfor.\n\t\t\t\t\t\t\t\t\t\t</AlertStripeAdvarsel>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<AmeldingForm formikBag={formikBag} />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<AlertStripeInfo>\n\t\t\t\t\t\t\t\t\t\tFor denne typen arbeidsgiver er det ikke mulig å registrere nye attributter som\n\t\t\t\t\t\t\t\t\t\tsluttårsak, ansettelsesform, endringsdato lønn og fartøy. For å bestille\n\t\t\t\t\t\t\t\t\t\ttestbrukere med disse attributtene må du bruke egen organisasjon for å opprette\n\t\t\t\t\t\t\t\t\t\tA-meldinger.\n\t\t\t\t\t\t\t\t\t</AlertStripeInfo>\n\t\t\t\t\t\t\t\t\t<FormikDollyFieldArray\n\t\t\t\t\t\t\t\t\t\tname=\"aareg\"\n\t\t\t\t\t\t\t\t\t\theader=\"Arbeidsforhold\"\n\t\t\t\t\t\t\t\t\t\tnewEntry={\n\t\t\t\t\t\t\t\t\t\t\ttypeArbeidsgiver === ArbeidsgiverTyper.privat\n\t\t\t\t\t\t\t\t\t\t\t\t? { ...initialArbeidsforholdPers, arbeidsforholdstype: '' }\n\t\t\t\t\t\t\t\t\t\t\t\t: { ...initialArbeidsforholdOrg, arbeidsforholdstype: '' }\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcanBeEmpty={false}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{(path: string, idx: number) => (\n\t\t\t\t\t\t\t\t\t\t\t<ArbeidsforholdForm\n\t\t\t\t\t\t\t\t\t\t\t\tpath={path}\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\t\t\tarbeidsforholdIndex={idx}\n\t\t\t\t\t\t\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\t\t\t\t\t\t\terLenket={null}\n\t\t\t\t\t\t\t\t\t\t\t\tarbeidsgiverType={typeArbeidsgiver}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</FormikDollyFieldArray>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t/>\n\t\t</ErrorBoundary>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport Panel from '~/components/ui/panel/Panel'\nimport { panelError } from '~/components/ui/form/formUtils'\nimport { erForste } from '~/components/ui/form/formUtils'\nimport { validation } from './validation'\nimport { ArbeidsforholdToggle } from './partials/arbeidsforholdToggle'\n\nconst aaregAttributt = 'aareg'\n\nexport const AaregForm = ({ formikBag }) => (\n\t<Vis attributt={aaregAttributt}>\n\t\t<Panel\n\t\t\theading=\"Arbeidsforhold (Aareg)\"\n\t\t\thasErrors={panelError(formikBag, aaregAttributt)}\n\t\t\ticonType=\"arbeid\"\n\t\t\tstartOpen={() => erForste(formikBag.values, [aaregAttributt])}\n\t\t>\n\t\t\t<ArbeidsforholdToggle formikBag={formikBag} />\n\t\t</Panel>\n\t</Vis>\n)\n\nAaregForm.validation = validation\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { FormikCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\nimport { DollySelect } from '~/components/ui/form/inputs/select/Select'\n\nconst initialValues = {\n\tegenskap: '',\n\tfratraadt: false\n}\n\nexport const PersonrollerForm = ({ formikBag, path }) => {\n\tconst personroller = _get(formikBag.values, `${path}.personroller`)\n\n\tconst getEgenskapOptions = () => {\n\t\tconst valgteOptions = []\n\t\tif (personroller) {\n\t\t\tpersonroller.forEach(rolle => {\n\t\t\t\tvalgteOptions.push(rolle.egenskap)\n\t\t\t})\n\t\t}\n\t\treturn Options('rolleEgenskap').filter(option => !valgteOptions.includes(option.value))\n\t}\n\n\tconst egenskapOptions = getEgenskapOptions()\n\tconst antallEgenskaper = 5 // Det finnes fem ulike egenskaper for personroller, som hver kan velges én gang\n\tconst colorStyles = {\n\t\tplaceholder: defaultStyles => {\n\t\t\treturn {\n\t\t\t\t...defaultStyles,\n\t\t\t\tcolor: '#000000'\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<FormikDollyFieldArray\n\t\t\tname={`${path}.personroller`}\n\t\t\theader=\"Personrolle\"\n\t\t\tnewEntry={initialValues}\n\t\t\tdisabled={personroller.length >= antallEgenskaper}\n\t\t\ttitle={\n\t\t\t\tpersonroller.length >= antallEgenskaper ? 'Alle mulige personroller er lagt til' : null\n\t\t\t}\n\t\t>\n\t\t\t{path => {\n\t\t\t\tconst egenskap = `${path}.egenskap`\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<DollySelect\n\t\t\t\t\t\t\tname={egenskap}\n\t\t\t\t\t\t\tlabel=\"Egenskap\"\n\t\t\t\t\t\t\toptions={egenskapOptions}\n\t\t\t\t\t\t\tonChange={egenskapen => formikBag.setFieldValue(egenskap, egenskapen.value)}\n\t\t\t\t\t\t\tvalue={_get(formikBag.values, egenskap)}\n\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t_get(formikBag.values, egenskap) ? _get(formikBag.values, egenskap) : 'Velg..'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t\tfeil={\n\t\t\t\t\t\t\t\t_get(formikBag.values, egenskap) === '' && {\n\t\t\t\t\t\t\t\t\tfeilmelding: 'Feltet er påkrevd'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstyles={_get(formikBag.values, egenskap) ? colorStyles : null}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikCheckbox name={`${path}.fratraadt`} label=\"Har fratrådt\" checkboxMargin />\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { DollySelect } from '~/components/ui/form/inputs/select/Select'\nimport { OrganisasjonLoader } from '~/components/organisasjonSelect'\nimport { SelectOptionsOppslag } from '~/service/SelectOptionsOppslag'\nimport { PersonrollerForm } from './personrollerForm'\n\nconst initialValues = {\n\trolle: '',\n\tregistreringsdato: new Date(),\n\tforetaksNavn: {\n\t\tnavn1: ''\n\t},\n\torgNr: '',\n\tpersonroller: []\n}\n\nexport const EnheterForm = ({ formikBag }) => {\n\tconst roller = SelectOptionsOppslag.hentRollerFraBrregstub()\n\tconst rollerOptions = SelectOptionsOppslag.formatOptions('roller', roller)\n\n\tconst setEnhetsinfo = (org, path) => {\n\t\tformikBag.setFieldValue(`${path}.orgNr`, org.value)\n\t\tformikBag.setFieldValue(`${path}.foretaksNavn.navn1`, org.navn)\n\t\tif (org.forretningsAdresse) {\n\t\t\tformikBag.setFieldValue(`${path}.forretningsAdresse`, {\n\t\t\t\tadresse1: org.forretningsAdresse.adresse,\n\t\t\t\tkommunenr: org.forretningsAdresse.kommunenr,\n\t\t\t\tlandKode: org.forretningsAdresse.landkode,\n\t\t\t\tpostnr: org.forretningsAdresse.postnr,\n\t\t\t\tpoststed: org.forretningsAdresse.poststed\n\t\t\t})\n\t\t}\n\t\tif (org.postadresse) {\n\t\t\tformikBag.setFieldValue(`${path}.postAdresse`, {\n\t\t\t\tadresse1: org.forretningsAdresse.adresse,\n\t\t\t\tkommunenr: org.forretningsAdresse.kommunenr,\n\t\t\t\tlandKode: org.forretningsAdresse.landkode,\n\t\t\t\tpostnr: org.forretningsAdresse.postnr,\n\t\t\t\tpoststed: org.forretningsAdresse.poststed\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<FormikDollyFieldArray name=\"brregstub.enheter\" header=\"Enhet\" newEntry={initialValues}>\n\t\t\t{path => (\n\t\t\t\t<>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.rolle`}\n\t\t\t\t\t\tlabel=\"Rolle\"\n\t\t\t\t\t\toptions={rollerOptions}\n\t\t\t\t\t\tisLoading={roller.loading}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tfastfield={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker name={`${path}.registreringsdato`} label=\"Registreringsdato\" />\n\t\t\t\t\t<OrganisasjonLoader\n\t\t\t\t\t\trender={data => (\n\t\t\t\t\t\t\t<DollySelect\n\t\t\t\t\t\t\t\tname={`${path}.orgNr`}\n\t\t\t\t\t\t\t\tlabel=\"Organisasjonsnummer\"\n\t\t\t\t\t\t\t\toptions={data}\n\t\t\t\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\t\t\t\tonChange={org => setEnhetsinfo(org, path)}\n\t\t\t\t\t\t\t\tvalue={_get(formikBag.values, `${path}.orgNr`)}\n\t\t\t\t\t\t\t\tfeil={\n\t\t\t\t\t\t\t\t\t_get(formikBag.values, `${path}.orgNr`) === '' && {\n\t\t\t\t\t\t\t\t\t\tfeilmelding: 'Feltet er påkrevd'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<PersonrollerForm formikBag={formikBag} path={path} />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</FormikDollyFieldArray>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport * as Yup from 'yup'\nimport { requiredDate, requiredString, requiredNumber, ifPresent } from '~/utils/YupValidations'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { SelectOptionsOppslag } from '~/service/SelectOptionsOppslag'\nimport Panel from '~/components/ui/panel/Panel'\nimport { panelError } from '~/components/ui/form/formUtils'\nimport { erForste } from '~/components/ui/form/formUtils'\nimport { EnheterForm } from './partials/enheterForm'\n\nconst brregAttributt = 'brregstub'\n\nexport const BrregstubForm = ({ formikBag }) => {\n\tconst understatuser = SelectOptionsOppslag.hentUnderstatusFraBrregstub()\n\tconst understatuserOptions = SelectOptionsOppslag.formatOptions('understatuser', understatuser)\n\n\treturn (\n\t\t<Vis attributt={brregAttributt}>\n\t\t\t<Panel\n\t\t\t\theading=\"Brønnøysundregistrene\"\n\t\t\t\thasErrors={panelError(formikBag, brregAttributt)}\n\t\t\t\ticonType=\"brreg\"\n\t\t\t\tstartOpen={() => erForste(formikBag.values, [brregAttributt])}\n\t\t\t>\n\t\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname=\"brregstub.understatuser\"\n\t\t\t\t\t\tlabel=\"Understatuser\"\n\t\t\t\t\t\toptions={understatuserOptions}\n\t\t\t\t\t\tisLoading={understatuser.loading}\n\t\t\t\t\t\tisMulti={true}\n\t\t\t\t\t\tsize=\"grow\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tfastfield={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<EnheterForm formikBag={formikBag} />\n\t\t\t\t</div>\n\t\t\t</Panel>\n\t\t</Vis>\n\t)\n}\n\nBrregstubForm.validation = {\n\tbrregstub: ifPresent(\n\t\t'$brregstub',\n\t\tYup.object({\n\t\t\tunderstatuser: Yup.array()\n\t\t\t\t.of(Yup.number())\n\t\t\t\t.required('Velg minst én understatus'),\n\t\t\tenheter: Yup.array().of(\n\t\t\t\tYup.object({\n\t\t\t\t\trolle: requiredString,\n\t\t\t\t\tregistreringsdato: requiredDate,\n\t\t\t\t\torgNr: requiredNumber,\n\t\t\t\t\tpersonroller: Yup.array().of(\n\t\t\t\t\t\tYup.object({\n\t\t\t\t\t\t\tegenskap: requiredString,\n\t\t\t\t\t\t\tfratraadt: Yup.boolean(),\n\t\t\t\t\t\t\tregistreringsdato: Yup.date()\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t)\n\t\t})\n\t)\n}\n","import * as Yup from 'yup'\nimport { requiredString, requiredDate, ifKeyHasValue, ifPresent } from '~/utils/YupValidations'\n\nconst personnavnSchema = Yup.object({\n\tfornavn: requiredString,\n\tmellomnavn: Yup.string(),\n\tetternavn: requiredString\n})\n\nconst falskIdentitet = Yup.object({\n\trettIdentitet: Yup.object({\n\t\tidentitetType: requiredString,\n\t\trettIdentitetVedIdentifikasjonsnummer: Yup.mixed().when('identitetType', {\n\t\t\tis: 'ENTYDIG',\n\t\t\tthen: requiredString\n\t\t}),\n\t\tpersonnavn: ifKeyHasValue(\n\t\t\t'$pdlforvalter.falskIdentitet.rettIdentitet.identitetType',\n\t\t\t['OMTRENTLIG'],\n\t\t\tpersonnavnSchema\n\t\t),\n\t\tfoedselsdato: Yup.mixed().when('identitetType', {\n\t\t\tis: 'OMTRENTLIG',\n\t\t\tthen: requiredDate\n\t\t}),\n\t\tkjoenn: Yup.mixed().when('identitetType', {\n\t\t\tis: 'OMTRENTLIG',\n\t\t\tthen: requiredString\n\t\t}),\n\t\tstatsborgerskap: Yup.mixed().when('identitetType', {\n\t\t\tis: 'OMTRENTLIG',\n\t\t\tthen: requiredString\n\t\t})\n\t})\n})\n\nconst utenlandskId = Yup.array().of(\n\tYup.object({\n\t\tidentifikasjonsnummer: requiredString,\n\t\tkilde: requiredString,\n\t\topphoert: requiredString,\n\t\tutstederland: requiredString\n\t})\n)\n\nconst kontaktDoedsbo = Yup.object({\n\tadressat: Yup.object({\n\t\tadressatType: requiredString,\n\t\tkontaktperson: ifKeyHasValue(\n\t\t\t'$pdlforvalter.kontaktinformasjonForDoedsbo.adressat.adressatType',\n\t\t\t['ADVOKAT', 'ORGANISASJON'],\n\t\t\tpersonnavnSchema\n\t\t),\n\t\torganisasjonsnavn: Yup.string().when('adressatType', {\n\t\t\tis: 'ORGANISASJON',\n\t\t\tthen: requiredString\n\t\t}),\n\t\torganisasjonsnummer: Yup.string().when('adressatType', {\n\t\t\tis: 'ADVOKAT' || 'ORGANISASJON',\n\t\t\tthen: Yup.string().matches(/^[0-9]{9}$/, {\n\t\t\t\tmessage: 'Organisasjonsnummeret må være et tall med 9 sifre',\n\t\t\t\texcludeEmptyString: true\n\t\t\t})\n\t\t}),\n\t\tidnummer: Yup.string().when('adressatType', {\n\t\t\tis: 'PERSON_MEDID',\n\t\t\tthen: requiredString.matches(/^[0-9]{11}$/, {\n\t\t\t\tmessage: 'Id-nummeret må være et tall med 11 sifre',\n\t\t\t\texcludeEmptyString: true\n\t\t\t})\n\t\t}),\n\t\tnavn: ifKeyHasValue(\n\t\t\t'$pdlforvalter.kontaktinformasjonForDoedsbo.adressat.adressatType',\n\t\t\t['PERSON_UTENID'],\n\t\t\tpersonnavnSchema\n\t\t)\n\t}),\n\tadresselinje1: requiredString,\n\tadresselinje2: Yup.string(),\n\tpostnummer: requiredString,\n\tpoststedsnavn: requiredString,\n\tlandkode: requiredString,\n\tskifteform: requiredString,\n\tutstedtDato: requiredDate\n})\n\nexport const validation = {\n\tpdlforvalter: Yup.object({\n\t\tfalskIdentitet: ifPresent('$pdlforvalter.falskIdentitet', falskIdentitet),\n\t\tutenlandskIdentifikasjonsnummer: ifPresent(\n\t\t\t'$pdlforvalter.utenlandskIdentifikasjonsnummer',\n\t\t\tutenlandskId\n\t\t),\n\t\tkontaktinformasjonForDoedsbo: ifPresent(\n\t\t\t'$pdlforvalter.kontaktinformasjonForDoedsbo',\n\t\t\tkontaktDoedsbo\n\t\t)\n\t})\n}\n","import _get from 'lodash/get'\nimport _isNil from 'lodash/isNil'\n\nexport const getPlaceholder = (values, selectedValuePath) => {\n\tconst fornavn = _get(values, `${selectedValuePath}.fornavn`)\n\tlet mellomnavn = _get(values, `${selectedValuePath}.mellomnavn`)\n\tconst etternavn = _get(values, `${selectedValuePath}.etternavn`)\n\n\tmellomnavn = mellomnavn !== '' ? ' ' + mellomnavn : mellomnavn\n\treturn !_isNil(fornavn) && fornavn !== '' ? fornavn + mellomnavn + ' ' + etternavn : 'Velg..'\n}\n\nexport const setNavn = (navn, path, setFieldValue) => {\n\tconst deltNavn = navn.label.split(' ')\n\tsetFieldValue(`${path}.fornavn`, navn.value)\n\tsetFieldValue(`${path}.mellomnavn`, deltNavn.length === 3 ? deltNavn[1] : '')\n\tsetFieldValue(`${path}.etternavn`, deltNavn[deltNavn.length - 1])\n}\n\nexport const setValue = (value, path, setFieldValue) => {\n\tsetFieldValue(`${path}`, value.value)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { DollySelect, FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { getPlaceholder, setValue, setNavn } from '../utils'\nimport { SelectOptionsOppslag } from '~/service/SelectOptionsOppslag'\n\nexport const FalskIdentitet = ({ formikBag }) => {\n\tconst falskIdPath = 'pdlforvalter.falskIdentitet.rettIdentitet'\n\tconst falskIdObj = formikBag.values.pdlforvalter.falskIdentitet.rettIdentitet\n\n\tconst navnInfo = SelectOptionsOppslag.hentPersonnavn()\n\tconst navnOptions = SelectOptionsOppslag.formatOptions('personnavn', navnInfo)\n\tconst dollyGruppeInfo = SelectOptionsOppslag.hentGruppe()\n\tconst navnOgFnrOptions = SelectOptionsOppslag.formatOptions('navnOgFnr', dollyGruppeInfo)\n\n\tconst settIdentitetType = e => {\n\t\tif (e.value === 'UKJENT') {\n\t\t\tformikBag.setFieldValue(falskIdPath, { identitetType: e.value, rettIdentitetErUkjent: true })\n\t\t} else if (e.value === 'ENTYDIG') {\n\t\t\tformikBag.setFieldValue(falskIdPath, {\n\t\t\t\tidentitetType: e.value,\n\t\t\t\trettIdentitetVedIdentifikasjonsnummer: ''\n\t\t\t})\n\t\t} else {\n\t\t\tformikBag.setFieldValue(falskIdPath, {\n\t\t\t\tidentitetType: e.value,\n\t\t\t\tfoedselsdato: '',\n\t\t\t\tkjoenn: '',\n\t\t\t\tpersonnavn: { fornavn: '', mellomnavn: '', etternavn: '' },\n\t\t\t\tstatsborgerskap: ''\n\t\t\t})\n\t\t}\n\t\treturn e.value\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<FormikSelect\n\t\t\t\tname={`${falskIdPath}.identitetType`}\n\t\t\t\tlabel=\"Opplysninger om rett identitet\"\n\t\t\t\toptions={Options('identitetType')}\n\t\t\t\tvalue={falskIdObj.identitetType}\n\t\t\t\tonChange={settIdentitetType}\n\t\t\t\tisClearable={false}\n\t\t\t\tsize=\"medium\"\n\t\t\t/>\n\n\t\t\t{falskIdObj.identitetType === 'ENTYDIG' && (\n\t\t\t\t<DollySelect\n\t\t\t\t\tname={`${falskIdPath}.rettIdentitetVedIdentifikasjonsnummer`}\n\t\t\t\t\tlabel=\"Navn og identifikasjonsnummer\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\toptions={navnOgFnrOptions}\n\t\t\t\t\tisLoading={dollyGruppeInfo.loading}\n\t\t\t\t\tonChange={id =>\n\t\t\t\t\t\tsetValue(\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t`${falskIdPath}.rettIdentitetVedIdentifikasjonsnummer`,\n\t\t\t\t\t\t\tformikBag.setFieldValue\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\tvalue={_get(formikBag.values, `${falskIdPath}.rettIdentitetVedIdentifikasjonsnummer`)}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{falskIdObj.identitetType === 'OMTRENTLIG' && (\n\t\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t\t<DollySelect\n\t\t\t\t\t\tname={`${falskIdPath}.personnavn.fornavn`}\n\t\t\t\t\t\tlabel=\"Navn\"\n\t\t\t\t\t\toptions={navnOptions}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tisLoading={navnInfo.loading}\n\t\t\t\t\t\tonChange={navn => setNavn(navn, `${falskIdPath}.personnavn`, formikBag.setFieldValue)}\n\t\t\t\t\t\tvalue={_get(formikBag.values, `${falskIdPath}.personnavn.fornavn`)}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tplaceholder={getPlaceholder(formikBag.values, `${falskIdPath}.personnavn`)}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker name={`${falskIdPath}.foedselsdato`} label=\"Fødselsdato\" />\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${falskIdPath}.kjoenn`}\n\t\t\t\t\t\tlabel=\"Kjønn\"\n\t\t\t\t\t\toptions={Options('kjoennFalskIdentitet')}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${falskIdPath}.statsborgerskap`}\n\t\t\t\t\t\tlabel=\"Statsborgerskap\"\n\t\t\t\t\t\tkodeverk={AdresseKodeverk.StatsborgerskapLand}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tisMulti={true}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\n\nconst initialValues = { identifikasjonsnummer: '', kilde: '', opphoert: '', utstederland: '' }\n\nexport const UtenlandsId = ({ formikBag }) => (\n\t<FormikDollyFieldArray\n\t\tname=\"pdlforvalter.utenlandskIdentifikasjonsnummer\"\n\t\theader=\"Utenlandsk ID\"\n\t\tnewEntry={initialValues}\n\t>\n\t\t{(path, idx) => (\n\t\t\t<React.Fragment key={idx}>\n\t\t\t\t<FormikTextInput name={`${path}.identifikasjonsnummer`} label=\"Identifikasjonsnummer\" />\n\t\t\t\t<FormikTextInput name={`${path}.kilde`} label=\"Kilde\" />\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.opphoert`}\n\t\t\t\t\tlabel=\"Opphørt\"\n\t\t\t\t\toptions={Options('boolean')}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.utstederland`}\n\t\t\t\t\tlabel=\"Utstederland\"\n\t\t\t\t\tkodeverk={AdresseKodeverk.Utstederland}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t)}\n\t</FormikDollyFieldArray>\n)\n","import React from 'react'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikSelect, DollySelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { SelectOptionsOppslag } from '~/service/SelectOptionsOppslag'\nimport { getPlaceholder, setNavn, setValue } from '../utils'\nimport _get from 'lodash/get'\n\nexport const Adressat = ({ formikBag }) => {\n\tconst addressatPath = 'pdlforvalter.kontaktinformasjonForDoedsbo.adressat'\n\tconst adressatType =\n\t\tformikBag.values.pdlforvalter.kontaktinformasjonForDoedsbo.adressat.adressatType\n\n\tconst navnInfo = SelectOptionsOppslag.hentPersonnavn()\n\tconst navnOptions = SelectOptionsOppslag.formatOptions('personnavn', navnInfo)\n\tconst dollyGruppeInfo = SelectOptionsOppslag.hentGruppe()\n\tconst navnOgFnrOptions = SelectOptionsOppslag.formatOptions('navnOgFnr', dollyGruppeInfo)\n\n\tconst handleAfterChange = ({ value }) => {\n\t\tif (value === 'ADVOKAT' || value === 'ORGANISASJON')\n\t\t\tformikBag.setFieldValue(addressatPath, {\n\t\t\t\tadressatType: value,\n\t\t\t\tkontaktperson: { fornavn: '', mellomnavn: '', etternavn: '' },\n\t\t\t\torganisasjonsnavn: '',\n\t\t\t\torganisasjonsnummer: ''\n\t\t\t})\n\t\telse if (value === 'PERSON_UTENID')\n\t\t\tformikBag.setFieldValue(addressatPath, {\n\t\t\t\tadressatType: value,\n\t\t\t\tnavn: { fornavn: '', mellomnavn: '', etternavn: '' },\n\t\t\t\tfoedselsdato: ''\n\t\t\t})\n\t\telse if (value === 'PERSON_MEDID')\n\t\t\tformikBag.setFieldValue(addressatPath, {\n\t\t\t\tadressatType: value,\n\t\t\t\tidnummer: ''\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<Kategori title=\"Adressat\">\n\t\t\t<FormikSelect\n\t\t\t\tname={`${addressatPath}.adressatType`}\n\t\t\t\tlabel=\"Adressattype\"\n\t\t\t\toptions={Options('adressatType')}\n\t\t\t\tonChange={handleAfterChange}\n\t\t\t\tisClearable={false}\n\t\t\t/>\n\n\t\t\t{(adressatType === 'ADVOKAT' || adressatType === 'ORGANISASJON') && (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<DollySelect\n\t\t\t\t\t\tname={`${addressatPath}.kontaktperson.fornavn`}\n\t\t\t\t\t\tlabel=\"Navn\"\n\t\t\t\t\t\toptions={navnOptions}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tplaceholder={getPlaceholder(formikBag.values, `${addressatPath}.kontaktperson`)}\n\t\t\t\t\t\tisLoading={navnInfo.loading}\n\t\t\t\t\t\tonChange={navn =>\n\t\t\t\t\t\t\tsetNavn(navn, `${addressatPath}.kontaktperson`, formikBag.setFieldValue)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={_get(formikBag.values, `${addressatPath}.kontaktperson.fornavn`)}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\toptionHeight={50}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\tname=\"pdlforvalter.kontaktinformasjonForDoedsbo.adressat.organisasjonsnavn\"\n\t\t\t\t\t\tlabel=\"Organisasjonsnavn\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\tname=\"pdlforvalter.kontaktinformasjonForDoedsbo.adressat.organisasjonsnummer\"\n\t\t\t\t\t\tlabel=\"Organisasjonsnummer\"\n\t\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\n\t\t\t{adressatType === 'PERSON_MEDID' && (\n\t\t\t\t<DollySelect\n\t\t\t\t\tname={`${addressatPath}.idnummer`}\n\t\t\t\t\tlabel=\"Navn og id\"\n\t\t\t\t\toptions={navnOgFnrOptions}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tisLoading={dollyGruppeInfo.loading}\n\t\t\t\t\tonChange={id => setValue(id, `${addressatPath}.idnummer`, formikBag.setFieldValue)}\n\t\t\t\t\tvalue={_get(formikBag.values, `${addressatPath}.idnummer`)}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{adressatType === 'PERSON_UTENID' && (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<DollySelect\n\t\t\t\t\t\tname={`${addressatPath}.navn.fornavn`}\n\t\t\t\t\t\tlabel=\"Navn\"\n\t\t\t\t\t\toptions={navnOptions}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tplaceholder={getPlaceholder(formikBag.values, `${addressatPath}.navn`)}\n\t\t\t\t\t\tisLoading={navnInfo.loading}\n\t\t\t\t\t\tonChange={navn => setNavn(navn, `${addressatPath}.navn`, formikBag.setFieldValue)}\n\t\t\t\t\t\tvalue={_get(formikBag.values, `${addressatPath}.navn.fornavn`)}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker name={`${addressatPath}.foedselsdato`} label=\"Fødselsdato\" />\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</Kategori>\n\t)\n}\n","import React from 'react'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\n\nexport const Adresse = ({ formikBag }) => {\n\tconst handleAfterChange = selected => {\n\t\treturn formikBag.setFieldValue(\n\t\t\t'pdlforvalter.kontaktinformasjonForDoedsbo.poststedsnavn',\n\t\t\tselected.data\n\t\t)\n\t}\n\n\treturn (\n\t\t<Kategori title=\"Adresse\">\n\t\t\t<FormikSelect\n\t\t\t\tname=\"pdlforvalter.kontaktinformasjonForDoedsbo.landkode\"\n\t\t\t\tlabel=\"Land\"\n\t\t\t\tkodeverk={AdresseKodeverk.PostadresseLand}\n\t\t\t\tsize=\"large\"\n\t\t\t\tisClearable={false}\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tname=\"pdlforvalter.kontaktinformasjonForDoedsbo.adresselinje1\"\n\t\t\t\t\tlabel=\"Adresselinje 1\"\n\t\t\t\t/>\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tname=\"pdlforvalter.kontaktinformasjonForDoedsbo.adresselinje2\"\n\t\t\t\t\tlabel=\"Adresselinje 2\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{formikBag.values.pdlforvalter.kontaktinformasjonForDoedsbo.landkode === 'NOR' ? (\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"pdlforvalter.kontaktinformasjonForDoedsbo.postnummer\"\n\t\t\t\t\tlabel=\"Postnummer og -sted\"\n\t\t\t\t\tkodeverk={AdresseKodeverk.Postnummer}\n\t\t\t\t\tafterChange={handleAfterChange}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\tname=\"pdlforvalter.kontaktinformasjonForDoedsbo.postnummer\"\n\t\t\t\t\t\tlabel=\"Postnummer\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\tname=\"pdlforvalter.kontaktinformasjonForDoedsbo.poststedsnavn\"\n\t\t\t\t\t\tlabel=\"Poststed\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Kategori>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { Adressat } from './Adressat'\nimport { Adresse } from './Adresse'\n\nexport const KontaktinformasjonForDoedsbo = ({ formikBag }) => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Adressat formikBag={formikBag} />\n\t\t\t<Adresse formikBag={formikBag} />\n\n\t\t\t<Kategori title=\"Diverse\">\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"pdlforvalter.kontaktinformasjonForDoedsbo.skifteform\"\n\t\t\t\t\tlabel=\"Skifteform\"\n\t\t\t\t\toptions={Options('skifteform')}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t\t<FormikDatepicker\n\t\t\t\t\tname=\"pdlforvalter.kontaktinformasjonForDoedsbo.utstedtDato\"\n\t\t\t\t\tlabel=\"Skifteform utstedt\"\n\t\t\t\t/>\n\t\t\t</Kategori>\n\t\t</React.Fragment>\n\t)\n}\n","import React from 'react'\nimport _isEmpty from 'lodash/isEmpty'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { validation } from './validation'\nimport Panel from '~/components/ui/panel/Panel'\nimport { panelError } from '~/components/ui/form/formUtils'\nimport { erForste } from '~/components/ui/form/formUtils'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FalskIdentitet } from './partials/falskIdentitet/FalskIdentitet'\nimport { UtenlandsId } from './partials/utenlandsId/UtenlandsId'\nimport { KontaktinformasjonForDoedsbo } from './partials/kontaktinformasjonForDoedsbo/KontaktinformasjonForDoedsbo'\n\nconst identifikasjonAttributt = [\n\t'pdlforvalter.falskIdentitet',\n\t'pdlforvalter.utenlandskIdentifikasjonsnummer'\n]\nconst doedsboAttributt = 'pdlforvalter.kontaktinformasjonForDoedsbo'\n\nexport const PdlfForm = ({ formikBag }) => (\n\t<React.Fragment>\n\t\t<Vis attributt={identifikasjonAttributt}>\n\t\t\t<Panel\n\t\t\t\theading=\"Identifikasjon\"\n\t\t\t\thasErrors={panelError(formikBag, identifikasjonAttributt)}\n\t\t\t\ticonType=\"identifikasjon\"\n\t\t\t\tstartOpen={() => erForste(formikBag.values, identifikasjonAttributt)}\n\t\t\t>\n\t\t\t\t<Kategori title=\"Falsk identitet\" vis=\"pdlforvalter.falskIdentitet\">\n\t\t\t\t\t<FalskIdentitet formikBag={formikBag} />\n\t\t\t\t</Kategori>\n\t\t\t\t<Kategori\n\t\t\t\t\ttitle=\"Utenlandsk identifikasjonsnummer\"\n\t\t\t\t\tvis=\"pdlforvalter.utenlandskIdentifikasjonsnummer\"\n\t\t\t\t\tflex={false}\n\t\t\t\t>\n\t\t\t\t\t<UtenlandsId formikBag={formikBag} />\n\t\t\t\t</Kategori>\n\t\t\t</Panel>\n\t\t</Vis>\n\n\t\t<Vis attributt={doedsboAttributt}>\n\t\t\t<Panel\n\t\t\t\theading=\"Kontaktinformasjon for dødsbo\"\n\t\t\t\thasErrors={panelError(formikBag, doedsboAttributt)}\n\t\t\t\ticonType=\"doedsbo\"\n\t\t\t\tstartOpen={() => erForste(formikBag.values, [doedsboAttributt])}\n\t\t\t>\n\t\t\t\t<KontaktinformasjonForDoedsbo formikBag={formikBag} />\n\t\t\t</Panel>\n\t\t</Vis>\n\t</React.Fragment>\n)\n\nPdlfForm.validation = validation\n","import React, { useContext } from 'react'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { BestillingsveilederContext } from '~/components/bestillingsveileder/Bestillingsveileder'\n\nexport const MedServicebehov = ({ formikBag }) => {\n\tconst { arenaforvalter } = formikBag.values\n\n\tconst opts = useContext(BestillingsveilederContext)\n\tconst { personFoerLeggTil } = opts\n\n\tconst uregistert = !(personFoerLeggTil && personFoerLeggTil.arenaforvalteren)\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{uregistert && (\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"arenaforvalter.kvalifiseringsgruppe\"\n\t\t\t\t\tlabel=\"Servicebehov\"\n\t\t\t\t\toptions={Options('kvalifiseringsgruppe')}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{arenaforvalter.aap115 && (\n\t\t\t\t<Kategori title=\"11-5-vedtak\">\n\t\t\t\t\t<FormikDatepicker name=\"arenaforvalter.aap115[0].fraDato\" label=\"Fra dato\" />\n\t\t\t\t</Kategori>\n\t\t\t)}\n\n\t\t\t{arenaforvalter.aap && (\n\t\t\t\t<Kategori title=\"AAP-vedtak UA - positivt utfall\">\n\t\t\t\t\t<FormikDatepicker name=\"arenaforvalter.aap[0].fraDato\" label=\"Fra dato\" />\n\t\t\t\t\t<FormikDatepicker name=\"arenaforvalter.aap[0].tilDato\" label=\"Til dato\" />\n\t\t\t\t</Kategori>\n\t\t\t)}\n\n\t\t\t{arenaforvalter.dagpenger && (\n\t\t\t\t<Kategori\n\t\t\t\t\thjelpetekst={'Foreløpig er kun ordinære dagpenger støttet'}\n\t\t\t\t\ttitle=\"Dagpengevedtak\"\n\t\t\t\t>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname=\"arenaforvalter.dagpenger[0].rettighetKode\"\n\t\t\t\t\t\toptions={Options('rettighetKode')}\n\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\tvalue={'DAGO'} // Endre disabled og denne når flere koder blir støttet\n\t\t\t\t\t\tlabel=\"Rettighetskode\"\n\t\t\t\t\t\tsize={'xlarge'}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker name=\"arenaforvalter.dagpenger[0].fraDato\" label=\"Fra dato\" />\n\t\t\t\t\t<FormikDatepicker name=\"arenaforvalter.dagpenger[0].tilDato\" label=\"Til dato\" />\n\t\t\t\t\t<FormikDatepicker name=\"arenaforvalter.dagpenger[0].mottattDato\" label=\"Mottatt dato\" />\n\t\t\t\t</Kategori>\n\t\t\t)}\n\t\t</React.Fragment>\n\t)\n}\n","import React from 'react'\nimport { AlertStripeAdvarsel } from 'nav-frontend-alertstriper'\n\nexport const AlertInntektskomponentenRequired = ({ vedtak }: { vedtak: string }) => {\n\treturn (\n\t\t<AlertStripeAdvarsel style={{ marginBottom: '20px' }}>\n\t\t\tPersonen må ha gyldig inntekt i A-ordningen for å kunne sette {vedtak}. Det kan du legge til\n\t\t\tved å gå tilbake til forrige side og huke av for A-ordningen (Inntektskomponenten) under\n\t\t\tArbeid og inntekt. For lettere utfylling anbefales bruk av forenklet versjon.\n\t\t</AlertStripeAdvarsel>\n\t)\n}\n","import * as Yup from 'yup'\nimport { messages, requiredDate, requiredString } from '~/utils/YupValidations'\nimport { isAfter, isBefore } from 'date-fns'\n\nconst ikkeOverlappendeVedtak = ['aap', 'dagpenger']\n\nconst datoIkkeMellom = (nyDatoFra, gjeldendeDatoFra, gjeldendeDatoTil) => {\n\tif (!gjeldendeDatoFra || !gjeldendeDatoTil) return true\n\treturn (\n\t\tisAfter(new Date(nyDatoFra), new Date(gjeldendeDatoTil)) ||\n\t\tisBefore(new Date(nyDatoFra), new Date(gjeldendeDatoFra))\n\t)\n}\n\nconst validTildato = (fradato, tildato) => {\n\tif (!fradato || !tildato) return true\n\treturn isAfter(new Date(tildato), new Date(fradato))\n}\n\nconst ingenOverlappFraTildato = (tildato, values) => {\n\tconst fraDato = values.arenaforvalter.dagpenger?.[0].fraDato\n\tconst aapFraDato = values.arenaforvalter.aap?.[0].fraDato\n\n\tif (tildato || !fraDato) return true\n\n\tif (isBefore(new Date(fraDato), new Date(aapFraDato))) return false\n\n\tif (values.tidligereBestillinger) {\n\t\tconst arenaBestillinger = values.tidligereBestillinger.filter(bestilling =>\n\t\t\tbestilling.data.hasOwnProperty('arenaforvalter')\n\t\t)\n\t\tfor (let bestilling of arenaBestillinger) {\n\t\t\tlet arenaInfo = bestilling.data.arenaforvalter\n\t\t\tfor (let key of ikkeOverlappendeVedtak) {\n\t\t\t\tif (arenaInfo[key].length > 0) {\n\t\t\t\t\tconst fraDatoBestilling = arenaInfo[key]?.[0].fraDato\n\t\t\t\t\tif (isBefore(new Date(fraDato), new Date(fraDatoBestilling))) return false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\n\nconst validFradato = vedtakType => {\n\treturn Yup.string()\n\t\t.test(\n\t\t\t'har-gjeldende-vedtak',\n\t\t\t'AAP- og Dagpenger-vedtak kan ikke overlappe hverandre',\n\t\t\tfunction validVedtak() {\n\t\t\t\tconst values = this.options.context\n\n\t\t\t\tconst naavaerendeVerdier = {}\n\t\t\t\tfor (let key of ikkeOverlappendeVedtak) {\n\t\t\t\t\tnaavaerendeVerdier[key] = {\n\t\t\t\t\t\tfraDato: values.arenaforvalter[key]?.[0].fraDato,\n\t\t\t\t\t\ttilDato: values.arenaforvalter[key]?.[0].tilDato\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Hvis det bare er en type vedtak trengs det ikke å sjekkes videre\n\t\t\t\tif (!naavaerendeVerdier.dagpenger.fraDato && !naavaerendeVerdier.aap.fraDato) return true\n\t\t\t\tif (values.tidligereBestillinger) {\n\t\t\t\t\treturn datoOverlapperIkkeAndreVedtak(\n\t\t\t\t\t\tvedtakType,\n\t\t\t\t\t\tnaavaerendeVerdier,\n\t\t\t\t\t\tvalues.tidligereBestillinger\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tlet annenVedtakType = vedtakType === 'aap' ? 'dagpenger' : 'aap'\n\n\t\t\t\t\treturn datoIkkeMellom(\n\t\t\t\t\t\tnaavaerendeVerdier[vedtakType].fraDato,\n\t\t\t\t\t\tnaavaerendeVerdier[annenVedtakType].fraDato,\n\t\t\t\t\t\tnaavaerendeVerdier[annenVedtakType].tilDato\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\t.nullable()\n\t\t.required(messages.required)\n}\n\nconst datoOverlapperIkkeAndreVedtak = (vedtaktype, naeverendeVerdier, tidligereBestillinger) => {\n\tconst nyDatoFra = naeverendeVerdier[vedtaktype].fraDato\n\tconst nyDatoTil = naeverendeVerdier[vedtaktype].tilDato\n\n\tconst arenaBestillinger = tidligereBestillinger.filter(bestilling =>\n\t\tbestilling.data.hasOwnProperty('arenaforvalter')\n\t)\n\n\tfor (const [key, value] of Object.entries(naeverendeVerdier)) {\n\t\tif (key !== vedtaktype && !datoIkkeMellom(nyDatoFra, value.fraDato, value.tilDato)) {\n\t\t\treturn false\n\t\t}\n\n\t\tfor (let bestilling of arenaBestillinger) {\n\t\t\tlet arenaInfo = bestilling.data.arenaforvalter\n\t\t\tif (\n\t\t\t\tkey in arenaInfo &&\n\t\t\t\tarenaInfo[key].length > 0 &&\n\t\t\t\toverlapperMedliste(nyDatoFra, nyDatoTil, arenaInfo[key])\n\t\t\t)\n\t\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nconst overlapperMedliste = (originalFradato, orginialTildato, vedtakListe) => {\n\tfor (let vedtak of vedtakListe) {\n\t\tconst fraDato = vedtak.fraDato\n\t\tconst tilDato = vedtak.tilDato\n\n\t\tif (\n\t\t\tfraDato &&\n\t\t\t(!datoIkkeMellom(originalFradato, fraDato, tilDato) ||\n\t\t\t\t!datoIkkeMellom(fraDato, originalFradato, orginialTildato))\n\t\t) {\n\t\t\treturn true\n\t\t}\n\t\tif (fraDato && !tilDato && isBefore(new Date(fraDato), new Date(originalFradato))) return true\n\t}\n\treturn false\n}\n\nexport const validation = Yup.object({\n\taap: Yup.array().of(\n\t\tYup.object({\n\t\t\tfraDato: validFradato('aap'),\n\t\t\ttilDato: Yup.string()\n\t\t\t\t.test('etter-fradato', 'Til-dato må være etter fra-dato', function validDate(tildato) {\n\t\t\t\t\tconst fradato = this.options.context.arenaforvalter.aap[0].fraDato\n\t\t\t\t\treturn validTildato(fradato, tildato)\n\t\t\t\t})\n\t\t\t\t.nullable()\n\t\t\t\t.required(messages.required)\n\t\t})\n\t),\n\taap115: Yup.array().of(\n\t\tYup.object({\n\t\t\tfraDato: requiredDate\n\t\t})\n\t),\n\tarenaBrukertype: requiredString,\n\tinaktiveringDato: Yup.mixed()\n\t\t.nullable()\n\t\t.when('arenaBrukertype', {\n\t\t\tis: 'UTEN_SERVICEBEHOV',\n\t\t\tthen: requiredDate\n\t\t}),\n\tautomatiskInnsendingAvMeldekort: Yup.boolean().nullable(),\n\tkvalifiseringsgruppe: Yup.string()\n\t\t.test('har-verdi', messages.required, function validKvalifiseringsgruppe(gruppe) {\n\t\t\tconst values = this.options.context\n\t\t\tif (values.arenaforvalter.arenaBrukertype === 'UTEN_SERVICEBEHOV') return true\n\t\t\tif (values.personFoerLeggTil && values.personFoerLeggTil.arenaforvalteren) return true\n\n\t\t\treturn gruppe\n\t\t})\n\t\t.nullable(),\n\tdagpenger: Yup.array().of(\n\t\tYup.object({\n\t\t\trettighetKode: Yup.string().required(messages.required),\n\t\t\tfraDato: validFradato('dagpenger'),\n\t\t\ttilDato: Yup.string()\n\t\t\t\t.test('etter-fradato', 'Til-dato må være etter fra-dato.', function validDate(tildato) {\n\t\t\t\t\tconst fradato = this.options.context.arenaforvalter.dagpenger[0].fraDato\n\t\t\t\t\treturn validTildato(fradato, tildato)\n\t\t\t\t})\n\t\t\t\t.test(\n\t\t\t\t\t'skaper-ikke-overlapp',\n\t\t\t\t\t'Manglende til-dato skaper overlapp med annet vedtak.',\n\t\t\t\t\tfunction validDate(tildato) {\n\t\t\t\t\t\treturn ingenOverlappFraTildato(tildato, this.options.context)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.nullable(),\n\t\t\tmottattDato: Yup.date().nullable()\n\t\t})\n\t)\n})\n","import React, { useContext, useEffect } from 'react'\nimport _get from 'lodash/get'\nimport { ifPresent } from '~/utils/YupValidations'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport Panel from '~/components/ui/panel/Panel'\nimport { erForste, panelError } from '~/components/ui/form/formUtils'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { MedServicebehov } from './partials/MedServicebehov'\nimport { AlertInntektskomponentenRequired } from '~/components/ui/brukerAlert/AlertInntektskomponentenRequired'\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper'\nimport { validation } from '~/components/fagsystem/arena/form/validation'\nimport { ArenaVisning } from '~/components/fagsystem/arena/visning/ArenaVisning'\nimport { BestillingsveilederContext } from '~/components/bestillingsveileder/Bestillingsveileder'\nimport { FormikCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\n\nconst arenaAttributt = 'arenaforvalter'\n\nexport const ArenaForm = ({ formikBag }) => {\n\tconst servicebehovAktiv =\n\t\t_get(formikBag, 'values.arenaforvalter.arenaBrukertype') === 'MED_SERVICEBEHOV'\n\tconst dagpengerAktiv = _get(formikBag, 'values.arenaforvalter.dagpenger[0]')\n\n\tconst opts = useContext(BestillingsveilederContext)\n\n\tconst { personFoerLeggTil, tidligereBestillinger } = opts\n\tconst uregistrert = !(personFoerLeggTil && personFoerLeggTil.arenaforvalteren)\n\n\tuseEffect(() => {\n\t\tservicebehovAktiv &&\n\t\t\t!_get(formikBag, 'values.arenaforvalter.kvalifiseringsgruppe') &&\n\t\t\tformikBag.setFieldValue('arenaforvalter.kvalifiseringsgruppe', null)\n\n\t\tservicebehovAktiv &&\n\t\t\t!uregistrert &&\n\t\t\tformikBag.setFieldValue('arenaforvalter.automatiskInnsendingAvMeldekort', null)\n\t}, [])\n\n\treturn (\n\t\t<Vis attributt={arenaAttributt}>\n\t\t\t<Panel\n\t\t\t\theading=\"Arbeidsytelser\"\n\t\t\t\thasErrors={panelError(formikBag, arenaAttributt)}\n\t\t\t\ticonType=\"arena\"\n\t\t\t\tstartOpen={() => erForste(formikBag.values, [arenaAttributt])}\n\t\t\t>\n\t\t\t\t{personFoerLeggTil && (\n\t\t\t\t\t<ArenaVisning\n\t\t\t\t\t\tdata={personFoerLeggTil.arenaforvalteren}\n\t\t\t\t\t\tbestillinger={tidligereBestillinger}\n\t\t\t\t\t\tuseStandard={false}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{dagpengerAktiv && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{!(\n\t\t\t\t\t\t\tformikBag.values.hasOwnProperty('inntektstub') ||\n\t\t\t\t\t\t\t(personFoerLeggTil && personFoerLeggTil.inntektstub)\n\t\t\t\t\t\t) && <AlertInntektskomponentenRequired vedtak={'dagpengevedtak'} />}\n\t\t\t\t\t\t<AlertStripeInfo style={{ marginBottom: '20px' }}>\n\t\t\t\t\t\t\tFor å kunne få gyldig dagpengevedtak må det være knyttet inntektsmelding for 12\n\t\t\t\t\t\t\tmåneder før vedtakets fra dato. Dette kan enkelt gjøres i innteksinformasjon ved å\n\t\t\t\t\t\t\tbenytte \"Generer antall måneder\" feltet.\n\t\t\t\t\t\t</AlertStripeInfo>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{!servicebehovAktiv && (\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname=\"arenaforvalter.inaktiveringDato\"\n\t\t\t\t\t\tlabel=\"Inaktiv fra dato\"\n\t\t\t\t\t\tdisabled={servicebehovAktiv}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{servicebehovAktiv && <MedServicebehov formikBag={formikBag} />}\n\t\t\t\t{(!servicebehovAktiv || uregistrert) && (\n\t\t\t\t\t<FormikCheckbox\n\t\t\t\t\t\tname=\"arenaforvalter.automatiskInnsendingAvMeldekort\"\n\t\t\t\t\t\tlabel=\"Automatisk innsending av meldekort\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Panel>\n\t\t</Vis>\n\t)\n}\n\nArenaForm.validation = {\n\tarenaforvalter: ifPresent('$arenaforvalter', validation)\n}\n","import * as Yup from 'yup'\nimport { requiredDate, requiredString } from '~/utils/YupValidations'\nimport _get from 'lodash/get'\n\nconst datoOverlapperIkkeAndreOppholdTest = (validation, validerStart) => {\n\tconst errorMsgAge =\n\t\t'Startdato må være før sluttdato og tidsrommet for et opphold kan ikke overlappe et annet.'\n\n\treturn validation.test('range', errorMsgAge, function isWithinTest(val) {\n\t\tif (!val && validerStart) return true\n\n\t\tconst selectedDate = new Date(val)\n\t\tconst path = this.path.split('[')[0]\n\t\tconst values = this.options.context\n\t\tconst arrayPos = parseInt(this.path.match(/\\d+/)[0])\n\t\tconst alleOpphold = _get(values, `${path}`)\n\n\t\tfor (let i = 0; i < alleOpphold.length; i++) {\n\t\t\tconst sluttDatoValue = _get(values, `${path}[${i}].sluttdato`)\n\t\t\tconst startDatoValue = _get(values, `${path}[${i}].startdato`)\n\t\t\tconst sluttDato = new Date(sluttDatoValue)\n\t\t\tconst startDato = new Date(startDatoValue)\n\n\t\t\tif (validerStart) {\n\t\t\t\tif (i === arrayPos) {\n\t\t\t\t\treturn !(sluttDatoValue !== '' && selectedDate >= sluttDato)\n\t\t\t\t} else {\n\t\t\t\t\tif (sluttDatoValue !== '') {\n\t\t\t\t\t\tif (selectedDate < sluttDato && selectedDate >= startDato) return false\n\t\t\t\t\t} else if (selectedDate >= startDato) return false\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst selectedStartValue = _get(values, `${path}[${arrayPos}].startdato`)\n\t\t\t\tif (!val) {\n\t\t\t\t\tif (i < arrayPos && selectedStartValue !== '') {\n\t\t\t\t\t\tif (sluttDatoValue === '') return false\n\t\t\t\t\t}\n\t\t\t\t} else if (i === arrayPos) {\n\t\t\t\t\treturn !(startDatoValue !== '' && selectedDate <= startDato)\n\t\t\t\t} else {\n\t\t\t\t\tif (sluttDatoValue !== '') {\n\t\t\t\t\t\tif (selectedDate <= sluttDato && selectedDate > startDato) return false\n\t\t\t\t\t\tif (selectedDate >= sluttDato && new Date(selectedStartValue) <= startDato) return false\n\t\t\t\t\t} else if (selectedDate > startDato) return false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t})\n}\n\nexport const validation = {\n\tinstdata: Yup.array().of(\n\t\tYup.object({\n\t\t\tinstitusjonstype: requiredString,\n\t\t\tstartdato: datoOverlapperIkkeAndreOppholdTest(requiredDate, true),\n\t\t\tsluttdato: datoOverlapperIkkeAndreOppholdTest(Yup.string().nullable(), false)\n\t\t})\n\t)\n}\n","import _isNil from 'lodash/isNil'\n\nconst getAllDatesBetween = (startdato, sluttdato) => {\n\tconst startDate = new Date(startdato)\n\tconst endDate = new Date(sluttdato)\n\n\tconst arr = []\n\tfor (let dt = new Date(startDate.toDateString()); dt <= endDate; dt.setDate(dt.getDate() + 1)) {\n\t\tarr.push(new Date(dt.toDateString()))\n\t}\n\treturn arr\n}\n\nexport const getExcludedDatesAndMaxDate = data => {\n\tlet maxDate = null\n\tlet excludeDates = []\n\tfor (let i = 0; i < data.instdata.length; i++) {\n\t\tconst startdato = data.instdata[i].startdato\n\t\tconst sluttdato = data.instdata[i].sluttdato\n\t\tlet days = []\n\n\t\tif (_isNil(sluttdato)) {\n\t\t\tconst start = new Date(startdato)\n\t\t\tmaxDate = start.setDate(start.getDate() - 1)\n\t\t} else {\n\t\t\tdays = getAllDatesBetween(new Date(startdato), new Date(sluttdato))\n\t\t\texcludeDates = excludeDates.concat(days)\n\t\t}\n\t}\n\n\treturn [excludeDates, maxDate]\n}\n","import React, { useContext } from 'react'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { panelError } from '~/components/ui/form/formUtils'\nimport { erForste } from '~/components/ui/form/formUtils'\nimport Panel from '~/components/ui/panel/Panel'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { validation } from '~/components/fagsystem/inst/form/validation'\nimport { BestillingsveilederContext } from '~/components/bestillingsveileder/Bestillingsveileder'\nimport { getExcludedDatesAndMaxDate } from './utils'\nimport { addYears } from 'date-fns'\n\nexport const initialValues = {\n\tinstitusjonstype: '',\n\tstartdato: '',\n\tsluttdato: ''\n}\nconst instAttributt = 'instdata'\n\nexport const InstForm = ({ formikBag }) => {\n\tconst opts = useContext(BestillingsveilederContext)\n\tconst { personFoerLeggTil } = opts\n\n\tlet excludeDates = []\n\tlet maxDate = addYears(new Date(), 5)\n\tif (opts.is.leggTil && personFoerLeggTil.instdata !== undefined) {\n\t\tconst dateInfo = getExcludedDatesAndMaxDate(personFoerLeggTil)\n\t\texcludeDates = dateInfo[0]\n\t\tmaxDate = dateInfo[1]\n\t}\n\n\treturn (\n\t\t<Vis attributt={instAttributt}>\n\t\t\t<Panel\n\t\t\t\theading=\"Institusjonsopphold\"\n\t\t\t\thasErrors={panelError(formikBag, instAttributt)}\n\t\t\t\ticonType=\"institusjon\"\n\t\t\t\tstartOpen={() => erForste(formikBag.values, [instAttributt])}\n\t\t\t>\n\t\t\t\t<FormikDollyFieldArray name=\"instdata\" header=\"Opphold\" newEntry={initialValues}>\n\t\t\t\t\t{(path, idx) => (\n\t\t\t\t\t\t<React.Fragment key={idx}>\n\t\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\t\tname={`${path}.institusjonstype`}\n\t\t\t\t\t\t\t\tlabel=\"Institusjonstype\"\n\t\t\t\t\t\t\t\toptions={Options('institusjonstype')}\n\t\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\t\tname={`${path}.startdato`}\n\t\t\t\t\t\t\t\tlabel=\"Startdato\"\n\t\t\t\t\t\t\t\texcludeDates={excludeDates}\n\t\t\t\t\t\t\t\tmaxDate={maxDate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\t\tname={`${path}.sluttdato`}\n\t\t\t\t\t\t\t\tlabel=\"Sluttdato\"\n\t\t\t\t\t\t\t\texcludeDates={excludeDates}\n\t\t\t\t\t\t\t\tmaxDate={maxDate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</FormikDollyFieldArray>\n\t\t\t</Panel>\n\t\t</Vis>\n\t)\n}\n\nInstForm.validation = validation\n","import * as Yup from 'yup'\nimport _isEmpty from 'lodash/isEmpty'\nimport { ifPresent, requiredBoolean, requiredString } from '~/utils/YupValidations'\n\nconst checkUndefined = value => {\n\tif (value !== undefined) {\n\t\treturn requiredString\n\t}\n\treturn Yup.mixed().notRequired()\n}\n\nconst aliaser = Yup.array().of(\n\tYup.object({\n\t\tnyIdent: requiredBoolean,\n\t\tidenttype: Yup.string()\n\t\t\t.when('nyIdent', {\n\t\t\t\tis: true,\n\t\t\t\tthen: requiredString\n\t\t\t})\n\t\t\t.nullable()\n\t})\n)\n\nconst arbeidsadgang = Yup.object({\n\tarbeidsOmfang: Yup.string().nullable(),\n\tharArbeidsAdgang: requiredString,\n\tperiode: Yup.object({\n\t\tfra: Yup.date().nullable(),\n\t\ttil: Yup.date().nullable()\n\t}),\n\ttypeArbeidsadgang: Yup.string().nullable(),\n\thjemmel: ifPresent(\n\t\t'$udistub.arbeidsadgang.hjemmel',\n\t\trequiredString.max(255, 'Hjemmel kan ikke være lenger enn 255 tegn').nullable()\n\t),\n\tforklaring: Yup.string()\n\t\t.max(4000)\n\t\t.nullable()\n})\n\nconst oppholdSammeVilkaar = Yup.object({\n\toppholdSammeVilkaarPeriode: Yup.object({\n\t\tfra: Yup.date().nullable(),\n\t\ttil: Yup.date().nullable()\n\t}),\n\toppholdSammeVilkaarEffektuering: Yup.date().nullable(),\n\toppholdstillatelseVedtaksDato: Yup.date().nullable(),\n\toppholdstillatelseType: Yup.string().nullable()\n})\n\nconst ikkeOppholdSammeVilkaar = Yup.object({\n\tavslagEllerBortfall: Yup.object({\n\t\tavgjorelsesDato: Yup.date().nullable()\n\t})\n})\n\nconst oppholdStatus = Yup.object()\n\t.shape({\n\t\teosEllerEFTABeslutningOmOppholdsrett: Yup.lazy(checkUndefined),\n\t\teosEllerEFTAVedtakOmVarigOppholdsrett: Yup.lazy(checkUndefined),\n\t\teosEllerEFTAOppholdstillatelse: Yup.lazy(checkUndefined),\n\t\tikkeOppholdSammeVilkaar: Yup.lazy(value => {\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn ikkeOppholdSammeVilkaar\n\t\t\t}\n\t\t\treturn Yup.mixed().notRequired()\n\t\t}),\n\t\toppholdSammeVilkaar: Yup.lazy(value => {\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn oppholdSammeVilkaar\n\t\t\t}\n\t\t\treturn Yup.mixed().notRequired()\n\t\t})\n\t})\n\t.nullable()\n\t// Sjekker om oppholdStatus er et tomt objekt. Objektet blir satt ved å fylle i feltene\n\t// 'Oppholdsstatus' og 'Type opphold', men disse er ikke en del av selve formet.\n\t.test('is-not-empty', function() {\n\t\tconst values = this.options.context\n\t\tif (_isEmpty(values.udistub.oppholdStatus)) {\n\t\t\treturn values.udistub.harOppholdsTillatelse === false\n\t\t}\n\t\treturn true\n\t})\n\nexport const validation = {\n\tudistub: ifPresent(\n\t\t'$udistub',\n\t\tYup.object({\n\t\t\taliaser: ifPresent('$udistub.aliaser', aliaser),\n\t\t\tarbeidsadgang: ifPresent('$udistub.arbeidsadgang', arbeidsadgang),\n\t\t\tflyktning: ifPresent('$udistub.flyktning', requiredBoolean).nullable(),\n\t\t\toppholdStatus: ifPresent('$udistub.oppholdStatus', oppholdStatus),\n\t\t\tsoeknadOmBeskyttelseUnderBehandling: ifPresent(\n\t\t\t\t'$udistub.soeknadOmBeskyttelseUnderBehandling',\n\t\t\t\trequiredString\n\t\t\t)\n\t\t})\n\t)\n}\n","import React from 'react'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\n\nexport const OppholdSammeVilkaar = () => (\n\t<React.Fragment>\n\t\t<FormikDatepicker\n\t\t\tname=\"udistub.oppholdStatus.oppholdSammeVilkaar.oppholdSammeVilkaarPeriode.fra\"\n\t\t\tlabel=\"Oppholdstillatelse fra dato\"\n\t\t/>\n\t\t<FormikDatepicker\n\t\t\tname=\"udistub.oppholdStatus.oppholdSammeVilkaar.oppholdSammeVilkaarPeriode.til\"\n\t\t\tlabel=\"Oppholdstillatelse til dato\"\n\t\t/>\n\t\t<FormikDatepicker\n\t\t\tname=\"udistub.oppholdStatus.oppholdSammeVilkaar.oppholdSammeVilkaarEffektuering\"\n\t\t\tlabel=\"Effektueringsdato\"\n\t\t/>\n\t\t<FormikSelect\n\t\t\tname=\"udistub.oppholdStatus.oppholdSammeVilkaar.oppholdstillatelseType\"\n\t\t\tlabel=\"Type oppholdstillatelse\"\n\t\t\toptions={Options('oppholdstillatelseType')}\n\t\t/>\n\t\t<FormikDatepicker\n\t\t\tname=\"udistub.oppholdStatus.oppholdSammeVilkaar.oppholdstillatelseVedtaksDato\"\n\t\t\tlabel=\"Vedtaksdato\"\n\t\t/>\n\t</React.Fragment>\n)\n","import React from 'react'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikProps } from 'formik'\n\ninterface Formik {\n\tformikBag: FormikProps<{}>\n}\n\n// @ts-ignore\nexport const IkkeOppholdSammeVilkaar = ({ formikBag }: Formik) => (\n\t<div className=\"flexbox--flex-wrap\">\n\t\t<Kategori title={'Avslag eller bortfall'}>\n\t\t\t<FormikDatepicker\n\t\t\t\tname={\n\t\t\t\t\t'udistub.oppholdStatus.ikkeOppholdstilatelseIkkeVilkaarIkkeVisum.avslagEllerBortfall.avgjorelsesDato'\n\t\t\t\t}\n\t\t\t\tlabel=\"Avgjørelsesdato\"\n\t\t\t/>\n\t\t</Kategori>\n\t</div>\n)\n","import React, { useState } from 'react'\nimport { DollySelect, FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { OppholdSammeVilkaar } from '~/components/fagsystem/udistub/form/partials/OppholdSammeVilkaar'\nimport { IkkeOppholdSammeVilkaar } from '~/components/fagsystem/udistub/form/partials/IkkeOppholdSammeVilkaar'\n\nconst findInitialStatus = formikBag => {\n\tconst oppholdsstatusObj = formikBag.values.udistub.oppholdStatus\n\tconst eosEllerEFTAOpphold = Object.keys(oppholdsstatusObj).some(key =>\n\t\tkey.includes('eosEllerEFTA')\n\t)\n\tif (eosEllerEFTAOpphold) {\n\t\tif (oppholdsstatusObj.eosEllerEFTABeslutningOmOppholdsrettPeriode)\n\t\t\treturn ['eosEllerEFTAOpphold', 'eosEllerEFTABeslutningOmOppholdsrett', '']\n\t\tif (oppholdsstatusObj.eosEllerEFTAVedtakOmVarigOppholdsrettPeriode)\n\t\t\treturn ['eosEllerEFTAOpphold', 'eosEllerEFTAVedtakOmVarigOppholdsrett', '']\n\t\tif (oppholdsstatusObj.eosEllerEFTAOppholdstillatelsePeriode)\n\t\t\treturn ['eosEllerEFTAOpphold', 'eosEllerEFTAOppholdstillatelse', '']\n\t}\n\tif (oppholdsstatusObj.oppholdSammeVilkaar)\n\t\treturn ['tredjelandsBorgere', '', 'oppholdSammeVilkaar']\n\tif (\n\t\toppholdsstatusObj.ikkeOppholdSammeVilkaar ||\n\t\tformikBag.values.udistub.harOppholdsTillatelse === false\n\t)\n\t\treturn ['tredjelandsBorgere', '', 'ikkeOppholdSammeVilkaar']\n\tif (oppholdsstatusObj.uavklart) return ['tredjelandsBorgere', '', 'UAVKLART']\n\treturn ['', '', '']\n}\n\nexport const Oppholdsstatus = ({ formikBag }) => {\n\tconst initialStatus = findInitialStatus(formikBag)\n\tconst [oppholdsstatus, setOppholdsstatus] = useState(initialStatus[0])\n\tconst [eosEllerEFTAtypeOpphold, setEosEllerEFTAtypeOpphold] = useState(initialStatus[1])\n\tconst [tredjelandsBorgereValg, setTredjelandsBorgereValg] = useState(initialStatus[2])\n\n\tconst basePath = 'udistub.oppholdStatus'\n\n\tconst endreOppholdsstatus = value => {\n\t\tsetOppholdsstatus(value)\n\t\tsetEosEllerEFTAtypeOpphold('')\n\t\tsetTredjelandsBorgereValg('')\n\t\tformikBag.setFieldValue(basePath, {})\n\t}\n\n\tconst endreEosEllerEFTAtypeOpphold = value => {\n\t\tsetEosEllerEFTAtypeOpphold(value)\n\t\tformikBag.setFieldValue(basePath, {})\n\t\tformikBag.setFieldValue(`udistub.oppholdStatus.${value}Periode`, {\n\t\t\tfra: null,\n\t\t\ttil: null\n\t\t})\n\t\tformikBag.setFieldValue(`udistub.oppholdStatus.${value}Effektuering`, null)\n\t\tformikBag.setFieldValue(`udistub.oppholdStatus.${value}`, '')\n\t}\n\n\tconst endreTredjelandsBorgereValg = value => {\n\t\tsetTredjelandsBorgereValg(value)\n\t\tformikBag.setFieldValue(basePath, {})\n\t\tif (value === 'oppholdSammeVilkaar') {\n\t\t\tformikBag.setFieldValue('udistub.harOppholdsTillatelse', true)\n\t\t\tformikBag.setFieldValue('udistub.oppholdStatus.oppholdSammeVilkaar', {\n\t\t\t\toppholdSammeVilkaarPeriode: { fra: null, til: null },\n\t\t\t\toppholdSammeVilkaarEffektuering: null,\n\t\t\t\toppholdstillatelseVedtaksDato: null,\n\t\t\t\toppholdstillatelseType: ''\n\t\t\t})\n\t\t} else if (value === 'ikkeOppholdSammeVilkaar') {\n\t\t\tformikBag.setFieldValue(basePath, {})\n\t\t\tformikBag.setFieldValue('udistub.harOppholdsTillatelse', false)\n\t\t\tformikBag.setFieldValue('udistub.oppholdStatus.ikkeOppholdstilatelseIkkeVilkaarIkkeVisum', {\n\t\t\t\tavslagEllerBortfall: {\n\t\t\t\t\tavgjorelsesDato: null\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (value === 'UAVKLART') {\n\t\t\tformikBag.setFieldValue(basePath, { uavklart: true })\n\t\t\tformikBag.setFieldValue('udistub.harOppholdsTillatelse', undefined)\n\t\t}\n\t}\n\n\tconst feilmelding = felt => {\n\t\tif (!felt) {\n\t\t\treturn { feilmelding: 'Feltet er påkrevd' }\n\t\t}\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<DollySelect\n\t\t\t\tname=\"oppholdsstatus\"\n\t\t\t\tlabel=\"Innenfor eller utenfor EØS\"\n\t\t\t\tvalue={oppholdsstatus}\n\t\t\t\toptions={Options('oppholdsstatus')}\n\t\t\t\tonChange={v => endreOppholdsstatus(v.value)}\n\t\t\t\tfeil={feilmelding(oppholdsstatus)}\n\t\t\t\tisClearable={false}\n\t\t\t/>\n\t\t\t{oppholdsstatus === 'eosEllerEFTAOpphold' && (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<DollySelect\n\t\t\t\t\t\tname=\"eosEllerEFTAtypeOpphold\"\n\t\t\t\t\t\tlabel=\"Type opphold\"\n\t\t\t\t\t\tvalue={eosEllerEFTAtypeOpphold}\n\t\t\t\t\t\toptions={Options('eosEllerEFTAtypeOpphold')}\n\t\t\t\t\t\tonChange={v => endreEosEllerEFTAtypeOpphold(v.value)}\n\t\t\t\t\t\tsize=\"xxlarge\"\n\t\t\t\t\t\tfeil={feilmelding(eosEllerEFTAtypeOpphold)}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`udistub.oppholdStatus.${eosEllerEFTAtypeOpphold}Periode.fra`}\n\t\t\t\t\t\tlabel=\"Oppholdstillatelse fra dato\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`udistub.oppholdStatus.${eosEllerEFTAtypeOpphold}Periode.til`}\n\t\t\t\t\t\tlabel=\"Oppholdstillatelse til dato\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\tname={`udistub.oppholdStatus.${eosEllerEFTAtypeOpphold}Effektuering`}\n\t\t\t\t\t\tlabel=\"Effektueringsdato\"\n\t\t\t\t\t/>\n\t\t\t\t\t{eosEllerEFTAtypeOpphold && (\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`udistub.oppholdStatus.${eosEllerEFTAtypeOpphold}`}\n\t\t\t\t\t\t\tlabel=\"Grunnlag for opphold\"\n\t\t\t\t\t\t\toptions={Options(eosEllerEFTAtypeOpphold)}\n\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t\t{oppholdsstatus === 'tredjelandsBorgere' && (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<DollySelect\n\t\t\t\t\t\tname=\"tredjelandsBorgereValg\"\n\t\t\t\t\t\tlabel=\"Status\"\n\t\t\t\t\t\tvalue={tredjelandsBorgereValg}\n\t\t\t\t\t\tsize=\"xxlarge\"\n\t\t\t\t\t\toptions={Options('tredjelandsBorgereValg')}\n\t\t\t\t\t\tonChange={v => endreTredjelandsBorgereValg(v.value)}\n\t\t\t\t\t\tfeil={feilmelding(tredjelandsBorgereValg)}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t\t{tredjelandsBorgereValg === 'oppholdSammeVilkaar' && <OppholdSammeVilkaar />}\n\t\t\t\t\t{tredjelandsBorgereValg === 'ikkeOppholdSammeVilkaar' && (\n\t\t\t\t\t\t<IkkeOppholdSammeVilkaar formikBag={formikBag} />\n\t\t\t\t\t)}\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</React.Fragment>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { Textarea } from 'nav-frontend-skjema'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\n\nexport const Arbeidsadgang = ({ formikBag }) => {\n\tconst harArbeidsAdgang = _get(formikBag.values, 'udistub.arbeidsadgang.harArbeidsAdgang')\n\n\tconst endreArbeidsadgang = v => {\n\t\tformikBag.setFieldValue('udistub.arbeidsadgang.harArbeidsAdgang', v.value)\n\t\tif (v.value !== 'JA') {\n\t\t\tformikBag.setFieldValue('udistub.arbeidsadgang.arbeidsOmfang', null)\n\t\t\tformikBag.setFieldValue('udistub.arbeidsadgang.periode', {\n\t\t\t\tfra: null,\n\t\t\t\ttil: null\n\t\t\t})\n\t\t\tformikBag.setFieldValue('udistub.arbeidsadgang.typeArbeidsadgang', null)\n\t\t}\n\t}\n\n\tconst forklaring = _get(formikBag.values, 'udistub.arbeidsadgang.forklaring')\n\n\tconst endreForklaring = text => {\n\t\tformikBag.setFieldValue('udistub.arbeidsadgang.forklaring', text === '' ? null : text)\n\t}\n\n\tconst MAX_LENGTH = 4000\n\n\treturn (\n\t\t<>\n\t\t\t<Kategori title=\"Arbeidsadgang\" vis=\"udistub.arbeidsadgang\">\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"udistub.arbeidsadgang.harArbeidsAdgang\"\n\t\t\t\t\tlabel=\"Har arbeidsadgang\"\n\t\t\t\t\toptions={Options('jaNeiUavklart')}\n\t\t\t\t\tvalue={harArbeidsAdgang}\n\t\t\t\t\tonChange={endreArbeidsadgang}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t\t{harArbeidsAdgang === 'JA' && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname=\"udistub.arbeidsadgang.typeArbeidsadgang\"\n\t\t\t\t\t\t\tlabel=\"Type arbeidsadgang\"\n\t\t\t\t\t\t\toptions={Options('typeArbeidsadgang')}\n\t\t\t\t\t\t\tsize=\"xxlarge\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname=\"udistub.arbeidsadgang.arbeidsOmfang\"\n\t\t\t\t\t\t\tlabel=\"Arbeidsomfang\"\n\t\t\t\t\t\t\toptions={Options('arbeidsOmfang')}\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\tname=\"udistub.arbeidsadgang.periode.fra\"\n\t\t\t\t\t\t\tlabel=\"Arbeidsadgang fra dato\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikDatepicker\n\t\t\t\t\t\t\tname=\"udistub.arbeidsadgang.periode.til\"\n\t\t\t\t\t\t\tlabel=\"Arbeidsadgang til dato\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</Kategori>\n\t\t\t<Kategori title=\"Innhent vedtakshjemmel\" vis=\"udistub.arbeidsadgang.hjemmel\">\n\t\t\t\t<FormikTextInput name=\"udistub.arbeidsadgang.hjemmel\" label=\"Hjemmel\" size=\"xxlarge\" />\n\t\t\t\t<div className=\"flexbox--full-width\">\n\t\t\t\t\t<Textarea\n\t\t\t\t\t\tvalue={forklaring ? forklaring : ''}\n\t\t\t\t\t\tname=\"udistub.arbeidsadgang.forklaring\"\n\t\t\t\t\t\tlabel=\"Forklaring\"\n\t\t\t\t\t\tplaceholder=\"Skriv inn forklaring\"\n\t\t\t\t\t\tmaxLength={MAX_LENGTH}\n\t\t\t\t\t\tonChange={event => endreForklaring(event.target.value)}\n\t\t\t\t\t\tfeil={\n\t\t\t\t\t\t\tforklaring && forklaring.length > MAX_LENGTH\n\t\t\t\t\t\t\t\t? { feilmelding: 'Forklaring kan ikke være lenger enn 4000 tegn' }\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Kategori>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\n\nconst initialValues = {\n\tidenttype: null,\n\tnyIdent: false\n}\n\nexport const Alias = ({ formikBag }) => (\n\t<FormikDollyFieldArray name=\"udistub.aliaser\" header=\"Alias\" newEntry={initialValues}>\n\t\t{(path, idx, curr) => (\n\t\t\t<React.Fragment key={idx}>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.nyIdent`}\n\t\t\t\t\tlabel=\"Type alias\"\n\t\t\t\t\toptions={Options('nyIdent')}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t/>\n\t\t\t\t{curr.nyIdent && (\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.identtype`}\n\t\t\t\t\t\tlabel=\"Identtype\"\n\t\t\t\t\t\toptions={Options('identtypeUtenBost')}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t)}\n\t</FormikDollyFieldArray>\n)\n","import React from 'react'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\n\nexport const Annet = ({ formikBag }) => (\n\t<Kategori\n\t\ttitle=\"Annet\"\n\t\tvis={['udistub.flyktning', 'udistub.soeknadOmBeskyttelseUnderBehandling']}\n\t>\n\t\t<Vis attributt=\"udistub.flyktning\">\n\t\t\t<FormikSelect\n\t\t\t\tname=\"udistub.flyktning\"\n\t\t\t\tlabel=\"Flyktningstatus\"\n\t\t\t\toptions={Options('boolean')}\n\t\t\t\tisClearable={false}\n\t\t\t/>\n\t\t</Vis>\n\t\t<Vis attributt=\"udistub.soeknadOmBeskyttelseUnderBehandling\">\n\t\t\t<FormikSelect\n\t\t\t\tname=\"udistub.soeknadOmBeskyttelseUnderBehandling\"\n\t\t\t\tlabel=\"Asylsøker\"\n\t\t\t\toptions={Options('jaNeiUavklart')}\n\t\t\t\tisClearable={false}\n\t\t\t/>\n\t\t</Vis>\n\t</Kategori>\n)\n","import React from 'react'\nimport _isEmpty from 'lodash/isEmpty'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport Panel from '~/components/ui/panel/Panel'\nimport { panelError } from '~/components/ui/form/formUtils'\nimport { erForste } from '~/components/ui/form/formUtils'\nimport { validation } from './validation'\nimport { Oppholdsstatus } from './partials/Oppholdsstatus'\nimport { Arbeidsadgang } from './partials/Arbeidsadgang'\nimport { Alias } from './partials/Alias'\nimport { Annet } from './partials/Annet'\n\nconst attrPaths = [\n\t'udistub.oppholdStatus',\n\t'udistub.arbeidsadgang',\n\t'udistub.aliaser',\n\t'udistub.flyktning',\n\t'udistub.soeknadOmBeskyttelseUnderBehandling'\n]\n\nconst udiAttributt = 'udistub'\n\nexport const UdistubForm = ({ formikBag }) => (\n\t<Vis attributt={attrPaths}>\n\t\t<Panel\n\t\t\theading=\"UDI\"\n\t\t\thasErrors={panelError(formikBag, attrPaths)}\n\t\t\ticonType=\"udi\"\n\t\t\tstartOpen={() => erForste(formikBag.values, [udiAttributt])}\n\t\t>\n\t\t\t<Kategori title=\"Gjeldende oppholdsstatus\" vis=\"udistub.oppholdStatus\">\n\t\t\t\t<Oppholdsstatus formikBag={formikBag} />\n\t\t\t</Kategori>\n\t\t\t<Arbeidsadgang formikBag={formikBag} />\n\t\t\t<Kategori title=\"Alias\" vis=\"udistub.aliaser\" flex={false}>\n\t\t\t\t<Alias formikBag={formikBag} />\n\t\t\t</Kategori>\n\t\t\t<Annet formikBag={formikBag} />\n\t\t</Panel>\n\t</Vis>\n)\n\nUdistubForm.validation = validation\n","import * as Yup from 'yup'\nimport _get from 'lodash/get'\nimport _isNil from 'lodash/isNil'\nimport { requiredNumber, ifPresent } from '~/utils/YupValidations'\n\nfunction calculate_age(dob) {\n\tconst diff_ms = Date.now() - dob.getTime()\n\tconst age_dt = new Date(diff_ms)\n\n\treturn Math.abs(age_dt.getUTCFullYear() - 1970)\n}\n\nconst innenforInntektsperiodeTest = (validation, validateFomBasedOnAge, validateBasedOnDeath) => {\n\tconst errorMsgAge =\n\t\t'F.o.m. dato må være før t.o.m. dato, og kan tidligst være året personen fyller 18.'\n\tconst errorMsgDeath =\n\t\t'T.o.m. dato kan ikke være før f.o.m. dato, og kan ikke være etter at personen har dødd.'\n\treturn validation.test(\n\t\t'range',\n\t\tvalidateFomBasedOnAge ? errorMsgAge : errorMsgDeath,\n\t\tfunction isWithinTest(val) {\n\t\t\tif (!val) return true\n\n\t\t\tconst dateValue = val\n\t\t\tconst path = this.path.substring(0, this.path.lastIndexOf('.'))\n\t\t\tconst values = this.options.context\n\n\t\t\tif (validateFomBasedOnAge) {\n\t\t\t\tconst inntektFom = val\n\t\t\t\tlet alder = _get(values, 'tpsf.alder')\n\t\t\t\tif (values.personFoerLeggTil) {\n\t\t\t\t\talder = calculate_age(new Date(values.personFoerLeggTil.tpsf.foedselsdato))\n\t\t\t\t}\n\n\t\t\t\tconst foedtFoer = new Date(_get(values, 'tpsf.foedtFoer'))\n\t\t\t\tconst foedtEtter = new Date(_get(values, 'tpsf.foedtEtter'))\n\n\t\t\t\tif (!_isNil(alder)) {\n\t\t\t\t\tif (new Date().getFullYear() - alder + 18 > inntektFom) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t} else if (!_isNil(foedtFoer)) {\n\t\t\t\t\tconst day = foedtFoer.getDate()\n\t\t\t\t\tconst month = foedtFoer.getMonth()\n\t\t\t\t\tlet year = foedtFoer.getFullYear()\n\n\t\t\t\t\tyear = day === 1 && month === 0 ? year - 1 : year\n\n\t\t\t\t\tif (year + 18 > inntektFom) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t} else if (!_isNil(foedtEtter) && _isNil(foedtFoer)) {\n\t\t\t\t\tif (foedtEtter.getFullYear() + 18 > inntektFom) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (new Date().getFullYear() - 12 > inntektFom) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (validateBasedOnDeath) {\n\t\t\t\tconst inntektTom = val\n\n\t\t\t\tlet doedsdato = _get(values, 'tpsf.doedsdato')\n\n\t\t\t\tif (values.personFoerLeggTil && values.personFoerLeggTil.tpsf.doedsdato) {\n\t\t\t\t\tdoedsdato = values.personFoerLeggTil.tpsf.doedsdato\n\t\t\t\t}\n\n\t\t\t\tif (!_isNil(doedsdato)) {\n\t\t\t\t\tconst year = new Date(doedsdato).getFullYear()\n\t\t\t\t\tif (year < inntektTom) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst inntektFom = _get(values, `${path}.fomAar`)\n\t\t\tconst inntektTom = _get(values, `${path}.tomAar`)\n\n\t\t\treturn (\n\t\t\t\tdateValue >= inntektFom &&\n\t\t\t\tdateValue <= (_isNil(inntektTom) ? new Date().getFullYear() : inntektTom)\n\t\t\t)\n\t\t}\n\t)\n}\n\nexport const validation = {\n\tpensjonforvalter: ifPresent(\n\t\t'$pensjonforvalter',\n\t\tYup.object({\n\t\t\tinntekt: Yup.object({\n\t\t\t\tfomAar: innenforInntektsperiodeTest(requiredNumber, true, false),\n\t\t\t\ttomAar: innenforInntektsperiodeTest(requiredNumber, false, true).typeError(\n\t\t\t\t\t'Velg et gyldig år'\n\t\t\t\t),\n\t\t\t\tbelop: Yup.number()\n\t\t\t\t\t.min(0, 'Tast inn et gyldig beløp')\n\n\t\t\t\t\t.typeError('Tast inn et gyldig beløp'),\n\t\t\t\tredusertMedGrunnbelop: Yup.boolean()\n\t\t\t})\n\t\t})\n\t)\n}\n","import React from 'react'\n\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport Panel from '~/components/ui/panel/Panel'\nimport { panelError } from '~/components/ui/form/formUtils'\nimport { erForste } from '~/components/ui/form/formUtils'\nimport { validation } from '~/components/fagsystem/pensjon/form/validation'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport Formatters from '~/utils/DataFormatter'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\n\nconst pensjonAttributt = 'pensjonforvalter'\nconst path = `${pensjonAttributt}.inntekt`\n\nconst hjelpetekst =\n\t'Hvis nedjuster med grunnbeløp er valgt skal beløp angis som årsbeløp i dagens kroneverdi, ' +\n\t'og vil nedjusteres basert på snitt grunnbeløp i inntektsåret.'\n\nexport const PensjonForm = ({ formikBag }) => (\n\t<Vis attributt={pensjonAttributt}>\n\t\t<Panel\n\t\t\theading=\"Pensjonsgivende inntekt (POPP)\"\n\t\t\thasErrors={panelError(formikBag, pensjonAttributt)}\n\t\t\ticonType=\"pensjon\"\n\t\t\tstartOpen={() => erForste(formikBag.values, [pensjonAttributt])}\n\t\t\tinformasjonstekst={hjelpetekst}\n\t\t>\n\t\t\t<Kategori title=\"Pensjonsgivende inntekt\" vis={path}>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.fomAar`}\n\t\t\t\t\t\tlabel=\"Fra og med år\"\n\t\t\t\t\t\toptions={Formatters.getYearRangeOptions(1968, new Date().getFullYear() - 1)}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.tomAar`}\n\t\t\t\t\t\tlabel=\"Til og med år\"\n\t\t\t\t\t\toptions={Formatters.getYearRangeOptions(1968, new Date().getFullYear() - 1)}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormikTextInput name={`${path}.belop`} label=\"Beløp\" type=\"number\" fastfield={false} />\n\n\t\t\t\t\t<FormikCheckbox\n\t\t\t\t\t\tname={`${path}.redusertMedGrunnbelop`}\n\t\t\t\t\t\tlabel=\"Nedjuster med grunnbeløp\"\n\t\t\t\t\t\tcheckboxMargin\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t</Kategori>\n\t\t</Panel>\n\t</Vis>\n)\n\nPensjonForm.validation = validation\n","import React, { useEffect, useState } from 'react'\nimport * as Yup from 'yup'\nimport { ifPresent, requiredString } from '~/utils/YupValidations'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport Panel from '~/components/ui/panel/Panel'\nimport { erForste, panelError } from '~/components/ui/form/formUtils'\nimport { FormikProps } from 'formik'\nimport FileUpload from 'filopplasting'\nimport { Label } from '~/components/ui/form/inputs/label/Label'\nimport { pdfjs } from 'react-pdf'\n// @ts-ignore\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry'\nimport styled from 'styled-components'\nimport { isAfter } from 'date-fns'\nimport _get from 'lodash/get'\n\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker\n\ninterface Form {\n\tformikBag: FormikProps<{}>\n}\n\ntype Skjema = {\n\tdata: string\n\tlabel: string\n\tlowercaseLabel: string\n\tvalue: string\n}\n\ntype Vedlegg = {\n\tid: string\n\tname: string\n\tcontent: {\n\t\tbase64: string\n\t}\n}\n\nconst FilOpplaster = styled(FileUpload)`\n\tbackground-color: unset;\n\n\t&:hover {\n\t\tbackground-color: #f1f1f1;\n\t}\n`\n\nenum Kodeverk {\n\tTEMA = 'Tema',\n\tNAVSKJEMA = 'NAVSkjema'\n}\n\nconst dokarkivAttributt = 'dokarkiv'\n\nexport const DokarkivForm = ({ formikBag }: Form) => {\n\tconst gjeldendeFiler = JSON.parse(sessionStorage.getItem('dokarkiv_vedlegg'))\n\tconst [files, setFiles] = useState(gjeldendeFiler ? gjeldendeFiler : [])\n\tconst [skjemaValues, setSkjemaValues] = useState(null)\n\n\tuseEffect(() => handleSkjemaChange(skjemaValues), [files, skjemaValues])\n\n\tconst handleSkjemaChange = (skjema: Skjema) => {\n\t\tif (!skjema) {\n\t\t\treturn\n\t\t}\n\t\tsetSkjemaValues(skjema)\n\t\tformikBag.setFieldValue('dokarkiv.tittel', skjema.data)\n\t\tconst dokumentVarianter = files.map((vedl, index) => ({\n\t\t\ttittel: vedl.name,\n\t\t\tbrevkode: (index === 0 && skjema?.value) || undefined,\n\t\t\tdokumentvarianter: [\n\t\t\t\t{\n\t\t\t\t\tfiltype: 'PDFA',\n\t\t\t\t\tfysiskDokument: vedl.content.base64,\n\t\t\t\t\tvariantformat: 'ARKIV'\n\t\t\t\t}\n\t\t\t]\n\t\t}))\n\t\tdokumentVarianter.length > 0\n\t\t\t? formikBag.setFieldValue('dokarkiv.dokumenter', dokumentVarianter)\n\t\t\t: formikBag.setFieldValue('dokarkiv.dokumenter[0].tittel', skjema.data)\n\t}\n\n\tconst handleVedleggChange = (filer: [Vedlegg]) => {\n\t\tsetFiles(filer)\n\t\tsessionStorage.setItem('dokarkiv_vedlegg', JSON.stringify(filer))\n\t}\n\n\treturn (\n\t\t// @ts-ignore\n\t\t<Vis attributt={dokarkivAttributt}>\n\t\t\t<Panel\n\t\t\t\theading=\"Dokumenter\"\n\t\t\t\thasErrors={panelError(formikBag, dokarkivAttributt)}\n\t\t\t\ticonType=\"dokarkiv\"\n\t\t\t\t// @ts-ignore\n\t\t\t\tstartOpen={() => erForste(formikBag.values, [dokarkivAttributt])}\n\t\t\t>\n\t\t\t\t<Kategori title=\"Oppretting av skannet dokument\" vis={dokarkivAttributt}>\n\t\t\t\t\t<div className=\"flexbox--full-width\">\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname=\"dokarkiv.dokumenter[0].brevkode\"\n\t\t\t\t\t\t\tlabel=\"Skjema\"\n\t\t\t\t\t\t\tafterChange={handleSkjemaChange}\n\t\t\t\t\t\t\tkodeverk={Kodeverk.NAVSKJEMA}\n\t\t\t\t\t\t\tsize=\"grow\"\n\t\t\t\t\t\t\toptionHeight={50}\n\t\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname=\"dokarkiv.tema\"\n\t\t\t\t\t\tlabel=\"Tema\"\n\t\t\t\t\t\tkodeverk={Kodeverk.TEMA}\n\t\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormikTextInput name=\"dokarkiv.journalfoerendeEnhet\" label=\"Journalførende enhet\" />\n\t\t\t\t\t<Label\n\t\t\t\t\t\tlabel={'Vedlegg'}\n\t\t\t\t\t\tname={'Vedlegg'}\n\t\t\t\t\t\tcontainerClass={'flexbox--full-width'}\n\t\t\t\t\t\tfeil={null}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FilOpplaster\n\t\t\t\t\t\t\tclassName={'flexbox--full-width'}\n\t\t\t\t\t\t\tacceptedMimetypes={['application/pdf']}\n\t\t\t\t\t\t\tfiles={files}\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tonFilesChanged={handleVedleggChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Label>\n\t\t\t\t</Kategori>\n\t\t\t</Panel>\n\t\t</Vis>\n\t)\n}\n\nDokarkivForm.validation = {\n\tdokarkiv: ifPresent(\n\t\t'$dokarkiv',\n\t\tYup.object({\n\t\t\ttittel: requiredString,\n\t\t\ttema: requiredString,\n\t\t\tjournalfoerendeEnhet: Yup.string(),\n\t\t\tdokumenter: Yup.array().of(\n\t\t\t\tYup.object({\n\t\t\t\t\ttittel: requiredString,\n\t\t\t\t\tbrevkode: Yup.string().test(\n\t\t\t\t\t\t'is-valid-brevkode',\n\t\t\t\t\t\t'Feltet er påkrevd',\n\t\t\t\t\t\tfunction validBrevkode() {\n\t\t\t\t\t\t\tconst values = this.options.context\n\t\t\t\t\t\t\tconst brevkode = _get(values, 'dokarkiv.dokumenter[0].brevkode')\n\t\t\t\t\t\t\treturn brevkode !== ''\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t)\n\t\t})\n\t)\n}\n","import React from 'react'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { OrganisasjonMedArbeidsforholdSelect } from '~/components/organisasjonSelect'\nimport Hjelpetekst from '~/components/hjelpetekst'\n\nexport const SyntSykemelding = () => {\n\treturn (\n\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t<FormikDatepicker name=\"sykemelding.syntSykemelding.startDato\" label=\"Startdato\" />\n\t\t\t<FormikTextInput\n\t\t\t\tname=\"sykemelding.syntSykemelding.arbeidsforholdId\"\n\t\t\t\tlabel=\"Arbeidsforhold-ID\"\n\t\t\t\ttype=\"number\"\n\t\t\t/>\n\t\t\t<div style={{ marginLeft: '-20px', paddingTop: '27px' }}>\n\t\t\t\t<Hjelpetekst hjelpetekstFor=\"Arbeidsforhold-ID\">\n\t\t\t\t\tNummeret på arbeidsforholdet du ønsker å knytte sykemeldingen til. Når du har opprettet\n\t\t\t\t\tarbeidsforhold i bestillingen ser du disse som en nummerert liste i\n\t\t\t\t\tArbeidsforhold-panelet. <br />\n\t\t\t\t\t<br />\n\t\t\t\t\tLa feltet være blankt for å bruke første gyldige arbeidsforhold\n\t\t\t\t</Hjelpetekst>\n\t\t\t</div>\n\t\t\t<OrganisasjonMedArbeidsforholdSelect\n\t\t\t\tpath=\"sykemelding.syntSykemelding.orgnummer\"\n\t\t\t\tlabel=\"Organisasjonsnummer\"\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","export const Diagnoser = {\n\tICPC2: [\n\t\t{ code: 'A01', text: 'Smerte generell/flere steder' },\n\t\t{ code: 'A02', text: 'Frysninger' },\n\t\t{ code: 'A03', text: 'Feber' },\n\t\t{ code: 'A04', text: 'Slapphet/tretthet' },\n\t\t{ code: 'A05', text: 'Sykdomsfølelse' },\n\t\t{ code: 'A06', text: 'Besvimelse/synkope' },\n\t\t{ code: 'A07', text: 'Bevisstløshet/koma' },\n\t\t{ code: 'A08', text: 'Hevelse/oppfylning IKA' },\n\t\t{ code: 'A09', text: 'Svetteproblemer' },\n\t\t{ code: 'A10', text: 'Blødning IKA' },\n\t\t{ code: 'A11', text: 'Brystsmerte IKA' },\n\t\t{ code: 'A13', text: 'Engstelig for behandling' },\n\t\t{ code: 'A16', text: 'Irritabelt/urolig spedbarn' },\n\t\t{ code: 'A18', text: 'Bekymret/opptatt av utseende IKA' },\n\t\t{ code: 'A20', text: 'Dødshjelp diskusjon/spørsmål om' },\n\t\t{ code: 'A21', text: 'Økt risiko for ondartet svulst' },\n\t\t{ code: 'A23', text: 'Risiko for sykdom IKA' },\n\t\t{ code: 'A25', text: 'Engstelig for døden' },\n\t\t{ code: 'A26', text: 'Engstelig for kreft IKA' },\n\t\t{ code: 'A27', text: 'Engstelig for sykdom IKA' },\n\t\t{ code: 'A28', text: 'Redusert funksjonsevne IKA' },\n\t\t{ code: 'A29', text: 'Generelle symptomer/plager IKA' },\n\t\t{ code: 'A30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'A31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'A32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'A33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'A34', text: 'Blodprøve IKA' },\n\t\t{ code: 'A35', text: 'Urinprøve IKA' },\n\t\t{ code: 'A36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'A37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'A38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'A39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'A40', text: 'Endoskopi' },\n\t\t{ code: 'A41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'A42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'A43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'A44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'A45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'A46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'A47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'A48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'A49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'A50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'A51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'A52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'A53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'A54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'A55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'A56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'A57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'A58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'A59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'A60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'A61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'A62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'A63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'A64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'A65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'A66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'A67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'A68', text: 'Henvisning IKA' },\n\t\t{ code: 'A69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'A70', text: 'Tuberkulose' },\n\t\t{ code: 'A71', text: 'Meslinger' },\n\t\t{ code: 'A72', text: 'Vannkopper' },\n\t\t{ code: 'A73', text: 'Malaria' },\n\t\t{ code: 'A74', text: 'Røde hunder' },\n\t\t{ code: 'A75', text: 'Mononukleose' },\n\t\t{ code: 'A76', text: 'Virussykdom med utslett IKA' },\n\t\t{ code: 'A77', text: 'Virussykdom IKA' },\n\t\t{ code: 'A78', text: 'Infeksjonssykdom IKA' },\n\t\t{ code: 'A79', text: 'Ondartet svulst IKA' },\n\t\t{ code: 'A80', text: 'Skade/traume IKA' },\n\t\t{ code: 'A81', text: 'Multiple skader/traumer' },\n\t\t{ code: 'A82', text: 'Følgetilstand skade/traume' },\n\t\t{ code: 'A84', text: 'Legemiddelforgiftning' },\n\t\t{ code: 'A85', text: 'Bivirkning legemiddel' },\n\t\t{ code: 'A86', text: 'Toksisk virkning stoff IKA' },\n\t\t{ code: 'A87', text: 'Komplikasjon etter behandling' },\n\t\t{ code: 'A88', text: 'Skadevirkning av fysisk faktor' },\n\t\t{ code: 'A89', text: 'Komplikasjoner/problemer med protese' },\n\t\t{ code: 'A90', text: 'Medfødt feil IKA/multiple feil' },\n\t\t{ code: 'A91', text: 'Unormalt funn ved undersøkelse IKA' },\n\t\t{ code: 'A92', text: 'Allergi/allergisk reaksjon IKA' },\n\t\t{ code: 'A93', text: 'Prematurt/immaturt levendefødt barn' },\n\t\t{ code: 'A94', text: 'Perinatal sykelighet IKA' },\n\t\t{ code: 'A95', text: 'Perinatal død' },\n\t\t{ code: 'A96', text: 'Død/dødsfall IKA' },\n\t\t{ code: 'A97', text: 'Administrativ kontakt/undersøkelse' },\n\t\t{ code: 'A98', text: 'Individforebyggende tiltak' },\n\t\t{ code: 'A981', text: 'Cytologi livmorhals screening' },\n\t\t{ code: 'A99', text: 'Helseproblem/sykdom IKA' },\n\t\t{ code: 'B02', text: 'Lymfeknuter forstørrede/smertefulle' },\n\t\t{ code: 'B04', text: 'Blod/blodsystemet symptomer/plager' },\n\t\t{ code: 'B25', text: 'Engstelig for HIV/AIDS' },\n\t\t{ code: 'B26', text: 'Engstelig for kreft blod/lymfesystem' },\n\t\t{ code: 'B27', text: 'Engstelig for blod/lymfe sykdom IKA' },\n\t\t{ code: 'B28', text: 'Redus funksjonsevne pga blod/lymfe' },\n\t\t{ code: 'B29', text: 'Blod/lymfesystem sympt/plager IKA' },\n\t\t{ code: 'B30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'B31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'B32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'B33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'B34', text: 'Blodprøve IKA' },\n\t\t{ code: 'B35', text: 'Urinprøve IKA' },\n\t\t{ code: 'B36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'B37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'B38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'B39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'B40', text: 'Endoskopi' },\n\t\t{ code: 'B41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'B42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'B43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'B44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'B45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'B46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'B47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'B48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'B49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'B50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'B51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'B52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'B53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'B54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'B55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'B56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'B57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'B58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'B59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'B60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'B61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'B62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'B63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'B64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'B65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'B66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'B67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'B68', text: 'Henvisning IKA' },\n\t\t{ code: 'B69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'B70', text: 'Lymfadenitt akutt' },\n\t\t{ code: 'B71', text: 'Lymfadenitt kronisk/uspesifikk' },\n\t\t{ code: 'B72', text: 'Hodgkins sykdom/lymfom' },\n\t\t{ code: 'B73', text: 'Leukemi' },\n\t\t{ code: 'B74', text: 'Ondartet svulst blod/lymfesystem IKA' },\n\t\t{ code: 'B75', text: 'Godartet/uspes svulst blod/lymfe' },\n\t\t{ code: 'B76', text: 'Miltruptur traumatisk' },\n\t\t{ code: 'B77', text: 'Skade blod/lymfesystem IKA' },\n\t\t{ code: 'B78', text: 'Arvelig hemolytisk anemi' },\n\t\t{ code: 'B79', text: 'Medfødt feil blod/lymfesystem IKA' },\n\t\t{ code: 'B80', text: 'Jernmangelanemi' },\n\t\t{ code: 'B81', text: 'Anemi B12/folsyremangel' },\n\t\t{ code: 'B82', text: 'Anemi IKA' },\n\t\t{ code: 'B83', text: 'Purpura/koagulasjonsdefekt' },\n\t\t{ code: 'B84', text: 'Unormale hvite blodceller' },\n\t\t{ code: 'B87', text: 'Forstørret milt' },\n\t\t{ code: 'B90', text: 'HIV-sykdom/AIDS' },\n\t\t{ code: 'B99', text: 'Blod/lymfe/milt sykdom IKA' },\n\t\t{ code: 'D01', text: 'Abdominalsmerte/krampe generell' },\n\t\t{ code: 'D02', text: 'Abdominalsmerte epigastriet' },\n\t\t{ code: 'D03', text: 'Halsbrann' },\n\t\t{ code: 'D04', text: 'Endetarmssmerte' },\n\t\t{ code: 'D05', text: 'Perianal kløe' },\n\t\t{ code: 'D06', text: 'Abdominalsmerte lokalisert IKA' },\n\t\t{ code: 'D07', text: 'Dyspepsi/fordøyelsesbesvær' },\n\t\t{ code: 'D08', text: 'Flatulens/oppblåsthet/raping' },\n\t\t{ code: 'D09', text: 'Kvalme' },\n\t\t{ code: 'D10', text: 'Oppkast/brekninger' },\n\t\t{ code: 'D11', text: 'Diaré' },\n\t\t{ code: 'D12', text: 'Forstoppelse' },\n\t\t{ code: 'D13', text: 'Gulsott' },\n\t\t{ code: 'D14', text: 'Oppkast med blod/hematemese' },\n\t\t{ code: 'D15', text: 'Melena' },\n\t\t{ code: 'D16', text: 'Rektalblødning' },\n\t\t{ code: 'D17', text: 'Inkontinens avføring' },\n\t\t{ code: 'D18', text: 'Endring i avføring/avføringsvane' },\n\t\t{ code: 'D19', text: 'Tenner/tannkjøtt symptomer/plager' },\n\t\t{ code: 'D20', text: 'Munn/tunge/lepper symptomer/plager' },\n\t\t{ code: 'D21', text: 'Svelgebesvær' },\n\t\t{ code: 'D23', text: 'Forstørret lever' },\n\t\t{ code: 'D24', text: 'Abdominal oppfylling/kul IKA' },\n\t\t{ code: 'D25', text: 'Utspilt abdomen' },\n\t\t{ code: 'D26', text: 'Engstelig for kreft fordøyelsesyst' },\n\t\t{ code: 'D27', text: 'Engstelig for fordøyelsesykdom IKA' },\n\t\t{ code: 'D28', text: 'Redusert funksjonsevne fordøy probl' },\n\t\t{ code: 'D29', text: 'Fordøyelsesyst symptomer/plager IKA' },\n\t\t{ code: 'D30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'D31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'D32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'D33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'D34', text: 'Blodprøve IKA' },\n\t\t{ code: 'D35', text: 'Urinprøve IKA' },\n\t\t{ code: 'D36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'D37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'D38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'D39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'D40', text: 'Endoskopi' },\n\t\t{ code: 'D41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'D42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'D43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'D44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'D45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'D46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'D47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'D48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'D49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'D50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'D51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'D52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'D53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'D54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'D55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'D56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'D57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'D58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'D59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'D60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'D61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'D62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'D63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'D64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'D65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'D66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'D67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'D68', text: 'Henvisning IKA' },\n\t\t{ code: 'D69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'D70', text: 'Tarminfeksjon' },\n\t\t{ code: 'D71', text: 'Kusma' },\n\t\t{ code: 'D72', text: 'Virushepatitt' },\n\t\t{ code: 'D73', text: 'Gastroenteritt antatt infeksiøs' },\n\t\t{ code: 'D74', text: 'Ondartet svulst magesekk' },\n\t\t{ code: 'D75', text: 'Ondartet svulst tykktarm/endetarm' },\n\t\t{ code: 'D76', text: 'Ondartet svulst bukspyttkjertel' },\n\t\t{ code: 'D77', text: 'Ondartet svulst fordøyelsesyst IKA' },\n\t\t{ code: 'D78', text: 'Godartet/uspes svulst fordøyelsessys' },\n\t\t{ code: 'D79', text: 'Fremmedlegeme fordøyelsessystemet' },\n\t\t{ code: 'D80', text: 'Skade fordøyelsesystemet IKA' },\n\t\t{ code: 'D81', text: 'Medfødt feil fordøyelsesystem' },\n\t\t{ code: 'D82', text: 'Tenner/tannkjøtt sykdom' },\n\t\t{ code: 'D83', text: 'Munn/tunge/lepper sykdom' },\n\t\t{ code: 'D84', text: 'Spiserørssykdom' },\n\t\t{ code: 'D85', text: 'Sår i tolvfingertarm' },\n\t\t{ code: 'D86', text: 'Magesår IKA' },\n\t\t{ code: 'D87', text: 'Funksjonelle plager magesekk' },\n\t\t{ code: 'D88', text: 'Appendisitt' },\n\t\t{ code: 'D89', text: 'Lyskebrokk' },\n\t\t{ code: 'D90', text: 'Mellomgulvsbrokk' },\n\t\t{ code: 'D91', text: 'Abdominalt brokk IKA' },\n\t\t{ code: 'D92', text: 'Divertikkelsykdom i tarm' },\n\t\t{ code: 'D93', text: 'Irritabel tarm-syndrom' },\n\t\t{ code: 'D94', text: 'Kronisk enteritt/ulcerøs kolitt' },\n\t\t{ code: 'D95', text: 'Analfissur/perianal abscess' },\n\t\t{ code: 'D96', text: 'Orme-/parasittsykdom' },\n\t\t{ code: 'D97', text: 'Leversykdom IKA' },\n\t\t{ code: 'D98', text: 'Galleveisbetennelse/gallesten' },\n\t\t{ code: 'D99', text: 'Sykdom i fordøyelsessystemet IKA' },\n\t\t{ code: 'D991', text: 'Utbruddssykdom definert av FHI, fordøyelsessystemet' },\n\t\t{ code: 'D992', text: 'Utbruddssykdom definert av FHI, fordøyelsessystemet' },\n\t\t{ code: 'D993', text: 'Utbruddssykdom definert av FHI, fordøyelsessystemet' },\n\t\t{ code: 'D994', text: 'Utbruddssykdom definert av FHI, fordøyelsessystemet' },\n\t\t{ code: 'D995', text: 'Utbruddssykdom definert av FHI, fordøyelsessystemet' },\n\t\t{ code: 'D996', text: 'Utbruddssykdom definert av FHI, fordøyelsessystemet' },\n\t\t{ code: 'D997', text: 'Utbruddssykdom definert av FHI, fordøyelsessystemet' },\n\t\t{ code: 'D998', text: 'Utbruddssykdom definert av FHI, fordøyelsessystemet' },\n\t\t{ code: 'D999', text: 'Utbruddssykdom definert av FHI, fordøyelsessystemet' },\n\t\t{ code: 'F01', text: 'Øyesmerte' },\n\t\t{ code: 'F02', text: 'Rødt øye' },\n\t\t{ code: 'F03', text: 'Tåreflod/sekresjon øye' },\n\t\t{ code: 'F04', text: 'Synlige flekker/tråder i synsfelt' },\n\t\t{ code: 'F05', text: 'Synsforstyrrelse IKA' },\n\t\t{ code: 'F13', text: 'Øye unormal følelse' },\n\t\t{ code: 'F14', text: 'Øye unormal bevegelse' },\n\t\t{ code: 'F15', text: 'Øye unormalt utseende' },\n\t\t{ code: 'F16', text: 'Øyelokk symptomer/plager' },\n\t\t{ code: 'F17', text: 'Briller symptomer/plager' },\n\t\t{ code: 'F18', text: 'Kontaktlinser symptomer/plager' },\n\t\t{ code: 'F27', text: 'Engstelig for øyesykdom' },\n\t\t{ code: 'F28', text: 'Redusert funksjonsevne pga øyeprobl' },\n\t\t{ code: 'F29', text: 'Øye symptomer/plager IKA' },\n\t\t{ code: 'F30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'F31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'F32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'F33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'F34', text: 'Blodprøve IKA' },\n\t\t{ code: 'F35', text: 'Urinprøve IKA' },\n\t\t{ code: 'F36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'F37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'F38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'F39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'F40', text: 'Endoskopi' },\n\t\t{ code: 'F41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'F42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'F43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'F44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'F45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'F46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'F47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'F48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'F49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'F50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'F51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'F52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'F53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'F54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'F55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'F56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'F57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'F58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'F59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'F60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'F61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'F62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'F63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'F64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'F65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'F66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'F67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'F68', text: 'Henvisning IKA' },\n\t\t{ code: 'F69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'F70', text: 'Infeksiøs konjunktivitt' },\n\t\t{ code: 'F71', text: 'Allergisk konjunktivitt' },\n\t\t{ code: 'F72', text: 'Øyelokkbetennelse' },\n\t\t{ code: 'F73', text: 'Øye infeksjon/betennelse IKA' },\n\t\t{ code: 'F74', text: 'Svulst i øye/øyehule' },\n\t\t{ code: 'F75', text: 'Kontusjon/blødning i øye' },\n\t\t{ code: 'F76', text: 'Fremmedlegeme øye' },\n\t\t{ code: 'F79', text: 'Skade øye IKA' },\n\t\t{ code: 'F80', text: 'Tåreveisstenose/atresi spedbarn' },\n\t\t{ code: 'F81', text: 'Medfødt feil øye IKA' },\n\t\t{ code: 'F82', text: 'Netthinneløsning/rift' },\n\t\t{ code: 'F83', text: 'Retinopati' },\n\t\t{ code: 'F84', text: 'Makuladegenerasjon' },\n\t\t{ code: 'F85', text: 'Hornhinnesår' },\n\t\t{ code: 'F86', text: 'Trakom' },\n\t\t{ code: 'F91', text: 'Brytningsforstyrrelse' },\n\t\t{ code: 'F92', text: 'Grå stær/katarakt' },\n\t\t{ code: 'F93', text: 'Glaukom' },\n\t\t{ code: 'F94', text: 'Blindhet' },\n\t\t{ code: 'F95', text: 'Skjeling/strabisme' },\n\t\t{ code: 'F99', text: 'Øyesykdom IKA' },\n\t\t{ code: 'H01', text: 'Øresmerte/øreverk' },\n\t\t{ code: 'H02', text: 'Hørsel symptomer/plager' },\n\t\t{ code: 'H03', text: 'Øresus' },\n\t\t{ code: 'H04', text: 'Øreflod/sekresjon' },\n\t\t{ code: 'H05', text: 'Blødning øre' },\n\t\t{ code: 'H13', text: 'Øreplugg/øretetthet' },\n\t\t{ code: 'H15', text: 'Bekymret/opptatt av ørenes utseende' },\n\t\t{ code: 'H27', text: 'Engstelig for øresykdom' },\n\t\t{ code: 'H28', text: 'Redusert funksjonsevne pga øreprobl' },\n\t\t{ code: 'H29', text: 'Øre symptomer/plager IKA' },\n\t\t{ code: 'H30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'H31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'H32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'H33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'H34', text: 'Blodprøve IKA' },\n\t\t{ code: 'H35', text: 'Urinprøve IKA' },\n\t\t{ code: 'H36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'H37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'H38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'H39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'H40', text: 'Endoskopi' },\n\t\t{ code: 'H41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'H42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'H43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'H44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'H45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'H46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'H47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'H48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'H49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'H50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'H51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'H52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'H53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'H54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'H55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'H56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'H57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'H58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'H59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'H60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'H61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'H62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'H63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'H64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'H65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'H66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'H67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'H68', text: 'Henvisning IKA' },\n\t\t{ code: 'H69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'H70', text: 'Ytre øre betennelse' },\n\t\t{ code: 'H71', text: 'Mellomørebetennelse akutt' },\n\t\t{ code: 'H72', text: 'Mellomørebetennelse serøs' },\n\t\t{ code: 'H73', text: 'Tuba auditiva betennelse' },\n\t\t{ code: 'H74', text: 'Mellomørebetennelse kronisk' },\n\t\t{ code: 'H75', text: 'Svulst øre' },\n\t\t{ code: 'H76', text: 'Fremmedlegeme øre' },\n\t\t{ code: 'H77', text: 'Perforert trommehinne IKA' },\n\t\t{ code: 'H78', text: 'Overflateskade ytre øre' },\n\t\t{ code: 'H79', text: 'Skade øre IKA' },\n\t\t{ code: 'H80', text: 'Medfødt feil øre' },\n\t\t{ code: 'H81', text: 'Ørevoks' },\n\t\t{ code: 'H82', text: 'Svimmelhetssyndrom' },\n\t\t{ code: 'H83', text: 'Otosklerose' },\n\t\t{ code: 'H84', text: 'Hørselstap aldersbetinget' },\n\t\t{ code: 'H85', text: 'Hørselstap støyskade' },\n\t\t{ code: 'H86', text: 'Døvhet/hørselstap IKA' },\n\t\t{ code: 'H99', text: 'Øresykdom IKA' },\n\t\t{ code: 'K01', text: 'Smerte relatert til hjertet' },\n\t\t{ code: 'K02', text: 'Trykk/sammensnøring hjertet' },\n\t\t{ code: 'K03', text: 'Smerte relatert til kretsløpet IKA' },\n\t\t{ code: 'K04', text: 'Hjertebank' },\n\t\t{ code: 'K05', text: 'Uregelmessige hjerteslag IKA' },\n\t\t{ code: 'K06', text: 'Utvidede vener' },\n\t\t{ code: 'K07', text: 'Hovne ankler/ødem' },\n\t\t{ code: 'K22', text: 'Økt risiko for hjerte-karsykdom' },\n\t\t{ code: 'K24', text: 'Engstelig for hjertesykdom' },\n\t\t{ code: 'K25', text: 'Engstelig for høyt blodtrykk' },\n\t\t{ code: 'K27', text: 'Engstelig for hjerte-karsykdom IKA' },\n\t\t{ code: 'K28', text: 'Redus funksjonsevne hjerte-karprobl' },\n\t\t{ code: 'K29', text: 'Hjerte-karsyst symptomer/plager IKA' },\n\t\t{ code: 'K30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'K31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'K32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'K33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'K34', text: 'Blodprøve IKA' },\n\t\t{ code: 'K35', text: 'Urinprøve IKA' },\n\t\t{ code: 'K36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'K37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'K38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'K39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'K40', text: 'Endoskopi' },\n\t\t{ code: 'K41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'K42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'K43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'K44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'K45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'K46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'K47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'K48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'K49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'K50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'K51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'K52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'K53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'K54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'K55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'K56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'K57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'K58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'K59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'K60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'K61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'K62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'K63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'K64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'K65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'K66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'K67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'K68', text: 'Henvisning IKA' },\n\t\t{ code: 'K69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'K70', text: 'Infeksjon hjerte-karsystemet' },\n\t\t{ code: 'K71', text: 'Reumatisk feber/hjertesykdom' },\n\t\t{ code: 'K72', text: 'Svulst i hjerte' },\n\t\t{ code: 'K73', text: 'Medfødt feil hjerte-karsystemet' },\n\t\t{ code: 'K74', text: 'Iskemisk hjertesykdom med angina' },\n\t\t{ code: 'K75', text: 'Akutt hjerteinfarkt' },\n\t\t{ code: 'K76', text: 'Iskemisk hjertesykdom kronisk IKA' },\n\t\t{ code: 'K77', text: 'Hjertesvikt' },\n\t\t{ code: 'K78', text: 'Atrieflimmer/flutter' },\n\t\t{ code: 'K79', text: 'Paroksysmal takykardi' },\n\t\t{ code: 'K80', text: 'Hjertearytmi IKA' },\n\t\t{ code: 'K81', text: 'Bilyd hjerte/arterier IKA' },\n\t\t{ code: 'K82', text: 'Pulmonal hjertesykdom' },\n\t\t{ code: 'K83', text: 'Hjerteklaffesykdom IKA' },\n\t\t{ code: 'K84', text: 'Hjertesykdom IKA' },\n\t\t{ code: 'K85', text: 'Forhøyet blodtrykk IKA' },\n\t\t{ code: 'K86', text: 'Hypertensjon ukomplisert' },\n\t\t{ code: 'K87', text: 'Hypertensjon med komplikasjoner' },\n\t\t{ code: 'K88', text: 'Postural hypotensjon' },\n\t\t{ code: 'K89', text: 'Forbigående cerebral iskemi' },\n\t\t{ code: 'K90', text: 'Hjerneslag' },\n\t\t{ code: 'K91', text: 'Cerebrovaskulær sykdom' },\n\t\t{ code: 'K92', text: 'Aterosklerose/perifer karsykdom' },\n\t\t{ code: 'K93', text: 'Lungeemboli' },\n\t\t{ code: 'K94', text: 'Årebetennelse' },\n\t\t{ code: 'K95', text: 'Åreknuter underekstremitet' },\n\t\t{ code: 'K96', text: 'Hemoroider' },\n\t\t{ code: 'K99', text: 'Hjerte-karsykdom IKA' },\n\t\t{ code: 'L01', text: 'Nakke symptomer/plager' },\n\t\t{ code: 'L02', text: 'Rygg symptomer/plager' },\n\t\t{ code: 'L03', text: 'Korsrygg symptomer/plager' },\n\t\t{ code: 'L04', text: 'Brystkasse symptomer/plager' },\n\t\t{ code: 'L05', text: 'Flanke/armhule symptomer/plager' },\n\t\t{ code: 'L07', text: 'Kjeve symptomer/plager' },\n\t\t{ code: 'L08', text: 'Skulder symptomer/plager' },\n\t\t{ code: 'L09', text: 'Arm symptomer/plager' },\n\t\t{ code: 'L10', text: 'Albue symptomer/plager' },\n\t\t{ code: 'L11', text: 'Håndledd symptomer/plager' },\n\t\t{ code: 'L12', text: 'Hånd/finger symptomer/plager' },\n\t\t{ code: 'L13', text: 'Hofte symptomer/plager' },\n\t\t{ code: 'L14', text: 'Legg/lår symptomer/plager' },\n\t\t{ code: 'L15', text: 'Kne symptomer/plager' },\n\t\t{ code: 'L16', text: 'Ankel symptomer/plager' },\n\t\t{ code: 'L17', text: 'Fot/tå symptomer/plager' },\n\t\t{ code: 'L18', text: 'Utbredte muskelsmerter/fibromyalgi' },\n\t\t{ code: 'L19', text: 'Muskel symptomer/plager IKA' },\n\t\t{ code: 'L20', text: 'Ledd symptomer/plager IKA' },\n\t\t{ code: 'L26', text: 'Engstelig for kreft muskel-skj-syst' },\n\t\t{ code: 'L27', text: 'Engstelig for sykd musk-skj-syst IKA' },\n\t\t{ code: 'L28', text: 'Redus funksjonsevne musk-skj-probl' },\n\t\t{ code: 'L29', text: 'Muskel-skj-syst sympt/plager IKA' },\n\t\t{ code: 'L30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'L31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'L32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'L33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'L34', text: 'Blodprøve IKA' },\n\t\t{ code: 'L35', text: 'Urinprøve IKA' },\n\t\t{ code: 'L36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'L37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'L38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'L39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'L40', text: 'Endoskopi' },\n\t\t{ code: 'L41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'L42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'L43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'L44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'L45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'L46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'L47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'L48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'L49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'L50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'L51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'L52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'L53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'L54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'L55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'L56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'L57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'L58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'L59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'L60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'L61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'L62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'L63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'L64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'L65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'L66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'L67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'L68', text: 'Henvisning IKA' },\n\t\t{ code: 'L69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'L70', text: 'Infeksjon muskel-skjelettsystemet' },\n\t\t{ code: 'L71', text: 'Ondartet svulst muskel-skj-syst' },\n\t\t{ code: 'L72', text: 'Brudd underarm' },\n\t\t{ code: 'L73', text: 'Brudd legg/ankel' },\n\t\t{ code: 'L74', text: 'Brudd hånd/fot' },\n\t\t{ code: 'L75', text: 'Brudd lårben/lårhals' },\n\t\t{ code: 'L76', text: 'Brudd IKA' },\n\t\t{ code: 'L77', text: 'Forstuving/forstrekking ankel' },\n\t\t{ code: 'L78', text: 'Forstuving/forstrekking kne' },\n\t\t{ code: 'L79', text: 'Forstuving/forstrekking ledd IKA' },\n\t\t{ code: 'L80', text: 'Dislokasjon/subluksasjon' },\n\t\t{ code: 'L81', text: 'Skade muskel-skj-syst IKA' },\n\t\t{ code: 'L82', text: 'Medfødt feil muskel-skj-syst' },\n\t\t{ code: 'L83', text: 'Nakkesyndrom' },\n\t\t{ code: 'L84', text: 'Ryggsyndrom uten smerteutstråling' },\n\t\t{ code: 'L85', text: 'Ervervet deformitet ryggsøyle' },\n\t\t{ code: 'L86', text: 'Ryggsyndrom med smerteutstråling' },\n\t\t{ code: 'L87', text: 'Bursitt/tendinitt/synovitt IKA' },\n\t\t{ code: 'L88', text: 'Reumatoid artritt/reumatisk sykdom' },\n\t\t{ code: 'L89', text: 'Hofteleddsartrose' },\n\t\t{ code: 'L90', text: 'Kneleddsartrose' },\n\t\t{ code: 'L91', text: 'Artrose IKA' },\n\t\t{ code: 'L92', text: 'Skuldersyndrom' },\n\t\t{ code: 'L93', text: 'Tennisalbue/lateral epikondylitt' },\n\t\t{ code: 'L94', text: 'Osteokondrose' },\n\t\t{ code: 'L95', text: 'Osteoporose' },\n\t\t{ code: 'L96', text: 'Akutt indre kneskade' },\n\t\t{ code: 'L97', text: 'Godartet/uspes svulst musk-skj-syst' },\n\t\t{ code: 'L98', text: 'Ervervet deformitet ekstremitet' },\n\t\t{ code: 'L99', text: 'Muskel-skjelettsykdom IKA' },\n\t\t{ code: 'N01', text: 'Hodepine' },\n\t\t{ code: 'N03', text: 'Ansiktssmerte' },\n\t\t{ code: 'N04', text: 'Restless legs' },\n\t\t{ code: 'N05', text: 'Prikking/parestesi i hender/føtter' },\n\t\t{ code: 'N06', text: 'Forstyrrelser i hudens følsomhet IKA' },\n\t\t{ code: 'N07', text: 'Krampeanfall/kramper' },\n\t\t{ code: 'N08', text: 'Unormale/ufrivillige bevegelser' },\n\t\t{ code: 'N16', text: 'Forstyrrelse i lukt/smak' },\n\t\t{ code: 'N17', text: 'Svimmelhet IKA' },\n\t\t{ code: 'N18', text: 'Lammelse/svakhet' },\n\t\t{ code: 'N19', text: 'Talevansker' },\n\t\t{ code: 'N26', text: 'Engstelig for kreft nervesystemet' },\n\t\t{ code: 'N27', text: 'Engstelig for sykdom nervesyst IKA' },\n\t\t{ code: 'N28', text: 'Redus funksjonsevne probl nervesyst' },\n\t\t{ code: 'N29', text: 'Nervesystem symptomer/plager IKA' },\n\t\t{ code: 'N30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'N31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'N32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'N33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'N34', text: 'Blodprøve IKA' },\n\t\t{ code: 'N35', text: 'Urinprøve IKA' },\n\t\t{ code: 'N36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'N37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'N38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'N39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'N40', text: 'Endoskopi' },\n\t\t{ code: 'N41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'N42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'N43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'N44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'N45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'N46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'N47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'N48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'N49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'N50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'N51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'N52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'N53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'N54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'N55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'N56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'N57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'N58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'N59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'N60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'N61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'N62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'N63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'N64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'N65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'N66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'N67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'N68', text: 'Henvisning IKA' },\n\t\t{ code: 'N69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'N70', text: 'Poliomyelitt' },\n\t\t{ code: 'N71', text: 'Meningitt/encefalitt' },\n\t\t{ code: 'N72', text: 'Stivkrampe' },\n\t\t{ code: 'N73', text: 'Infeksjon sentralnervesyst IKA' },\n\t\t{ code: 'N74', text: 'Ondartet svulst nervesystemet' },\n\t\t{ code: 'N75', text: 'Godartet svulst nervesystemet' },\n\t\t{ code: 'N76', text: 'Uspesifisert svulst nervesystemet' },\n\t\t{ code: 'N79', text: 'Hjernerystelse' },\n\t\t{ code: 'N80', text: 'Hodeskade IKA' },\n\t\t{ code: 'N81', text: 'Skade nervesystemet IKA' },\n\t\t{ code: 'N85', text: 'Medfødt feil nervesystemet' },\n\t\t{ code: 'N86', text: 'Multippel sklerose' },\n\t\t{ code: 'N87', text: 'Parkinsonisme' },\n\t\t{ code: 'N88', text: 'Epilepsi' },\n\t\t{ code: 'N89', text: 'Migrene' },\n\t\t{ code: 'N90', text: 'Cluster-hodepine' },\n\t\t{ code: 'N91', text: 'Facialisparese' },\n\t\t{ code: 'N92', text: 'Trigeminusnevralgi' },\n\t\t{ code: 'N93', text: 'Carpal tunnel syndrom' },\n\t\t{ code: 'N94', text: 'Perifer nevropati' },\n\t\t{ code: 'N95', text: 'Tensjonshodepine' },\n\t\t{ code: 'N99', text: 'Sykdom i nervesystemet IKA' },\n\t\t{ code: 'P01', text: 'Følelse angst/nervøs/anspent' },\n\t\t{ code: 'P02', text: 'Psykisk ubalanse situasjonsbetinget' },\n\t\t{ code: 'P03', text: 'Depresjonsfølelse' },\n\t\t{ code: 'P04', text: 'Irritabel atferd/følelse' },\n\t\t{ code: 'P05', text: 'Senilitet, atferd/følelse gammel' },\n\t\t{ code: 'P06', text: 'Søvnforstyrrelse' },\n\t\t{ code: 'P07', text: 'Seksuell drift/lyst hemmet' },\n\t\t{ code: 'P08', text: 'Seksuell tilfredsstillelse hemmet' },\n\t\t{ code: 'P09', text: 'Seksuell legning bekymret for' },\n\t\t{ code: 'P10', text: 'Stamming/tics' },\n\t\t{ code: 'P11', text: 'Spiseforstyrrelse hos barn' },\n\t\t{ code: 'P12', text: 'Sengevæting/enuresis IKA' },\n\t\t{ code: 'P13', text: 'Enkoprese' },\n\t\t{ code: 'P15', text: 'Kronisk alkoholmisbruk' },\n\t\t{ code: 'P16', text: 'Akutt alkoholmisbruk' },\n\t\t{ code: 'P17', text: 'Tobakkmisbruk' },\n\t\t{ code: 'P18', text: 'Legemiddelmisbruk' },\n\t\t{ code: 'P19', text: 'Stoffmisbruk' },\n\t\t{ code: 'P20', text: 'Hukommelsesforstyrrelse' },\n\t\t{ code: 'P22', text: 'Atferdsforstyrrelse barn' },\n\t\t{ code: 'P23', text: 'Atferdsforstyrrelse ungdom' },\n\t\t{ code: 'P24', text: 'Spesifikke utviklingsforstyrrelser' },\n\t\t{ code: 'P25', text: 'Livsfaseproblem voksen' },\n\t\t{ code: 'P27', text: 'Engstelig for psykisk sykdom' },\n\t\t{ code: 'P28', text: 'Redusert funksjonsevne psyk problem' },\n\t\t{ code: 'P29', text: 'Psykiske symptomer/plager IKA' },\n\t\t{ code: 'P30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'P31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'P32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'P33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'P34', text: 'Blodprøve IKA' },\n\t\t{ code: 'P35', text: 'Urinprøve IKA' },\n\t\t{ code: 'P36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'P37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'P38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'P39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'P40', text: 'Endoskopi' },\n\t\t{ code: 'P41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'P42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'P43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'P44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'P45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'P46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'P47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'P48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'P49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'P50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'P51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'P52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'P53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'P54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'P55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'P56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'P57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'P58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'P59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'P60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'P61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'P62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'P63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'P64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'P65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'P66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'P67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'P68', text: 'Henvisning IKA' },\n\t\t{ code: 'P69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'P70', text: 'Demens' },\n\t\t{ code: 'P71', text: 'Organisk psykisk lidelse IKA' },\n\t\t{ code: 'P72', text: 'Schizofreni' },\n\t\t{ code: 'P73', text: 'Affektiv lidelse' },\n\t\t{ code: 'P74', text: 'Angstlidelse' },\n\t\t{ code: 'P75', text: 'Dissosiativ/somatoform lidelse' },\n\t\t{ code: 'P76', text: 'Depressiv lidelse' },\n\t\t{ code: 'P77', text: 'Selvmord/selvmordsforsøk' },\n\t\t{ code: 'P78', text: 'Nevrasteni' },\n\t\t{ code: 'P79', text: 'Fobi/obsessiv-kompulsiv lidelse' },\n\t\t{ code: 'P80', text: 'Personlighetsforstyrrelse' },\n\t\t{ code: 'P81', text: 'Hyperkinetisk forstyrrelse' },\n\t\t{ code: 'P82', text: 'Posttraumatisk stresslidelse' },\n\t\t{ code: 'P85', text: 'Psykisk utviklingshemning' },\n\t\t{ code: 'P86', text: 'Anorexia nervosa/bulimi' },\n\t\t{ code: 'P98', text: 'Psykose IKA' },\n\t\t{ code: 'P99', text: 'Psykisk lidelse IKA' },\n\t\t{ code: 'R01', text: 'Smerte luftveier' },\n\t\t{ code: 'R02', text: 'Kortpustethet/dyspné' },\n\t\t{ code: 'R03', text: 'Piping i brystet' },\n\t\t{ code: 'R04', text: 'Pusteproblem IKA' },\n\t\t{ code: 'R05', text: 'Hoste' },\n\t\t{ code: 'R06', text: 'Neseblødning' },\n\t\t{ code: 'R07', text: 'Nysing/tetthet i nese' },\n\t\t{ code: 'R08', text: 'Nese symptomer/plager IKA' },\n\t\t{ code: 'R09', text: 'Bihule symptomer/plager IKA' },\n\t\t{ code: 'R21', text: 'Hals symptomer/plager' },\n\t\t{ code: 'R23', text: 'Stemme symptomer/plager' },\n\t\t{ code: 'R24', text: 'Blodig oppspytt/hemoptyse' },\n\t\t{ code: 'R25', text: 'Unormalt oppspytt/ekspektorat' },\n\t\t{ code: 'R26', text: 'Engstelig for kreft luftveier' },\n\t\t{ code: 'R27', text: 'Engstelig for sykdom luftveier IKA' },\n\t\t{ code: 'R28', text: 'Redusert funksjonsevne luftveisprobl' },\n\t\t{ code: 'R29', text: 'Luftveier symptomer/plager IKA' },\n\t\t{ code: 'R30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'R31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'R32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'R33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'R34', text: 'Blodprøve IKA' },\n\t\t{ code: 'R35', text: 'Urinprøve IKA' },\n\t\t{ code: 'R36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'R37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'R38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'R39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'R40', text: 'Endoskopi' },\n\t\t{ code: 'R41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'R42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'R43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'R44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'R45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'R46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'R47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'R48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'R49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'R50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'R51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'R52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'R53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'R54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'R55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'R56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'R57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'R58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'R59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'R60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'R61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'R62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'R63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'R64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'R65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'R66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'R67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'R68', text: 'Henvisning IKA' },\n\t\t{ code: 'R69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'R71', text: 'Kikhoste' },\n\t\t{ code: 'R72', text: 'Streptokokkhals' },\n\t\t{ code: 'R73', text: 'Nesebyll' },\n\t\t{ code: 'R74', text: 'Akutt øvre luftveisinfeksjon' },\n\t\t{ code: 'R75', text: 'Bihulebetennelse' },\n\t\t{ code: 'R76', text: 'Akutt tonsillitt' },\n\t\t{ code: 'R77', text: 'Akutt laryngitt/trakeitt' },\n\t\t{ code: 'R78', text: 'Akutt bronkitt/bronkiolitt' },\n\t\t{ code: 'R79', text: 'Kronisk bronkitt' },\n\t\t{ code: 'R80', text: 'Influensa' },\n\t\t{ code: 'R81', text: 'Lungebetennelse' },\n\t\t{ code: 'R82', text: 'Pleuritt IKA' },\n\t\t{ code: 'R83', text: 'Luftveisinfeksjon IKA' },\n\t\t{ code: 'R84', text: 'Ondartet svulst bronkie/lunge' },\n\t\t{ code: 'R85', text: 'Ondartet svulst luftveier IKA' },\n\t\t{ code: 'R86', text: 'Godartet svulst luftveier' },\n\t\t{ code: 'R87', text: 'Fremmedlegeme i nese/larynks/bronkie' },\n\t\t{ code: 'R88', text: 'Skade luftveier IKA' },\n\t\t{ code: 'R89', text: 'Medfødt feil luftveier' },\n\t\t{ code: 'R90', text: 'Hypertrofi tonsiller/adenoid vev' },\n\t\t{ code: 'R92', text: 'Uspesifisert svulst luftveier' },\n\t\t{ code: 'R95', text: 'Kronisk obstruktiv lungesykdom' },\n\t\t{ code: 'R96', text: 'Astma' },\n\t\t{ code: 'R97', text: 'Allergisk rinitt' },\n\t\t{ code: 'R98', text: 'Hyperventileringssyndrom' },\n\t\t{ code: 'R99', text: 'Luftveissykdom IKA' },\n\t\t{ code: 'R991', text: 'Covid-19 (mistenkt/sannsynlig)' },\n\t\t{ code: 'R992', text: 'Covid-19 (bekreftet)' },\n\t\t{ code: 'R993', text: 'Utbruddssykdom definert av FHI, luftveier' },\n\t\t{ code: 'R994', text: 'Utbruddssykdom definert av FHI, luftveier' },\n\t\t{ code: 'R995', text: 'Utbruddssykdom definert av FHI, luftveier' },\n\t\t{ code: 'R996', text: 'Utbruddssykdom definert av FHI, luftveier' },\n\t\t{ code: 'R997', text: 'Utbruddssykdom definert av FHI, luftveier' },\n\t\t{ code: 'R998', text: 'Utbruddssykdom definert av FHI, luftveier' },\n\t\t{ code: 'R999', text: 'Utbruddssykdom definert av FHI, luftveier' },\n\t\t{ code: 'S01', text: 'Smerte/ømhet hud' },\n\t\t{ code: 'S02', text: 'Hudkløe' },\n\t\t{ code: 'S03', text: 'Vorter' },\n\t\t{ code: 'S04', text: 'Lokalisert hevelse/kul hud' },\n\t\t{ code: 'S05', text: 'Utbredte hevelser/kuler hud' },\n\t\t{ code: 'S06', text: 'Lokalisert utslett hud' },\n\t\t{ code: 'S07', text: 'Utbredt utslett hud' },\n\t\t{ code: 'S08', text: 'Forandring av hudfarge IKA' },\n\t\t{ code: 'S09', text: 'Infeksjon finger/tå' },\n\t\t{ code: 'S10', text: 'Abscess/furunkel' },\n\t\t{ code: 'S11', text: 'Hudinfeksjon posttraumatisk' },\n\t\t{ code: 'S12', text: 'Insektstikk/bitt' },\n\t\t{ code: 'S13', text: 'Bitt av dyr/menneske' },\n\t\t{ code: 'S14', text: 'Forbrenning/skålding' },\n\t\t{ code: 'S15', text: 'Fremmedlegeme hud' },\n\t\t{ code: 'S16', text: 'Kontusjon/slag hud' },\n\t\t{ code: 'S17', text: 'Skrubbsår/blemmer' },\n\t\t{ code: 'S18', text: 'Åpent sår/kutt' },\n\t\t{ code: 'S19', text: 'Skade hud/underhud IKA' },\n\t\t{ code: 'S20', text: 'Liktorn/fortykket underhud' },\n\t\t{ code: 'S21', text: 'Hudstruktur symptomer/plager' },\n\t\t{ code: 'S22', text: 'Negl symptomer/plager' },\n\t\t{ code: 'S23', text: 'Håravfall/skallethet' },\n\t\t{ code: 'S24', text: 'Hår/hodebunn symptomer/plager IKA' },\n\t\t{ code: 'S26', text: 'Engstelig for kreft hud' },\n\t\t{ code: 'S27', text: 'Engstelig for hudsykdom IKA' },\n\t\t{ code: 'S28', text: 'Redusert funksjonsevne pga hudprobl' },\n\t\t{ code: 'S29', text: 'Hud symptomer/plager IKA' },\n\t\t{ code: 'S30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'S31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'S32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'S33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'S34', text: 'Blodprøve IKA' },\n\t\t{ code: 'S35', text: 'Urinprøve IKA' },\n\t\t{ code: 'S36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'S37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'S38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'S39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'S40', text: 'Endoskopi' },\n\t\t{ code: 'S41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'S42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'S43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'S44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'S45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'S46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'S47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'S48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'S49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'S50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'S51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'S52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'S53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'S54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'S55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'S56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'S57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'S58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'S59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'S60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'S61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'S62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'S63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'S64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'S65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'S66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'S67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'S68', text: 'Henvisning IKA' },\n\t\t{ code: 'S69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'S70', text: 'Herpes zoster' },\n\t\t{ code: 'S71', text: 'Herpes simplex IKA' },\n\t\t{ code: 'S72', text: 'Infestasjon midd' },\n\t\t{ code: 'S73', text: 'Infestasjon parasitt IKA' },\n\t\t{ code: 'S74', text: 'Ringorm/hudsopp IKA' },\n\t\t{ code: 'S75', text: 'Candidainfeksjon hud' },\n\t\t{ code: 'S76', text: 'Hudinfeksjon IKA' },\n\t\t{ code: 'S77', text: 'Ondartet svulst hud' },\n\t\t{ code: 'S78', text: 'Lipom' },\n\t\t{ code: 'S79', text: 'Godartet/uspesifisert svulst hud IKA' },\n\t\t{ code: 'S80', text: 'Solutløst keratose/solforbrenning' },\n\t\t{ code: 'S81', text: 'Hemangiom/lymfangiom' },\n\t\t{ code: 'S82', text: 'Pigmentnevus' },\n\t\t{ code: 'S83', text: 'Medfødt feil hud/underhud IKA' },\n\t\t{ code: 'S84', text: 'Brennkopper' },\n\t\t{ code: 'S85', text: 'Pilonidalcyste/-fistel' },\n\t\t{ code: 'S86', text: 'Seboréisk dermatitt' },\n\t\t{ code: 'S87', text: 'Atopisk dermatitt/eksem' },\n\t\t{ code: 'S88', text: 'Kontakt-/allergisk dermatitt IKA' },\n\t\t{ code: 'S89', text: 'Bleiedermatitt' },\n\t\t{ code: 'S90', text: 'Pityriasis rosea' },\n\t\t{ code: 'S91', text: 'Psoriasis' },\n\t\t{ code: 'S92', text: 'Svettekjertelsykdom' },\n\t\t{ code: 'S93', text: 'Talgcyste' },\n\t\t{ code: 'S94', text: 'Inngrodd negl' },\n\t\t{ code: 'S95', text: 'Molluscum contagiosum' },\n\t\t{ code: 'S96', text: 'Akne' },\n\t\t{ code: 'S97', text: 'Kronisk hudsår' },\n\t\t{ code: 'S98', text: 'Urticaria' },\n\t\t{ code: 'S99', text: 'Hud/underhud sykdom IKA' },\n\t\t{ code: 'T01', text: 'Økt tørste' },\n\t\t{ code: 'T02', text: 'Økt matlyst' },\n\t\t{ code: 'T03', text: 'Nedsatt matlyst' },\n\t\t{ code: 'T04', text: 'Ernæringsproblem barn' },\n\t\t{ code: 'T05', text: 'Ernæringsproblem voksen' },\n\t\t{ code: 'T07', text: 'Vektøkning' },\n\t\t{ code: 'T08', text: 'Vekttap' },\n\t\t{ code: 'T10', text: 'Forsinket vekst' },\n\t\t{ code: 'T11', text: 'Uttørring' },\n\t\t{ code: 'T26', text: 'Engstelig for kreft endokrine system' },\n\t\t{ code: 'T27', text: 'Engstelig endokr/metabol/ernær sykd' },\n\t\t{ code: 'T28', text: 'Red funk evne endo/metab/ernær probl' },\n\t\t{ code: 'T29', text: 'Endok/metab/ernær sympt/plager IKA' },\n\t\t{ code: 'T30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'T31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'T32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'T33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'T34', text: 'Blodprøve IKA' },\n\t\t{ code: 'T35', text: 'Urinprøve IKA' },\n\t\t{ code: 'T36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'T37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'T38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'T39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'T40', text: 'Endoskopi' },\n\t\t{ code: 'T41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'T42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'T43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'T44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'T45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'T46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'T47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'T48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'T49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'T50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'T51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'T52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'T53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'T54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'T55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'T56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'T57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'T58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'T59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'T60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'T61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'T62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'T63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'T64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'T65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'T66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'T67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'T68', text: 'Henvisning IKA' },\n\t\t{ code: 'T69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'T70', text: 'Infeksjon endokrine system' },\n\t\t{ code: 'T71', text: 'Ondartet svulst tyreoidea' },\n\t\t{ code: 'T72', text: 'Godartet svulst tyreoidea' },\n\t\t{ code: 'T73', text: 'Svulst endokrine organ IKA' },\n\t\t{ code: 'T78', text: 'Ductus/cystis tyreoglossus' },\n\t\t{ code: 'T80', text: 'Medfødt feil endokr/metabol syst IKA' },\n\t\t{ code: 'T81', text: 'Struma' },\n\t\t{ code: 'T82', text: 'Fedme' },\n\t\t{ code: 'T83', text: 'Overvekt' },\n\t\t{ code: 'T85', text: 'Hypertyreose/tyreotoksikose' },\n\t\t{ code: 'T86', text: 'Hypotyreose/myksødem' },\n\t\t{ code: 'T87', text: 'Hypoglykemi' },\n\t\t{ code: 'T89', text: 'Diabetes type 1' },\n\t\t{ code: 'T90', text: 'Diabetes type 2' },\n\t\t{ code: 'T91', text: 'Vitaminmangel/ernæringsforstyrrelse' },\n\t\t{ code: 'T92', text: 'Urinsyregikt' },\n\t\t{ code: 'T93', text: 'Lipidstoffskifte forstyrrelse' },\n\t\t{ code: 'T99', text: 'Endokrin/metabol/ernær sykd IKA' },\n\t\t{ code: 'U01', text: 'Smerte vannlating' },\n\t\t{ code: 'U02', text: 'Hyppig vannlating' },\n\t\t{ code: 'U04', text: 'Urininkontinens' },\n\t\t{ code: 'U05', text: 'Vannlatingsproblemer IKA' },\n\t\t{ code: 'U06', text: 'Hematuri' },\n\t\t{ code: 'U07', text: 'Urin symptomer/plager IKA' },\n\t\t{ code: 'U08', text: 'Urinretensjon' },\n\t\t{ code: 'U13', text: 'Blære symptomer/plager IKA' },\n\t\t{ code: 'U14', text: 'Nyre symptomer/plager' },\n\t\t{ code: 'U26', text: 'Engstelig for kreft urinveier' },\n\t\t{ code: 'U27', text: 'Engstelig for sykdom urinveier IKA' },\n\t\t{ code: 'U28', text: 'Redusert funksjonsevne urinveisprobl' },\n\t\t{ code: 'U29', text: 'Urinveier symptomer/plager IKA' },\n\t\t{ code: 'U30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'U31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'U32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'U33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'U34', text: 'Blodprøve IKA' },\n\t\t{ code: 'U35', text: 'Urinprøve IKA' },\n\t\t{ code: 'U36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'U37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'U38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'U39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'U40', text: 'Endoskopi' },\n\t\t{ code: 'U41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'U42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'U43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'U44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'U45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'U46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'U47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'U48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'U49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'U50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'U51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'U52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'U53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'U54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'U55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'U56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'U57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'U58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'U59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'U60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'U61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'U62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'U63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'U64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'U65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'U66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'U67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'U68', text: 'Henvisning IKA' },\n\t\t{ code: 'U69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'U70', text: 'Nyrebekkenbetennelse' },\n\t\t{ code: 'U71', text: 'Cystitt/urinveisinfeksjon IKA' },\n\t\t{ code: 'U72', text: 'Uretritt' },\n\t\t{ code: 'U75', text: 'Ondartet svulst nyre' },\n\t\t{ code: 'U76', text: 'Ondartet svulst urinblære' },\n\t\t{ code: 'U77', text: 'Ondartet svulst urinveier IKA' },\n\t\t{ code: 'U78', text: 'Godartet svulst urinveier' },\n\t\t{ code: 'U79', text: 'Uspesifisert svulst urinveier' },\n\t\t{ code: 'U80', text: 'Skade urinveier' },\n\t\t{ code: 'U85', text: 'Medfødt feil urinveier' },\n\t\t{ code: 'U88', text: 'Glomerulonefritt/nefropati' },\n\t\t{ code: 'U90', text: 'Ortostatisk proteinuri' },\n\t\t{ code: 'U95', text: 'Sten i urinveier' },\n\t\t{ code: 'U98', text: 'Unormal urinprøve IKA' },\n\t\t{ code: 'U99', text: 'Urinveissykdom IKA' },\n\t\t{ code: 'W01', text: 'Spørsmål om svangerskap' },\n\t\t{ code: 'W02', text: 'Engstelig for svangerskap' },\n\t\t{ code: 'W03', text: 'Blødning svangerskap' },\n\t\t{ code: 'W05', text: 'Kvalme/brekninger svangerskap' },\n\t\t{ code: 'W10', text: 'Prevensjon postkoital antikonsepsjon' },\n\t\t{ code: 'W11', text: 'Prevensjon p-pille' },\n\t\t{ code: 'W12', text: 'Prevensjon spiral' },\n\t\t{ code: 'W13', text: 'Sterilisering (K)' },\n\t\t{ code: 'W14', text: 'Prevensjon IKA (K)' },\n\t\t{ code: 'W15', text: 'Infertilitet (K)' },\n\t\t{ code: 'W17', text: 'Blødning etter fødsel' },\n\t\t{ code: 'W18', text: 'Postpartum symptomer/plager IKA' },\n\t\t{ code: 'W19', text: 'Amming symptomer/plager' },\n\t\t{ code: 'W21', text: 'Bekymret/opptatt av utseende sv skap' },\n\t\t{ code: 'W27', text: 'Engstelig for komplik sv skap/fødsel' },\n\t\t{ code: 'W28', text: 'Red funksjonsevne svangerskapsprobl' },\n\t\t{ code: 'W29', text: 'Sv skap/fødsel sympt/plager IKA' },\n\t\t{ code: 'W30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'W31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'W32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'W33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'W34', text: 'Blodprøve IKA' },\n\t\t{ code: 'W35', text: 'Urinprøve IKA' },\n\t\t{ code: 'W36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'W37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'W38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'W39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'W40', text: 'Endoskopi' },\n\t\t{ code: 'W41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'W42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'W43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'W44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'W45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'W46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'W47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'W48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'W49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'W50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'W51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'W52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'W53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'W54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'W55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'W56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'W57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'W58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'W59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'W60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'W61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'W62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'W63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'W64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'W65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'W66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'W67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'W68', text: 'Henvisning IKA' },\n\t\t{ code: 'W69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'W70', text: 'Infeksjon/sepsis barseltid' },\n\t\t{ code: 'W71', text: 'Infeksjon som kompliser sv skap IKA' },\n\t\t{ code: 'W72', text: 'Ondartet svulst svangerskap' },\n\t\t{ code: 'W73', text: 'Godartet/uspes svulst sv skap' },\n\t\t{ code: 'W75', text: 'Skade som kompliserer svangerskap' },\n\t\t{ code: 'W76', text: 'Medfødt feil som kompliserer sv skap' },\n\t\t{ code: 'W78', text: 'Svangerskap bekreftet' },\n\t\t{ code: 'W781', text: 'Svangerskapskontroll' },\n\t\t{ code: 'W79', text: 'Uønsket svangerskap' },\n\t\t{ code: 'W80', text: 'Ekstrauterint svangerskap' },\n\t\t{ code: 'W81', text: 'Svangerskapsforgiftning' },\n\t\t{ code: 'W82', text: 'Abort spontan' },\n\t\t{ code: 'W83', text: 'Abort fremkalt' },\n\t\t{ code: 'W84', text: 'Svangerskap høyrisiko' },\n\t\t{ code: 'W85', text: 'Svangerskapsdiabetes' },\n\t\t{ code: 'W90', text: 'Ukomplisert fødsel levendefødt barn' },\n\t\t{ code: 'W91', text: 'Ukomplisert fødsel dødfødt barn' },\n\t\t{ code: 'W92', text: 'Komplisert fødsel levendefødt barn' },\n\t\t{ code: 'W93', text: 'Komplisert fødsel dødfødt barn' },\n\t\t{ code: 'W94', text: 'Mastitt i barseltid' },\n\t\t{ code: 'W95', text: 'Brystsykdom i sv skap/barseltid IKA' },\n\t\t{ code: 'W96', text: 'Komplikasjoner i barseltid IKA' },\n\t\t{ code: 'W99', text: 'Svangersk/føds/barsel sykd IKA' },\n\t\t{ code: 'X01', text: 'Smerte kjønnsorgan (K)' },\n\t\t{ code: 'X02', text: 'Menstruasjonssmerter' },\n\t\t{ code: 'X03', text: 'Intermenstruelle smerter' },\n\t\t{ code: 'X04', text: 'Smerte samleie (K)' },\n\t\t{ code: 'X05', text: 'Menstruasjon sparsom/sjelden' },\n\t\t{ code: 'X06', text: 'Menstruasjon kraftig' },\n\t\t{ code: 'X07', text: 'Menstruasjon uregelmessig/hyppig' },\n\t\t{ code: 'X08', text: 'Intermenstruell blødning' },\n\t\t{ code: 'X09', text: 'Premenstruelle symptomer/plager' },\n\t\t{ code: 'X10', text: 'Forskyvning menstruasjon' },\n\t\t{ code: 'X11', text: 'Klimakterium symptomer/plager' },\n\t\t{ code: 'X12', text: 'Postmenopausal blødning' },\n\t\t{ code: 'X13', text: 'Blødning etter samleie' },\n\t\t{ code: 'X14', text: 'Utflod fra skjeden' },\n\t\t{ code: 'X15', text: 'Skjede symptomer/plager IKA' },\n\t\t{ code: 'X16', text: 'Vulva symptomer/plager' },\n\t\t{ code: 'X17', text: 'Underliv symptomer/plager (K)' },\n\t\t{ code: 'X18', text: 'Smerte bryst (K)' },\n\t\t{ code: 'X19', text: 'Kul i bryst IKA (K)' },\n\t\t{ code: 'X20', text: 'Brystvorte symptomer/plager (K)' },\n\t\t{ code: 'X21', text: 'Bryst symptomer/plager IKA (K)' },\n\t\t{ code: 'X22', text: 'Bekymret/oppt av utseende bryst (K)' },\n\t\t{ code: 'X23', text: 'Engstelig for kjønnssykdom (K)' },\n\t\t{ code: 'X24', text: 'Engstelig for seksuell dysfunk (K)' },\n\t\t{ code: 'X25', text: 'Engstelig for kreft kjønnsorgan (K)' },\n\t\t{ code: 'X26', text: 'Engstelig for brystkreft (K)' },\n\t\t{ code: 'X27', text: 'Engstelig sykd kj org/bryst IKA (K)' },\n\t\t{ code: 'X28', text: 'Red funksjonevne probl kjønnsorg (K)' },\n\t\t{ code: 'X29', text: 'Kjønnsorgan sympt/plager IKA (K)' },\n\t\t{ code: 'X30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'X31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'X32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'X33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'X34', text: 'Blodprøve IKA' },\n\t\t{ code: 'X35', text: 'Urinprøve IKA' },\n\t\t{ code: 'X36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'X37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'X38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'X39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'X40', text: 'Endoskopi' },\n\t\t{ code: 'X41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'X42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'X43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'X44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'X45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'X46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'X47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'X48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'X49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'X50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'X51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'X52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'X53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'X54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'X55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'X56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'X57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'X58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'X59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'X60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'X61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'X62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'X63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'X64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'X65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'X66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'X67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'X68', text: 'Henvisning IKA' },\n\t\t{ code: 'X69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'X70', text: 'Syfilis (K)' },\n\t\t{ code: 'X71', text: 'Gonokokkinfeksjon (K)' },\n\t\t{ code: 'X72', text: 'Candidainfeksjon urogenitalt (K)' },\n\t\t{ code: 'X73', text: 'Trikomonasinfeksjon urogenitalt (K)' },\n\t\t{ code: 'X74', text: 'Underlivsinfeksjon IKA (K)' },\n\t\t{ code: 'X75', text: 'Ondartet svulst livmorhals' },\n\t\t{ code: 'X76', text: 'Ondartet svulst bryst (K)' },\n\t\t{ code: 'X77', text: 'Ondartet svulst kjønnsorg IKA (K)' },\n\t\t{ code: 'X78', text: 'Godartet svulst livmor' },\n\t\t{ code: 'X79', text: 'Godartet svulst bryst (K)' },\n\t\t{ code: 'X80', text: 'Godartet svulst kjønnsorg IKA (K)' },\n\t\t{ code: 'X81', text: 'Uspes svulst kjønnsorg IKA (K)' },\n\t\t{ code: 'X82', text: 'Skade kjønnsorgan (K)' },\n\t\t{ code: 'X83', text: 'Medfødt feil kjønnsorgan (K)' },\n\t\t{ code: 'X84', text: 'Vaginitt/vulvitt IKA' },\n\t\t{ code: 'X85', text: 'Sykdom i livmorhals IKA' },\n\t\t{ code: 'X86', text: 'Cytologi livmorhals unormal' },\n\t\t{ code: 'X87', text: 'Fremfall kjønnsorgan (K)' },\n\t\t{ code: 'X88', text: 'Godartet mammadysplasi' },\n\t\t{ code: 'X89', text: 'Premenstruelt tensjonssyndrom' },\n\t\t{ code: 'X90', text: 'Genital herpesvirusinfeksjon (K)' },\n\t\t{ code: 'X91', text: 'Condylomata acuminata (K)' },\n\t\t{ code: 'X92', text: 'Klamydiainfeksjon urogenitalt (K)' },\n\t\t{ code: 'X99', text: 'Kjønnsorgan sykdom IKA (K)' },\n\t\t{ code: 'Y01', text: 'Smerte penis' },\n\t\t{ code: 'Y02', text: 'Smerte testikkel/skrotum' },\n\t\t{ code: 'Y03', text: 'Utflod urinrør/penis' },\n\t\t{ code: 'Y04', text: 'Penis symptomer/plager IKA' },\n\t\t{ code: 'Y05', text: 'Skrotum/testikkel sympt/plager IKA' },\n\t\t{ code: 'Y06', text: 'Prostata symptomer/plager' },\n\t\t{ code: 'Y07', text: 'Impotens organisk betinget' },\n\t\t{ code: 'Y08', text: 'Seksuelt problem IKA (M)' },\n\t\t{ code: 'Y10', text: 'Infertilitet (M)' },\n\t\t{ code: 'Y13', text: 'Sterilisering (M)' },\n\t\t{ code: 'Y14', text: 'Prevensjon IKA (M)' },\n\t\t{ code: 'Y16', text: 'Bryst symptomer/plager (M)' },\n\t\t{ code: 'Y24', text: 'Engstelig for seksuell dysfunk (M)' },\n\t\t{ code: 'Y25', text: 'Engstelig for kjønnsykdom (M)' },\n\t\t{ code: 'Y26', text: 'Engstelig for kreft kjønnsorgan (M)' },\n\t\t{ code: 'Y27', text: 'Engstelig for sykd kjønnsorg IKA (M)' },\n\t\t{ code: 'Y28', text: 'Red funksjonsevne prob kjønnsorg (M)' },\n\t\t{ code: 'Y29', text: 'Kjønnsorgan sympt/plager IKA (M)' },\n\t\t{ code: 'Y30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'Y31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'Y32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'Y33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'Y34', text: 'Blodprøve IKA' },\n\t\t{ code: 'Y35', text: 'Urinprøve IKA' },\n\t\t{ code: 'Y36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'Y37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'Y38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'Y39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'Y40', text: 'Endoskopi' },\n\t\t{ code: 'Y41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'Y42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'Y43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'Y44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'Y45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'Y46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'Y47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'Y48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'Y49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'Y50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'Y51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'Y52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'Y53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'Y54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'Y55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'Y56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'Y57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'Y58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'Y59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'Y60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'Y61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'Y62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'Y63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'Y64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'Y65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'Y66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'Y67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'Y68', text: 'Henvisning IKA' },\n\t\t{ code: 'Y69', text: 'Kontaktårsak IKA' },\n\t\t{ code: 'Y70', text: 'Syfilis (M)' },\n\t\t{ code: 'Y71', text: 'Gonokokkinfeksjon (M)' },\n\t\t{ code: 'Y72', text: 'Genital herpesvirusinfeksjon (M)' },\n\t\t{ code: 'Y73', text: 'Prostatitt/vesikulitt' },\n\t\t{ code: 'Y74', text: 'Orkitt/epididymitt' },\n\t\t{ code: 'Y75', text: 'Balanopostitt' },\n\t\t{ code: 'Y76', text: 'Condylomata acuminata (M)' },\n\t\t{ code: 'Y77', text: 'Ondartet svulst prostata' },\n\t\t{ code: 'Y78', text: 'Ondartet svulst kjønnsorg IKA (M)' },\n\t\t{ code: 'Y79', text: 'Godartet/uspes svulst kjønnsorg (M)' },\n\t\t{ code: 'Y80', text: 'Skade kjønnsorgan (M)' },\n\t\t{ code: 'Y81', text: 'Fimose/overflødig forhud' },\n\t\t{ code: 'Y82', text: 'Hypospadi' },\n\t\t{ code: 'Y83', text: 'Ikke-descendert testikkel' },\n\t\t{ code: 'Y84', text: 'Medfødt feil kjønnsorgan IKA (M)' },\n\t\t{ code: 'Y85', text: 'Prostatahyperplasi' },\n\t\t{ code: 'Y86', text: 'Hydrocele' },\n\t\t{ code: 'Y99', text: 'Kjønnsorgan sykdom IKA (M)' },\n\t\t{ code: 'Z01', text: 'Problem økonomi/fattigdom' },\n\t\t{ code: 'Z02', text: 'Problem drikkevann/mat' },\n\t\t{ code: 'Z03', text: 'Problem bolig/nabolag' },\n\t\t{ code: 'Z04', text: 'Problem sosialt/kulturelt' },\n\t\t{ code: 'Z05', text: 'Problem arbeidsforhold/yrke' },\n\t\t{ code: 'Z06', text: 'Problem arbeidsledighet' },\n\t\t{ code: 'Z07', text: 'Problem utdannelse' },\n\t\t{ code: 'Z08', text: 'Problem sosial velferd/trygd' },\n\t\t{ code: 'Z09', text: 'Problem jus/politi' },\n\t\t{ code: 'Z10', text: 'Problem helsetjen/tilgjengelighet' },\n\t\t{ code: 'Z11', text: 'Problem det å være syk/compliance' },\n\t\t{ code: 'Z12', text: 'Problem mellom samlivspartnere' },\n\t\t{ code: 'Z13', text: 'Problem atferd samlivspartner' },\n\t\t{ code: 'Z14', text: 'Problem sykdom hos partner' },\n\t\t{ code: 'Z15', text: 'Problem tap/dødsfall av partner' },\n\t\t{ code: 'Z16', text: 'Problem med/i forhold til barn' },\n\t\t{ code: 'Z18', text: 'Problem sykdom hos barn' },\n\t\t{ code: 'Z19', text: 'Problem tap/dødsfall av barn' },\n\t\t{ code: 'Z20', text: 'Problem forhold til foreldre/familie' },\n\t\t{ code: 'Z21', text: 'Problem atferd foreldre/familie' },\n\t\t{ code: 'Z22', text: 'Problem med sykdom hos foreldre/fam' },\n\t\t{ code: 'Z23', text: 'Problem tap/dødsfall av foreldre/fam' },\n\t\t{ code: 'Z24', text: 'Problem med forhold til venner' },\n\t\t{ code: 'Z25', text: 'Problem vold/traumatisk hendelse' },\n\t\t{ code: 'Z27', text: 'Engstelig for sosialt problem' },\n\t\t{ code: 'Z28', text: 'Redusert funksjonsevne sosialt probl' },\n\t\t{ code: 'Z29', text: 'Sosialt problem IKA' },\n\t\t{ code: 'Z30', text: 'Medisinsk undersøkelse fullstendig' },\n\t\t{ code: 'Z31', text: 'Medisinsk undersøkelse målrettet' },\n\t\t{ code: 'Z32', text: 'Sensitivitetsprøve' },\n\t\t{ code: 'Z33', text: 'Mikrobiologisk/immunologisk prøve' },\n\t\t{ code: 'Z34', text: 'Blodprøve IKA' },\n\t\t{ code: 'Z35', text: 'Urinprøve IKA' },\n\t\t{ code: 'Z36', text: 'Avføringsprøve IKA' },\n\t\t{ code: 'Z37', text: 'Histologisk/cytologisk prøve' },\n\t\t{ code: 'Z38', text: 'Laboratorieprøve IKA' },\n\t\t{ code: 'Z39', text: 'Fysisk funksjonsprøve' },\n\t\t{ code: 'Z40', text: 'Endoskopi' },\n\t\t{ code: 'Z41', text: 'Billeddiagnostikk' },\n\t\t{ code: 'Z42', text: 'Biosignalundersøkelse IKA' },\n\t\t{ code: 'Z43', text: 'Diagnostisk prosedyre IKA' },\n\t\t{ code: 'Z44', text: 'Forebyggende vaksinering/medikasjon' },\n\t\t{ code: 'Z45', text: 'Helseopplysning/rådgivning' },\n\t\t{ code: 'Z46', text: 'Kontakt med primærhelsetjenesten' },\n\t\t{ code: 'Z47', text: 'Kontakt med spesialist' },\n\t\t{ code: 'Z48', text: 'Vurdering av kontaktårsak/behov' },\n\t\t{ code: 'Z49', text: 'Forebyggende prosedyre IKA' },\n\t\t{ code: 'Z50', text: 'Legemiddelforskrivning/-administrasj' },\n\t\t{ code: 'Z51', text: 'Incisjon/tapping/aspirasjon' },\n\t\t{ code: 'Z52', text: 'Fjerne vev/biopsi/kauterisasjon' },\n\t\t{ code: 'Z53', text: 'Kateterisering/intub/dilatasjon' },\n\t\t{ code: 'Z54', text: 'Fiksering/suturering/gips/protese' },\n\t\t{ code: 'Z55', text: 'Lokal injeksjon/infiltrasjon' },\n\t\t{ code: 'Z56', text: 'Bandasje/kompresjon/tamponade' },\n\t\t{ code: 'Z57', text: 'Fysikalsk behandling/rehabilitering' },\n\t\t{ code: 'Z58', text: 'Terapeutisk rådgivning/samtale' },\n\t\t{ code: 'Z59', text: 'Terapeutisk tiltak/småkirurgi IKA' },\n\t\t{ code: 'Z60', text: 'Resultat av prøve/prosedyre' },\n\t\t{ code: 'Z61', text: 'Resultat undersøkelse/epikrise' },\n\t\t{ code: 'Z62', text: 'Administrativ prosedyre' },\n\t\t{ code: 'Z63', text: 'Observasjon/oppfølging IKA' },\n\t\t{ code: 'Z64', text: 'Kontakt forårsaket av helsepersonell' },\n\t\t{ code: 'Z65', text: 'Kontakt forårsaket annen enn pasient' },\n\t\t{ code: 'Z66', text: 'Henvisning annet helsepersonell IKA' },\n\t\t{ code: 'Z67', text: 'Henvisning spesialist/sykehus' },\n\t\t{ code: 'Z68', text: 'Henvisning IKA' },\n\t\t{ code: 'Z69', text: 'Kontaktårsak IKA' }\n\t]\n}\n","import { Diagnoser } from './Diagnoser'\n\nexport const SelectOptionsDiagnoser = () => {\n\treturn Diagnoser.ICPC2.map(diagnose => ({\n\t\tvalue: diagnose.code,\n\t\tlabel: `${diagnose.code} - ${diagnose.text}`,\n\t\tdiagnoseNavn: diagnose.text\n\t}))\n}\n","import React from 'react'\nimport LoadableComponent, { Feilmelding } from '~/components/ui/loading/LoadableComponent'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { SelectOptionsOppslag } from '~/service/SelectOptionsOppslag'\nimport { ErrorBoundary } from '~/components/ui/appError/ErrorBoundary'\n\ninterface HelsepersonellSelect {\n\tname: string\n\tlabel: string\n\tafterChange: Function\n}\n\ntype Option = {\n\tvalue: string\n\tlabel: string\n\tfnr: string\n\tfornavn: string\n\tmellomnavn?: string\n\tetternavn: string\n\thprId: string\n\tsamhandlerType: string\n}\n\nexport default ({ name, label, afterChange }: HelsepersonellSelect) => {\n\tfunction mapSamhandlerType(samhandlerType: string) {\n\t\tswitch (samhandlerType) {\n\t\t\tcase 'KI':\n\t\t\t\treturn 'KIROPRAKTOR'\n\t\t\tcase 'LE':\n\t\t\t\treturn 'LEGE'\n\t\t\tcase 'FT':\n\t\t\t\treturn 'FYSIOTERAPEUT'\n\t\t\tcase 'TL':\n\t\t\t\treturn 'TANNLEGE'\n\t\t\tcase 'MT':\n\t\t\t\treturn 'MANUELLTERAPEUT'\n\t\t\tdefault:\n\t\t\t\treturn samhandlerType\n\t\t}\n\t}\n\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<LoadableComponent\n\t\t\t\tonFetch={() =>\n\t\t\t\t\tSelectOptionsOppslag.hentHelsepersonell().then(response =>\n\t\t\t\t\t\tresponse.helsepersonell.map((helsepersonell: Option) => ({\n\t\t\t\t\t\t\tvalue: helsepersonell.fnr,\n\t\t\t\t\t\t\tlabel: `${helsepersonell.fnr} - ${helsepersonell.fornavn} \n\t\t\t\t\t\t\t${helsepersonell.mellomnavn ? helsepersonell.mellomnavn : ''} \n\t\t\t\t\t\t\t${helsepersonell.etternavn} \n\t\t\t\t\t\t\t(${mapSamhandlerType(helsepersonell.samhandlerType)})`,\n\t\t\t\t\t\t\tfnr: helsepersonell.fnr,\n\t\t\t\t\t\t\tfornavn: helsepersonell.fornavn,\n\t\t\t\t\t\t\tmellomnavn: helsepersonell.mellomnavn,\n\t\t\t\t\t\t\tetternavn: helsepersonell.etternavn,\n\t\t\t\t\t\t\thprId: helsepersonell.hprId,\n\t\t\t\t\t\t\tsamhandlerType: mapSamhandlerType(helsepersonell.samhandlerType)\n\t\t\t\t\t\t}))\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\trender={(data: Array<Option>, feilmelding: Feilmelding) => (\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\toptions={data}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tsize=\"xxxlarge\"\n\t\t\t\t\t\tafterChange={afterChange}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tfeil={feilmelding}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</ErrorBoundary>\n\t)\n}\n","import React from 'react'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { OrganisasjonMedArbeidsforholdSelect } from '~/components/organisasjonSelect'\nimport { SelectOptionsDiagnoser } from './SelectOptionsDiagnoser'\nimport HelsepersonellSelect from './HelsepersonellSelect'\nimport { ArbeidKodeverk } from '~/config/kodeverk'\nimport {\n\tArbeidsgiver,\n\tHelsepersonell,\n\tSykemeldingForm\n} from '~/components/fagsystem/sykdom/SykemeldingTypes'\n\ntype DiagnoseSelect = {\n\tdiagnoseNavn: string\n}\n\nconst initialValuesDiagnose = {\n\tdiagnose: '',\n\tdiagnosekode: '',\n\tsystem: ''\n}\n\nconst initialValuesPeriode = {\n\taktivitet: {\n\t\taktivitet: null as string,\n\t\tbehandlingsdager: 0,\n\t\tgrad: 0,\n\t\treisetilskudd: false\n\t},\n\tfom: '',\n\ttom: ''\n}\n\nconst KODESYSTEM = '2.16.578.1.12.4.1.1.7170'\n\nexport const DetaljertSykemelding = ({ formikBag }: SykemeldingForm) => {\n\tconst handleDiagnoseChange = (v: DiagnoseSelect, path: string) => {\n\t\tformikBag.setFieldValue(`${path}.diagnose`, v.diagnoseNavn)\n\t\tformikBag.setFieldValue(`${path}.system`, KODESYSTEM)\n\t}\n\n\tconst handleLegeChange = (v: Helsepersonell) => {\n\t\tformikBag.setFieldValue('sykemelding.detaljertSykemelding.helsepersonell', {\n\t\t\tetternavn: v.etternavn,\n\t\t\tfornavn: v.fornavn,\n\t\t\thprId: v.hprId,\n\t\t\tident: v.fnr,\n\t\t\tmellomnavn: v.mellomnavn,\n\t\t\tsamhandlerType: v.samhandlerType\n\t\t})\n\t}\n\n\tconst handleArbeidsgiverChange = (v: Arbeidsgiver) => {\n\t\tformikBag.setFieldValue('sykemelding.detaljertSykemelding.mottaker', {\n\t\t\tnavn: v.navn,\n\t\t\torgNr: v.orgnr,\n\t\t\tadresse: {\n\t\t\t\tby: v.forretningsAdresse.poststed,\n\t\t\t\tgate: v.forretningsAdresse.adresse,\n\t\t\t\tland: v.forretningsAdresse.landkode,\n\t\t\t\tpostnummer: v.forretningsAdresse.postnr\n\t\t\t}\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className=\"flexbox--wrap\">\n\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t<FormikDatepicker name=\"sykemelding.detaljertSykemelding.startDato\" label=\"Startdato\" />\n\t\t\t\t<FormikCheckbox\n\t\t\t\t\tname=\"sykemelding.detaljertSykemelding.umiddelbarBistand\"\n\t\t\t\t\tlabel=\"Trenger umiddelbar bistand\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tcheckboxMargin\n\t\t\t\t/>\n\t\t\t\t<FormikCheckbox\n\t\t\t\t\tname=\"sykemelding.detaljertSykemelding.manglendeTilretteleggingPaaArbeidsplassen\"\n\t\t\t\t\tlabel=\"Manglende tilrettelegging på arbeidsplassen\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tcheckboxMargin\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Kategori title=\"Diagnose\" vis=\"sykemelding\">\n\t\t\t\t<div className=\"flexbox--flex-wrap\">\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname=\"sykemelding.detaljertSykemelding.hovedDiagnose.diagnosekode\"\n\t\t\t\t\t\tlabel=\"Diagnose\"\n\t\t\t\t\t\toptions={SelectOptionsDiagnoser()}\n\t\t\t\t\t\tafterChange={(v: DiagnoseSelect) =>\n\t\t\t\t\t\t\thandleDiagnoseChange(v, 'sykemelding.detaljertSykemelding.hovedDiagnose')\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Kategori>\n\t\t\t<FormikDollyFieldArray\n\t\t\t\tname=\"sykemelding.detaljertSykemelding.biDiagnoser\"\n\t\t\t\theader=\"Bidiagnose\"\n\t\t\t\tnewEntry={initialValuesDiagnose}\n\t\t\t>\n\t\t\t\t{(path: string) => (\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.diagnosekode`}\n\t\t\t\t\t\tlabel=\"Diagnose\"\n\t\t\t\t\t\toptions={SelectOptionsDiagnoser()}\n\t\t\t\t\t\tafterChange={(v: DiagnoseSelect) => handleDiagnoseChange(v, path)}\n\t\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</FormikDollyFieldArray>\n\t\t\t<Kategori title=\"Helsepersonell\" vis=\"sykemelding\">\n\t\t\t\t<HelsepersonellSelect\n\t\t\t\t\tname=\"sykemelding.detaljertSykemelding.helsepersonell.ident\"\n\t\t\t\t\tlabel=\"Helsepersonell\"\n\t\t\t\t\tafterChange={(v: Helsepersonell) => handleLegeChange(v)}\n\t\t\t\t/>\n\t\t\t</Kategori>\n\t\t\t<Kategori title=\"Arbeidsgiver\" vis=\"sykemelding\">\n\t\t\t\t<OrganisasjonMedArbeidsforholdSelect\n\t\t\t\t\tpath=\"sykemelding.detaljertSykemelding.arbeidsgiver.navn\"\n\t\t\t\t\tlabel=\"Navn\"\n\t\t\t\t\tafterChange={(v: Arbeidsgiver) => handleArbeidsgiverChange(v)}\n\t\t\t\t\tvalueNavn={true}\n\t\t\t\t/>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname=\"sykemelding.detaljertSykemelding.arbeidsgiver.yrkesbetegnelse\"\n\t\t\t\t\tlabel=\"Yrkesbetegnelse\"\n\t\t\t\t\tkodeverk={ArbeidKodeverk.Yrker}\n\t\t\t\t\tsize=\"xxxlarge\"\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\toptionHeight={50}\n\t\t\t\t/>\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tname=\"sykemelding.detaljertSykemelding.arbeidsgiver.stillingsprosent\"\n\t\t\t\t\tlabel=\"Stillingsprosent\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t/>\n\t\t\t</Kategori>\n\t\t\t<FormikDollyFieldArray\n\t\t\t\tname=\"sykemelding.detaljertSykemelding.perioder\"\n\t\t\t\theader=\"Periode\"\n\t\t\t\tnewEntry={initialValuesPeriode}\n\t\t\t>\n\t\t\t\t{(path: string) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FormikDatepicker name={`${path}.fom`} label=\"F.o.m. dato\" />\n\t\t\t\t\t\t<FormikDatepicker name={`${path}.tom`} label=\"T.o.m. dato\" />\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.aktivitet.aktivitet`}\n\t\t\t\t\t\t\tlabel=\"Aktivitet\"\n\t\t\t\t\t\t\toptions={Options('aktivitet')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikTextInput\n\t\t\t\t\t\t\tname={`${path}.aktivitet.behandlingsdager`}\n\t\t\t\t\t\t\tlabel=\"Antall behandlingsdager\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikTextInput name={`${path}.aktivitet.grad`} label=\"Grad\" type=\"number\" />\n\t\t\t\t\t\t<FormikCheckbox\n\t\t\t\t\t\t\tname={`${path}.aktivitet.reisetilskudd`}\n\t\t\t\t\t\t\tlabel=\"Har reisetilskudd\"\n\t\t\t\t\t\t\tcheckboxMargin\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</FormikDollyFieldArray>\n\t\t\t<Kategori title=\"Detaljer\" vis=\"sykemelding\">\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tname=\"sykemelding.detaljertSykemelding.detaljer.tiltakNav\"\n\t\t\t\t\tlabel=\"Tiltak fra Nav\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tname=\"sykemelding.detaljertSykemelding.detaljer.tiltakArbeidsplass\"\n\t\t\t\t\tlabel=\"Tiltak på arbeidsplass\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tname=\"sykemelding.detaljertSykemelding.detaljer.beskrivHensynArbeidsplassen\"\n\t\t\t\t\tlabel=\"Hensyn på arbeidsplass\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\t\t\t\t<FormikCheckbox\n\t\t\t\t\tname=\"sykemelding.detaljertSykemelding.detaljer.arbeidsforEtterEndtPeriode\"\n\t\t\t\t\tlabel=\"Arbeidsfør etter endt periode\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tcheckboxMargin\n\t\t\t\t/>\n\t\t\t</Kategori>\n\t\t</div>\n\t)\n}\n","import React, { useState } from 'react'\nimport { get as _get } from 'lodash'\nimport { ToggleGruppe, ToggleKnapp } from '~/components/ui/toggle/Toggle'\nimport { SyntSykemelding } from './SyntSykemelding'\nimport { DetaljertSykemelding } from './DetaljertSykemelding'\nimport { SykemeldingForm, Diagnose } from '~/components/fagsystem/sykdom/SykemeldingTypes'\n\nconst initialValuesSyntSykemelding = {\n\tsyntSykemelding: {\n\t\tstartDato: new Date(),\n\t\torgnummer: '',\n\t\tarbeidsforholdId: ''\n\t}\n}\n\nconst initialValuesDetaljertSykemelding = {\n\tdetaljertSykemelding: {\n\t\tarbeidsgiver: {\n\t\t\tnavn: '',\n\t\t\tstillingsprosent: 100,\n\t\t\tyrkesbetegnelse: ''\n\t\t},\n\t\tbiDiagnoser: [] as Array<Diagnose>,\n\t\tdetaljer: {\n\t\t\tarbeidsforEtterEndtPeriode: false,\n\t\t\tbeskrivHensynArbeidsplassen: '',\n\t\t\ttiltakArbeidsplass: '',\n\t\t\ttiltakNav: ''\n\t\t},\n\t\thovedDiagnose: {\n\t\t\tdiagnose: '',\n\t\t\tdiagnosekode: '',\n\t\t\tsystem: ''\n\t\t},\n\t\thelsepersonell: {\n\t\t\tetternavn: '',\n\t\t\tfornavn: '',\n\t\t\thprId: '',\n\t\t\tident: '',\n\t\t\tmellomnavn: '',\n\t\t\tsamhandlerType: ''\n\t\t},\n\t\tmanglendeTilretteleggingPaaArbeidsplassen: false,\n\t\tmottaker: {\n\t\t\tnavn: '',\n\t\t\torgNr: '',\n\t\t\tadresse: {\n\t\t\t\tby: '',\n\t\t\t\tgate: '',\n\t\t\t\tland: '',\n\t\t\t\tpostnummer: ''\n\t\t\t}\n\t\t},\n\t\tperioder: [\n\t\t\t{\n\t\t\t\taktivitet: {\n\t\t\t\t\taktivitet: null as string,\n\t\t\t\t\tbehandlingsdager: 0,\n\t\t\t\t\tgrad: 0,\n\t\t\t\t\treisetilskudd: false\n\t\t\t\t},\n\t\t\t\tfom: '',\n\t\t\t\ttom: ''\n\t\t\t}\n\t\t],\n\t\tstartDato: new Date(),\n\t\tumiddelbarBistand: false\n\t}\n}\n\nenum SykemeldingTyper {\n\tdetaljert = 'DETALJERT',\n\tsynt = 'SYNT'\n}\n\nexport const Sykemelding = ({ formikBag }: SykemeldingForm) => {\n\tconst [typeSykemelding, setTypeSykemelding] = useState(\n\t\t_get(formikBag.values, 'sykemelding').hasOwnProperty('detaljertSykemelding')\n\t\t\t? SykemeldingTyper.detaljert\n\t\t\t: SykemeldingTyper.synt\n\t)\n\n\tconst handleToggleChange = (event: React.ChangeEvent<any>) => {\n\t\tsetTypeSykemelding(event.target.value)\n\t\tif (event.target.value === SykemeldingTyper.detaljert) {\n\t\t\tformikBag.setFieldValue('sykemelding', initialValuesDetaljertSykemelding)\n\t\t} else formikBag.setFieldValue('sykemelding', initialValuesSyntSykemelding)\n\t}\n\n\tconst toggleValues = [\n\t\t{\n\t\t\tvalue: SykemeldingTyper.synt,\n\t\t\tlabel: 'Generer sykemelding automatisk'\n\t\t},\n\t\t{\n\t\t\tvalue: SykemeldingTyper.detaljert,\n\t\t\tlabel: 'Lag detaljert sykemelding'\n\t\t}\n\t]\n\n\treturn (\n\t\t<div className=\"toggle--wrapper\">\n\t\t\t<ToggleGruppe onChange={handleToggleChange} name=\"sykemelding\">\n\t\t\t\t{toggleValues.map(val => (\n\t\t\t\t\t<ToggleKnapp key={val.value} value={val.value} checked={typeSykemelding === val.value}>\n\t\t\t\t\t\t{val.label}\n\t\t\t\t\t</ToggleKnapp>\n\t\t\t\t))}\n\t\t\t</ToggleGruppe>\n\t\t\t{typeSykemelding === SykemeldingTyper.synt && <SyntSykemelding />}\n\t\t\t{typeSykemelding === SykemeldingTyper.detaljert && (\n\t\t\t\t<DetaljertSykemelding formikBag={formikBag} />\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import * as Yup from 'yup'\nimport { requiredDate, requiredString, requiredNumber, ifPresent } from '~/utils/YupValidations'\n\nexport const validation = {\n\tsykemelding: ifPresent(\n\t\t'$sykemelding',\n\t\tYup.object({\n\t\t\tsyntSykemelding: ifPresent(\n\t\t\t\t'$sykemelding.syntSykemelding',\n\t\t\t\tYup.object({\n\t\t\t\t\tstartDato: requiredDate,\n\t\t\t\t\torgnummer: requiredString\n\t\t\t\t})\n\t\t\t),\n\t\t\tdetaljertSykemelding: ifPresent(\n\t\t\t\t'$sykemelding.detaljertSykemelding',\n\t\t\t\tYup.object({\n\t\t\t\t\tstartDato: requiredDate,\n\t\t\t\t\thovedDiagnose: Yup.object({\n\t\t\t\t\t\tdiagnose: requiredString,\n\t\t\t\t\t\tdiagnosekode: requiredString\n\t\t\t\t\t}),\n\t\t\t\t\tbiDiagnoser: Yup.array().of(\n\t\t\t\t\t\tifPresent(\n\t\t\t\t\t\t\t'$sykemelding.detaljertSykemelding.biDiagnoser[0].diagnose',\n\t\t\t\t\t\t\tYup.object({\n\t\t\t\t\t\t\t\tdiagnose: requiredString,\n\t\t\t\t\t\t\t\tdiagnosekode: requiredString\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\thelsepersonell: Yup.object({\n\t\t\t\t\t\tetternavn: requiredString,\n\t\t\t\t\t\tfornavn: requiredString,\n\t\t\t\t\t\tident: requiredString,\n\t\t\t\t\t\thprId: requiredString\n\t\t\t\t\t}),\n\t\t\t\t\tarbeidsgiver: Yup.object({\n\t\t\t\t\t\tnavn: requiredString,\n\t\t\t\t\t\tstillingsprosent: requiredNumber.transform(num => (isNaN(num) ? undefined : num)),\n\t\t\t\t\t\tyrkesbetegnelse: requiredString\n\t\t\t\t\t}),\n\t\t\t\t\tperioder: Yup.array().of(\n\t\t\t\t\t\tYup.object({\n\t\t\t\t\t\t\taktivitet: Yup.object({}),\n\t\t\t\t\t\t\tfom: requiredDate,\n\t\t\t\t\t\t\ttom: requiredDate\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t)\n\t\t})\n\t)\n}\n","import React from 'react'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport Panel from '~/components/ui/panel/Panel'\nimport { panelError } from '~/components/ui/form/formUtils'\nimport { erForste } from '~/components/ui/form/formUtils'\nimport { Sykemelding } from './partials/Sykemelding'\nimport { validation } from './validation'\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper'\nimport { FormikProps } from 'formik'\nimport { AlertAaregRequired } from '~/components/ui/brukerAlert/AlertAaregRequired'\n\ninterface SykdomForm {\n\tformikBag: FormikProps<{}>\n}\n\nconst sykdomAttributt = 'sykemelding'\n\nexport const SykdomForm = ({ formikBag }: SykdomForm) => (\n\t// @ts-ignore\n\t<Vis attributt={sykdomAttributt}>\n\t\t<Panel\n\t\t\theading=\"Sykemelding\"\n\t\t\thasErrors={panelError(formikBag, sykdomAttributt)}\n\t\t\ticonType=\"sykdom\"\n\t\t\t// @ts-ignore\n\t\t\tstartOpen={() => erForste(formikBag.values, sykdomAttributt)}\n\t\t\tinformasjonstekst=\"Om du velger å generere en sykemelding automatisk, vil du få en syntetisk sykemelding hvor alle verdier blir satt for deg.\"\n\t\t>\n\t\t\t{!formikBag.values.hasOwnProperty('aareg') && (\n\t\t\t\t<AlertAaregRequired meldingSkjema=\"Sykemeldingen\" />\n\t\t\t)}\n\t\t\t{formikBag.values.sykemelding != null &&\n\t\t\t\tformikBag.values.sykemelding.hasOwnProperty('syntSykemelding') && (\n\t\t\t\t\t<AlertStripeInfo style={{ marginBottom: '20px' }}>\n\t\t\t\t\t\tSyntetisk sykemelding behandler en stor mengde data for å opprette realistiske\n\t\t\t\t\t\tsykemeldinger og kan derfor medføre litt lenger bestillingstid.\n\t\t\t\t\t</AlertStripeInfo>\n\t\t\t\t)}\n\t\t\t<Sykemelding formikBag={formikBag} />\n\t\t</Panel>\n\t</Vis>\n)\n\nSykdomForm.validation = validation\n","export const organisasjonPaths = [\n\t'organisasjon.enhetstype',\n\t'organisasjon.naeringskode',\n\t'organisasjon.sektorkode',\n\t'organisasjon.formaal',\n\t'organisasjon.stiftelsesdato',\n\t'organisasjon.maalform'\n]\n\nexport const kontaktPaths = ['organisasjon.telefon', 'organisasjon.epost', 'organisasjon.nettside']\n\nexport const adressePaths = ['organisasjon.forretningsadresse', 'organisasjon.postadresse']\n","import React, { useEffect, useState } from 'react'\nimport _get from 'lodash/get'\nimport _has from 'lodash/has'\nimport _set from 'lodash/set'\nimport _omit from 'lodash/omit'\nimport { organisasjonPaths } from '../paths'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikDollyFieldArray } from '~/components/ui/form/fieldArray/DollyFieldArray'\nimport { FormikDatepicker } from '~/components/ui/form/inputs/datepicker/Datepicker'\nimport { SelectOptionsManager as Options } from '~/service/SelectOptions'\nimport { OrganisasjonKodeverk } from '~/config/kodeverk'\nimport { ToggleGruppe, ToggleKnapp } from '~/components/ui/toggle/Toggle'\nimport { FormikProps } from 'formik'\nimport { EnhetBestilling } from '../../types'\nimport { Kontaktdata } from './Kontaktdata'\nimport { Adresser } from './Adresser'\n\ntype Detaljer = {\n\tformikBag: FormikProps<{ organisasjon: EnhetBestilling }>\n\tpath: string\n\tlevel: number\n\tnumber?: string\n\tmaaHaUnderenhet?: boolean\n}\n\nenum TypeUnderenhet {\n\tJURIDISKENHET = 'JURIDISKENHET',\n\tVIRKSOMHET = 'VIRKSOMHET'\n}\n\nexport const Detaljer = ({ formikBag, path, level, number, maaHaUnderenhet = true }: Detaljer) => {\n\tconst initialValues = _omit(formikBag.values.organisasjon, ['underenheter', 'sektorkode'])\n\tinitialValues.enhetstype = ''\n\n\tconst sektorkodeErValgt = formikBag.values.organisasjon.hasOwnProperty('sektorkode')\n\n\tuseEffect(() => {\n\t\tif (level === 0 && !_get(formikBag, `values.${path}.underenheter`)) {\n\t\t\tformikBag.setFieldValue(`${path}.underenheter`, [initialValues])\n\t\t}\n\t})\n\n\tconst [typeUnderenhet, setTypeUnderenhet] = useState(\n\t\tlevel === 0 ||\n\t\t\t(_has(formikBag.values, `${path}.underenheter`) &&\n\t\t\t\t_get(formikBag.values, `${path}.underenheter`))\n\t\t\t? TypeUnderenhet.JURIDISKENHET\n\t\t\t: TypeUnderenhet.VIRKSOMHET\n\t)\n\n\tconst handleToggleChange = (event: React.ChangeEvent<any>) => {\n\t\tsetTypeUnderenhet(event.target.value)\n\t\tformikBag.setFieldValue(`${path}.enhetstype`, '')\n\t\tif (event.target.value === TypeUnderenhet.VIRKSOMHET) {\n\t\t\tformikBag.setFieldValue(`${path}.underenheter`, undefined)\n\t\t\tsektorkodeErValgt && formikBag.setFieldValue(`${path}.sektorkode`, undefined)\n\t\t} else if (event.target.value === TypeUnderenhet.JURIDISKENHET && level < 4) {\n\t\t\tformikBag.setFieldValue(`${path}.underenheter`, [initialValues])\n\t\t\tsektorkodeErValgt && formikBag.setFieldValue(`${path}.sektorkode`, '')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Kategori title={!number ? 'Organisasjon' : null} vis={organisasjonPaths}>\n\t\t\t\t<div className=\"toggle--wrapper\">\n\t\t\t\t\t{level > 0 && (\n\t\t\t\t\t\t<ToggleGruppe onChange={handleToggleChange} name={path}>\n\t\t\t\t\t\t\t<ToggleKnapp\n\t\t\t\t\t\t\t\tkey={TypeUnderenhet.JURIDISKENHET}\n\t\t\t\t\t\t\t\tvalue={TypeUnderenhet.JURIDISKENHET}\n\t\t\t\t\t\t\t\tchecked={typeUnderenhet === TypeUnderenhet.JURIDISKENHET}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJuridisk enhet\n\t\t\t\t\t\t\t</ToggleKnapp>\n\t\t\t\t\t\t\t<ToggleKnapp\n\t\t\t\t\t\t\t\tkey={TypeUnderenhet.VIRKSOMHET}\n\t\t\t\t\t\t\t\tvalue={TypeUnderenhet.VIRKSOMHET}\n\t\t\t\t\t\t\t\tchecked={typeUnderenhet === TypeUnderenhet.VIRKSOMHET}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tVirksomhet\n\t\t\t\t\t\t\t</ToggleKnapp>\n\t\t\t\t\t\t</ToggleGruppe>\n\t\t\t\t\t)}\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.enhetstype`}\n\t\t\t\t\t\tlabel=\"Enhetstype\"\n\t\t\t\t\t\tkodeverk={\n\t\t\t\t\t\t\ttypeUnderenhet === TypeUnderenhet.JURIDISKENHET\n\t\t\t\t\t\t\t\t? OrganisasjonKodeverk.EnhetstyperJuridiskEnhet\n\t\t\t\t\t\t\t\t: OrganisasjonKodeverk.EnhetstyperVirksomhet\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsize=\"xxlarge\"\n\t\t\t\t\t\tfastfield={false}\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.naeringskode`}\n\t\t\t\t\tlabel=\"Næringskode\"\n\t\t\t\t\tkodeverk={OrganisasjonKodeverk.Naeringskoder}\n\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\toptionHeight={50}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\tvisHvisAvhuket\n\t\t\t\t/>\n\t\t\t\t{typeUnderenhet === TypeUnderenhet.JURIDISKENHET && (\n\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\tname={`${path}.sektorkode`}\n\t\t\t\t\t\tlabel=\"Sektorkode\"\n\t\t\t\t\t\tkodeverk={OrganisasjonKodeverk.Sektorkoder}\n\t\t\t\t\t\tsize=\"xxlarge\"\n\t\t\t\t\t\tisClearable={false}\n\t\t\t\t\t\tvisHvisAvhuket\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<FormikTextInput name={`${path}.formaal`} label=\"Formål\" size=\"xlarge\" />\n\t\t\t\t<FormikDatepicker name={`${path}.stiftelsesdato`} label=\"Stiftelsesdato\" />\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.maalform`}\n\t\t\t\t\tlabel=\"Målform\"\n\t\t\t\t\toptions={Options('maalform')}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\tvisHvisAvhuket\n\t\t\t\t/>\n\t\t\t</Kategori>\n\n\t\t\t<Kontaktdata path={path} />\n\n\t\t\t<Adresser formikBag={formikBag} path={path} />\n\n\t\t\t<FormikDollyFieldArray\n\t\t\t\tname={`${path}.underenheter`}\n\t\t\t\theader=\"Underenhet\"\n\t\t\t\tnewEntry={initialValues}\n\t\t\t\tdisabled={level > 3 || typeUnderenhet === TypeUnderenhet.VIRKSOMHET}\n\t\t\t\ttitle={\n\t\t\t\t\tlevel > 3\n\t\t\t\t\t\t? 'Du kan maksimalt lage fire nivåer av underenheter'\n\t\t\t\t\t\t: typeUnderenhet === TypeUnderenhet.VIRKSOMHET\n\t\t\t\t\t\t? 'Du kan ikke legge til underenheter på enhet av type virksomhet'\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\tcanBeEmpty={!maaHaUnderenhet || _get(formikBag, `values.${path}.enhetstype`) === 'ENK'}\n\t\t\t\ttag={number}\n\t\t\t\tisOrganisasjon={true}\n\t\t\t>\n\t\t\t\t{(path: string, idx: number, curr: any, number: string) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Detaljer\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\t\tpath={path}\n\t\t\t\t\t\t\tlevel={level + 1}\n\t\t\t\t\t\t\tnumber={number ? number : (level + 1).toString()}\n\t\t\t\t\t\t\tmaaHaUnderenhet={\n\t\t\t\t\t\t\t\ttypeUnderenhet === 'JURIDISKENHET' &&\n\t\t\t\t\t\t\t\t_get(formikBag, `values.${path}.enhetstype`) !== 'ENK'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</FormikDollyFieldArray>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { kontaktPaths } from '../paths'\n\ntype Kontaktdata = {\n\tpath: string\n}\n\nexport const Kontaktdata = ({ path }: Kontaktdata) => {\n\treturn (\n\t\t<Kategori title=\"Kontaktdata\" vis={kontaktPaths}>\n\t\t\t<FormikTextInput name={`${path}.telefon`} label=\"Telefon\" size=\"large\" type=\"number\" />\n\t\t\t<FormikTextInput name={`${path}.epost`} label=\"E-postadresse\" size=\"large\" />\n\t\t\t<FormikTextInput name={`${path}.nettside`} label=\"Internettadresse\" size=\"large\" />\n\t\t</Kategori>\n\t)\n}\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { Kategori } from '~/components/ui/form/kategori/Kategori'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { FormikSelect } from '~/components/ui/form/inputs/select/Select'\nimport { AdresseKodeverk } from '~/config/kodeverk'\nimport { FormikProps } from 'formik'\nimport { EnhetBestilling } from '../../types'\n\ntype Adresser = {\n\tformikBag: FormikProps<{ organisasjon: EnhetBestilling }>\n\tpath: string\n}\n\nconst hjelpetekstAdresser =\n\t'For å få generert en gyldig norsk adresse kan du velge å fylle ut postnummer, kommunenummer, eller ingen ting. Det vil opprettes en gyldig adresse på grunnlag av det du har fylt ut, og har du ikke fylt ut noe blir adressen en tilfeldig gyldig adresse.'\n\nexport const Adresser = ({ formikBag, path }: Adresser) => {\n\tconst landForretningsadresse = _get(formikBag, `values.${path}.forretningsadresse.landkode`)\n\tconst landPostadresse = _get(formikBag, `values.${path}.postadresse.landkode`)\n\n\tconst handleLandChange = (adressePath: string) => {\n\t\tformikBag.setFieldValue(`${adressePath}.postnr`, '')\n\t\tformikBag.setFieldValue(`${adressePath}.kommunenr`, '')\n\t\tformikBag.setFieldValue(`${adressePath}.poststed`, '')\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Kategori\n\t\t\t\ttitle=\"Forretningsadresse\"\n\t\t\t\tvis=\"organisasjon.forretningsadresse\"\n\t\t\t\thjelpetekst={hjelpetekstAdresser}\n\t\t\t>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.forretningsadresse.landkode`}\n\t\t\t\t\tlabel=\"Land\"\n\t\t\t\t\tkodeverk={AdresseKodeverk.ArbeidOgInntektLand}\n\t\t\t\t\tafterChange={() => handleLandChange(`${path}.forretningsadresse`)}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\n\t\t\t\t{landForretningsadresse === 'NO' ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.forretningsadresse.postnr`}\n\t\t\t\t\t\t\tlabel={'Postnummer/sted'}\n\t\t\t\t\t\t\tkodeverk={AdresseKodeverk.Postnummer}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.forretningsadresse.kommunenr`}\n\t\t\t\t\t\t\tlabel=\"Kommunenummer\"\n\t\t\t\t\t\t\tkodeverk={AdresseKodeverk.Kommunenummer}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<FormikTextInput name={`${path}.forretningsadresse.poststed`} label=\"Poststed\" />\n\t\t\t\t)}\n\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tname={`${path}.forretningsadresse.adresselinjer[0]`}\n\t\t\t\t\tlabel=\"Adresselinje 1\"\n\t\t\t\t/>\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tname={`${path}.forretningsadresse.adresselinjer[1]`}\n\t\t\t\t\tlabel=\"Adresselinje 2\"\n\t\t\t\t/>\n\t\t\t\t<FormikTextInput\n\t\t\t\t\tname={`${path}.forretningsadresse.adresselinjer[2]`}\n\t\t\t\t\tlabel=\"Adresselinje 3\"\n\t\t\t\t/>\n\t\t\t</Kategori>\n\n\t\t\t<Kategori\n\t\t\t\ttitle=\"Postadresse\"\n\t\t\t\tvis=\"organisasjon.postadresse\"\n\t\t\t\thjelpetekst={hjelpetekstAdresser}\n\t\t\t>\n\t\t\t\t<FormikSelect\n\t\t\t\t\tname={`${path}.postadresse.landkode`}\n\t\t\t\t\tlabel=\"Land\"\n\t\t\t\t\tkodeverk={AdresseKodeverk.ArbeidOgInntektLand}\n\t\t\t\t\tafterChange={() => handleLandChange(`${path}.postadresse`)}\n\t\t\t\t\tisClearable={false}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\t\t\t\t{landPostadresse === 'NO' ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.postadresse.postnr`}\n\t\t\t\t\t\t\tlabel={'Postnummer/sted'}\n\t\t\t\t\t\t\tkodeverk={AdresseKodeverk.Postnummer}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormikSelect\n\t\t\t\t\t\t\tname={`${path}.postadresse.kommunenr`}\n\t\t\t\t\t\t\tlabel=\"Kommunenummer\"\n\t\t\t\t\t\t\tkodeverk={AdresseKodeverk.Kommunenummer}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<FormikTextInput name={`${path}.postadresse.poststed`} label=\"Poststed\" />\n\t\t\t\t)}\n\t\t\t\t<FormikTextInput name={`${path}.postadresse.adresselinjer[0]`} label=\"Adresselinje 1\" />\n\t\t\t\t<FormikTextInput name={`${path}.postadresse.adresselinjer[1]`} label=\"Adresselinje 2\" />\n\t\t\t\t<FormikTextInput name={`${path}.postadresse.adresselinjer[2]`} label=\"Adresselinje 3\" />\n\t\t\t</Kategori>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport * as Yup from 'yup'\nimport { requiredString, ifPresent } from '~/utils/YupValidations'\nimport { Detaljer } from './partials/Detaljer'\nimport { Vis } from '~/components/bestillingsveileder/VisAttributt'\nimport { organisasjonPaths, kontaktPaths, adressePaths } from './paths'\nimport Panel from '~/components/ui/panel/Panel'\nimport { erForste, panelError } from '~/components/ui/form/formUtils'\nimport { FormikProps } from 'formik'\nimport { EnhetBestilling } from '~/components/fagsystem/organisasjoner/types'\n\ntype OrganisasjonForm = {\n\tformikBag: FormikProps<{ organisasjon: EnhetBestilling }>\n}\n\nconst detaljerPaths = [organisasjonPaths, kontaktPaths, adressePaths].flat()\n\nexport const OrganisasjonForm = ({ formikBag }: OrganisasjonForm) => {\n\treturn (\n\t\t<>\n\t\t\t{/* @ts-ignore */}\n\t\t\t<Vis attributt={detaljerPaths}>\n\t\t\t\t<Panel\n\t\t\t\t\theading=\"Detaljer\"\n\t\t\t\t\thasErrors={panelError(formikBag, detaljerPaths)}\n\t\t\t\t\ticonType={'personinformasjon'}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tstartOpen={() => erForste(formikBag.values, detaljerPaths)}\n\t\t\t\t>\n\t\t\t\t\t<Detaljer formikBag={formikBag} path=\"organisasjon\" level={0} />\n\t\t\t\t</Panel>\n\t\t\t</Vis>\n\t\t</>\n\t)\n}\n\nconst testSektorkode = (schema: any) => {\n\treturn schema.test(\n\t\t'sektorkode',\n\t\t'Juridisk enhet må ha sektorkode hvis valgt',\n\t\tfunction harSektorkode(value: string) {\n\t\t\tif (value === undefined || value !== '') return true\n\t\t\treturn this.createError({\n\t\t\t\tmessage: 'Feltet er påkrevd'\n\t\t\t})\n\t\t}\n\t)\n}\n\nconst adresse = Yup.object({\n\tadresselinje: Yup.array().of(Yup.string()),\n\tpostnr: Yup.string().nullable(),\n\tkommunenr: Yup.string().nullable(),\n\tlandkode: requiredString,\n\tpoststed: Yup.string()\n})\n\nconst organisasjon: any = Yup.object().shape({\n\tenhetstype: requiredString,\n\tnaeringskode: ifPresent('$organisasjon.naeringskode', requiredString),\n\tsektorkode: ifPresent('$organisasjon.sektorkode', testSektorkode(Yup.string())),\n\tformaal: ifPresent('$organisasjon.formaal', requiredString),\n\tstiftelsesdato: ifPresent('$organisasjon.stiftelsesdato', requiredString),\n\tmaalform: ifPresent('$organisasjon.maalform', requiredString),\n\ttelefon: ifPresent('$organisasjon.telefon', requiredString),\n\tepost: ifPresent('$organisasjon.epost', requiredString),\n\tnettside: ifPresent('$organisasjon.nettside', requiredString),\n\tforretningsadresse: ifPresent('$organisasjon.forretningsadresse', adresse),\n\tpostadresse: ifPresent('$organisasjon.postadresse', adresse),\n\tunderenheter: ifPresent(\n\t\t'$organisasjon.underenheter',\n\t\tYup.array()\n\t\t\t.transform(value => Object.values(value))\n\t\t\t.of(Yup.lazy(() => organisasjon.default(undefined)))\n\t)\n})\n\nOrganisasjonForm.validation = {\n\torganisasjon: ifPresent('$organisasjon', organisasjon)\n}\n","import React, { useContext } from 'react'\nimport * as Yup from 'yup'\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper'\nimport { harAvhukedeAttributter } from '~/components/bestillingsveileder/utils'\nimport { BestillingsveilederContext } from '~/components/bestillingsveileder/Bestillingsveileder'\nimport { TpsfForm } from '~/components/fagsystem/tpsf/form/Form'\nimport { KrrstubForm } from '~/components/fagsystem/krrstub/form/Form'\nimport { SigrunstubForm } from '~/components/fagsystem/sigrunstub/form/Form'\nimport { InntektstubForm } from '~/components/fagsystem/inntektstub/form/Form'\nimport { InntektsmeldingForm } from '~/components/fagsystem/inntektsmelding/form/Form'\nimport { AaregForm } from '~/components/fagsystem/aareg/form/Form'\nimport { BrregstubForm } from '~/components/fagsystem/brregstub/form/Form'\nimport { PdlfForm } from '~/components/fagsystem/pdlf/form/Form'\nimport { ArenaForm } from '~/components/fagsystem/arena/form/Form'\nimport { InstForm } from '~/components/fagsystem/inst/form/Form'\nimport { UdistubForm } from '~/components/fagsystem/udistub/form/Form'\nimport { PensjonForm } from '~/components/fagsystem/pensjon/form/Form'\nimport { DokarkivForm } from '~/components/fagsystem/dokarkiv/form/Form'\nimport { SykdomForm } from '~/components/fagsystem/sykdom/form/Form'\nimport { OrganisasjonForm } from '~/components/fagsystem/organisasjoner/form/Form'\n\nexport const Steg2 = ({ formikBag }) => {\n\tconst opts = useContext(BestillingsveilederContext)\n\tconst leggTil = opts.is.leggTil\n\n\tif (!harAvhukedeAttributter(formikBag.values)) {\n\t\tconst message = leggTil\n\t\t\t? 'Du har ikke lagt til flere egenskaper. Dolly vil opprette den samme personen i miljøene du velger i neste steg.'\n\t\t\t: 'Du har ikke valgt noen egenskaper. Dolly oppretter personer med tilfeldige verdier.'\n\n\t\treturn <AlertStripeInfo>{message}</AlertStripeInfo>\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<TpsfForm formikBag={formikBag} />\n\t\t\t<AaregForm formikBag={formikBag} />\n\t\t\t<SigrunstubForm formikBag={formikBag} />\n\t\t\t<PensjonForm formikBag={formikBag} />\n\t\t\t<InntektstubForm formikBag={formikBag} />\n\t\t\t<InntektsmeldingForm formikBag={formikBag} />\n\t\t\t<SykdomForm formikBag={formikBag} />\n\t\t\t<BrregstubForm formikBag={formikBag} />\n\t\t\t<PdlfForm formikBag={formikBag} />\n\t\t\t<InstForm formikBag={formikBag} />\n\t\t\t<KrrstubForm formikBag={formikBag} />\n\t\t\t<ArenaForm formikBag={formikBag} />\n\t\t\t<UdistubForm formikBag={formikBag} />\n\t\t\t<DokarkivForm formikBag={formikBag} />\n\t\t\t<OrganisasjonForm formikBag={formikBag} />\n\t\t</div>\n\t)\n}\n\nSteg2.label = 'Velg verdier'\n\nSteg2.validation = Yup.object({\n\t...TpsfForm.validation,\n\t...PdlfForm.validation,\n\t...AaregForm.validation,\n\t...SigrunstubForm.validation,\n\t...PensjonForm.validation,\n\t...InntektstubForm.validation,\n\t...InntektsmeldingForm.validation,\n\t...SykdomForm.validation,\n\t...BrregstubForm.validation,\n\t...InstForm.validation,\n\t...KrrstubForm.validation,\n\t...ArenaForm.validation,\n\t...UdistubForm.validation,\n\t...DokarkivForm.validation,\n\t...OrganisasjonForm.validation\n})\n","import React from 'react'\nimport { useToggle } from 'react-use'\nimport { DollyCheckbox } from '~/components/ui/form/inputs/checbox/Checkbox'\nimport { FormikTextInput } from '~/components/ui/form/inputs/textInput/TextInput'\nimport { requiredString, ifPresent } from '~/utils/YupValidations'\n\nexport const MalForm = ({ formikBag }) => {\n\tconst [aktiv, toggleMal] = useToggle(false)\n\n\tconst _toggle = () => {\n\t\tformikBag.setFieldValue('malBestillingNavn', aktiv ? undefined : '')\n\t\ttoggleMal()\n\t}\n\n\t//TODO: Sjekke om malnavn allerede finnes\n\treturn (\n\t\t<div className=\"input-mal-field\">\n\t\t\t<div className=\"flexbox--align-center\">\n\t\t\t\t<h2>Lagre som mal</h2>\n\t\t\t\t<DollyCheckbox name=\"lagre-mal\" onChange={_toggle} label=\"Lagre som mal\" isSwitch />\n\t\t\t</div>\n\t\t\t<FormikTextInput name=\"malBestillingNavn\" label=\"Malnavn\" />\n\t\t</div>\n\t)\n}\n\nMalForm.validation = {\n\tmalBestillingNavn: ifPresent('$malBestillingNavn', requiredString)\n}\n","import * as React from 'react'\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper'\nimport { Bestillingsdata } from '~/components/bestillingsveileder/bestillingTypes'\n\ntype BestillingInfoboks = {\n\tbestillingsdata: Bestillingsdata\n}\n\nexport const BestillingInfoboks = ({ bestillingsdata }: BestillingInfoboks) => {\n\tconst tpsfInfo = bestillingsdata.tpsf\n\n\tconst harRelasjonMedAdressebeskyttelse = () => {\n\t\tlet harAdressebeskyttelse = false\n\t\tif (tpsfInfo.relasjoner) {\n\t\t\tObject.entries(tpsfInfo.relasjoner).forEach(relasjon => {\n\t\t\t\trelasjon[1].forEach(person => {\n\t\t\t\t\tif (person.spesreg === 'SPFO' || person.spesreg === 'SPSF' || person.spesreg === 'SFU') {\n\t\t\t\t\t\tharAdressebeskyttelse = true\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t\treturn harAdressebeskyttelse\n\t}\n\n\tif (\n\t\ttpsfInfo &&\n\t\t(tpsfInfo.spesreg === 'SPFO' ||\n\t\t\ttpsfInfo.spesreg === 'SPSF' ||\n\t\t\ttpsfInfo.spesreg === 'SFU' ||\n\t\t\tharRelasjonMedAdressebeskyttelse() === true)\n\t) {\n\t\treturn (\n\t\t\t// @ts-ignore\n\t\t\t<AlertStripeInfo style={{ marginTop: 20 }}>\n\t\t\t\tTilgangsstyring basert på diskresjonskode har nattlig oppdatering, slik at riktig tilgang\n\t\t\t\tmot miljø kan verifiseres først dagen etter. Ta kontakt med team Dolly i morgen hvis ønsket\n\t\t\t\ttilgang mot miljø ikke samsvarer med bestillingen. <br />\n\t\t\t</AlertStripeInfo>\n\t\t)\n\t}\n\treturn null\n}\n","import React, { useState } from 'react'\nimport _get from 'lodash/get'\nimport styled from 'styled-components'\nimport { RadioPanelGruppe } from 'nav-frontend-skjema'\nimport Hjelpetekst from '~/components/hjelpetekst'\nimport { FormikProps } from 'formik'\n\ntype Form = {\n\tformikBag: FormikProps<{}>\n}\n\nenum IdentType {\n\tSTANDARD = 'STANDARD',\n\tSYNTETISK = 'SYNTETISK'\n}\n\nconst IdentVelgerField = styled.div`\n\tbackground-color: white;\n\tpadding: 20px;\n\tmargin-bottom: 20px;\n`\n\nconst Tittel = styled.div`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\n\th2 {\n\t\tmargin: 0;\n\t\tfont-size: 1.4rem;\n\t}\n`\n\nconst TestpersonValg = styled(RadioPanelGruppe)`\n\tlegend {\n\t\t.offscreen;\n\t}\n\n\t.inputPanelGruppe__inner {\n\t\t.inputPanel {\n\t\t\tmargin-top: 10px;\n\t\t}\n\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\n\t\tlabel {\n\t\t\twidth: 49%;\n\t\t\tmargin-bottom: 0.5rem;\n\t\t}\n\t}\n`\n\nconst informasjonstekst =\n\t'Om ikke lenge kommer Dolly til å gå fra å opprette testpersoner som har ekte identifikasjonsnummer til å kun opprette testpersoner med syntetisk identifikasjonsnummer. Frem til det vil det være mulig å velge selv om man ønsker å opprette testpersonene med standard eller syntetisk identifikasjonsnummer. Siden syntetisk identifikasjonsnummer en dag kommer til å bli den nye standarden oppfordrer vi alle til å ta dette i bruk allerede nå.'\n\nexport const IdentVelger = ({ formikBag }: Form) => {\n\tconst [type, setType] = useState(\n\t\t_get(formikBag.values, `navSyntetiskIdent`) === true ? IdentType.SYNTETISK : IdentType.STANDARD\n\t)\n\n\tconst handleIdentTypeChange = (value: string) => {\n\t\tsetType(value)\n\t\tformikBag.setFieldValue('navSyntetiskIdent', value === IdentType.SYNTETISK ? true : false)\n\t}\n\n\treturn (\n\t\t<IdentVelgerField>\n\t\t\t<Tittel>\n\t\t\t\t<h2>Velg type testperson</h2>\n\t\t\t\t<Hjelpetekst hjelpetekstFor={'Identvelger'}>{informasjonstekst}</Hjelpetekst>\n\t\t\t</Tittel>\n\n\t\t\t<TestpersonValg\n\t\t\t\tname=\"navSyntetiskIdent\"\n\t\t\t\tlegend=\"\"\n\t\t\t\tradios={[\n\t\t\t\t\t{ label: 'Standard', value: IdentType.STANDARD },\n\t\t\t\t\t{ label: 'NAV syntetisk', value: IdentType.SYNTETISK }\n\t\t\t\t]}\n\t\t\t\tchecked={type}\n\t\t\t\tonChange={e => handleIdentTypeChange(e.target.value)}\n\t\t\t/>\n\t\t</IdentVelgerField>\n\t)\n}\n","import React from 'react'\nimport * as Yup from 'yup'\nimport { harAvhukedeAttributter } from '~/components/bestillingsveileder/utils'\nimport Bestillingskriterier from '~/components/bestilling/sammendrag/kriterier/Kriterier'\nimport { MiljoVelger } from '~/components/miljoVelger/MiljoVelger'\nimport { MalForm } from './MalForm'\nimport { BestillingInfoboks } from './BestillingInfoboks'\nimport { IdentVelger } from './IdentVelger'\n\nexport const Steg3 = ({ formikBag, erNyIdent }) => {\n\tconst erOrganisasjon = formikBag.values.hasOwnProperty('organisasjon')\n\n\treturn (\n\t\t<div>\n\t\t\t{harAvhukedeAttributter(formikBag.values) && (\n\t\t\t\t<div className=\"oppsummering\">\n\t\t\t\t\t<Bestillingskriterier bestilling={formikBag.values} />\n\t\t\t\t\t<BestillingInfoboks bestillingsdata={formikBag.values} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!erOrganisasjon && erNyIdent && <IdentVelger formikBag={formikBag} />}\n\t\t\t<MiljoVelger bestillingsdata={formikBag.values} heading=\"Hvilke miljøer vil du opprette i?\" />\n\t\t\t{!erOrganisasjon && <MalForm formikBag={formikBag} />}\n\t\t</div>\n\t)\n}\n\nSteg3.label = 'Oppsummering'\n\nSteg3.validation = Yup.object(\n\tObject.assign(\n\t\t{},\n\t\t{\n\t\t\tenvironments: Yup.array()\n\t\t\t\t.of(Yup.string().required('Velg et navn'))\n\t\t\t\t.min(1, 'Må minst velge et miljø')\n\t\t},\n\t\tMalForm.validation\n\t)\n)\n","import React from 'react'\nimport { useToggle } from 'react-use'\n\nconst FormikState = props => (\n\t<pre>\n\t\t<strong>props</strong> = {JSON.stringify(props, null, 2)}\n\t</pre>\n)\n\nexport default function DisplayFormikState({ visState = false, ...props }) {\n\tconst [showState, toggleShowState] = useToggle(visState)\n\n\treturn (\n\t\t<div\n\t\t\tonClick={toggleShowState}\n\t\t\tstyle={{\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0,\n\t\t\t\tright: 0,\n\t\t\t\tbackground: '#f6f8fa',\n\t\t\t\tfontSize: '.7rem',\n\t\t\t\tmargin: 0,\n\t\t\t\tpadding: '.8rem',\n\t\t\t\tborderBottom: '1px solid',\n\t\t\t\tborderLeft: '1px solid',\n\t\t\t\tborderColor: '#ccc',\n\t\t\t\tzIndex: 99\n\t\t\t}}\n\t\t>\n\t\t\t{showState && <FormikState {...props} />}\n\t\t\t{!showState && <span>Vis state</span>}\n\t\t</div>\n\t)\n}\n","import React, { Fragment, useContext, useState } from 'react'\nimport { Formik } from 'formik'\nimport Stegindikator from 'nav-frontend-stegindikator'\nimport { Navigation } from './Navigation/Navigation'\nimport { stateModifierFns } from '../stateModifier'\nimport { validate } from '~/utils/YupValidations'\nimport { BestillingsveilederHeader } from '../BestillingsveilederHeader'\n\nimport { Steg1 } from './steg/steg1/Steg1'\nimport { Steg2 } from './steg/steg2/Steg2'\nimport { Steg3 } from './steg/steg3/Steg3'\nimport { BestillingsveilederContext } from '~/components/bestillingsveileder/Bestillingsveileder'\nimport DisplayFormikState from '~/utils/DisplayFormikState'\n\nconst STEPS = [Steg1, Steg2, Steg3]\n\nexport const StegVelger = ({ initialValues, onSubmit, children }) => {\n\tconst [step, setStep] = useState(0)\n\n\tconst opts = useContext(BestillingsveilederContext)\n\n\tconst { personFoerLeggTil, tidligereBestillinger } = opts\n\n\tconst isLastStep = () => step === STEPS.length - 1\n\tconst handleNext = () => setStep(step + 1)\n\n\tconst handleBack = () => {\n\t\tif (step !== 0) setStep(step - 1)\n\t}\n\n\tconst _handleSubmit = (values, formikBag) => {\n\t\tconst { setSubmitting } = formikBag\n\n\t\tif (!isLastStep()) {\n\t\t\tsetSubmitting(false)\n\t\t\thandleNext()\n\t\t\treturn\n\t\t}\n\n\t\tsessionStorage.clear()\n\t\treturn onSubmit(values, formikBag)\n\t}\n\n\tconst CurrentStepComponent = STEPS[step]\n\n\tconst _validate = values =>\n\t\tvalidate(\n\t\t\t{\n\t\t\t\t...values,\n\t\t\t\tpersonFoerLeggTil: personFoerLeggTil,\n\t\t\t\ttidligereBestillinger: tidligereBestillinger\n\t\t\t},\n\t\t\tCurrentStepComponent.validation\n\t\t)\n\n\tconst labels = STEPS.map(v => ({ label: v.label }))\n\n\treturn (\n\t\t<Formik initialValues={initialValues} validate={_validate} onSubmit={_handleSubmit}>\n\t\t\t{formikBag => {\n\t\t\t\tconst stateModifier = stateModifierFns(formikBag.values, formikBag.setValues, opts)\n\t\t\t\tconst erLokalt = window.location.hostname.includes('localhost')\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<Stegindikator aktivtSteg={step} steg={labels} visLabel kompakt />\n\n\t\t\t\t\t\t<BestillingsveilederHeader />\n\n\t\t\t\t\t\t<CurrentStepComponent\n\t\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\t\tstateModifier={stateModifier}\n\t\t\t\t\t\t\terNyIdent={!personFoerLeggTil}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{erLokalt && <DisplayFormikState {...formikBag} />}\n\n\t\t\t\t\t\t<Navigation\n\t\t\t\t\t\t\tshowPrevious={step > 0}\n\t\t\t\t\t\t\tonPrevious={handleBack}\n\t\t\t\t\t\t\tisLastStep={isLastStep()}\n\t\t\t\t\t\t\tformikBag={formikBag}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Fragment>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Formik>\n\t)\n}\n","import { initialValues as initialValuesInntektstub } from '~/components/fagsystem/inntektstub/form/Form'\nimport {\n\tinitialPermisjon,\n\tinitialUtenlandsopphold,\n\tinitialValues as initialValuesAareg\n} from '~/components/fagsystem/aareg/form/initialValues'\nimport { initialValues as initialValuesInntektsmelding } from '~/components/fagsystem/inntektsmelding/form/Form'\nimport { initialValues as initialValuesInst } from '~/components/fagsystem/inst/form/Form'\nimport { initialValuesDoedfoedt } from '~/components/fagsystem/tpsf/form/familierelasjoner/partials/Barn'\n\nexport const initialValues = {\n\tinntektstub: initialValuesInntektstub,\n\taareg: initialValuesAareg,\n\tpermisjon: initialPermisjon,\n\tutenlandsopphold: initialUtenlandsopphold,\n\tinntektsmelding: initialValuesInntektsmelding,\n\tinstdata: initialValuesInst,\n\tbarnDoedfoedt: initialValuesDoedfoedt,\n\tboadresse: {\n\t\tbolignr: '',\n\t\t// @ts-ignore\n\t\tflyttedato: null\n\t},\n\tkontaktinformasjonForDoedsbo: {\n\t\tadressat: { adressatType: '' },\n\t\tadresselinje1: '',\n\t\tadresselinje2: '',\n\t\tpostnummer: '',\n\t\tpoststedsnavn: '',\n\t\tlandkode: 'NOR',\n\t\tskifteform: '',\n\t\tutstedtDato: ''\n\t},\n\tarbeidsadgang: {\n\t\t// @ts-ignore\n\t\tarbeidsOmfang: null,\n\t\tharArbeidsAdgang: 'JA',\n\t\tperiode: {\n\t\t\t// @ts-ignore\n\t\t\tfra: null,\n\t\t\t// @ts-ignore\n\t\t\ttil: null\n\t\t},\n\t\t// @ts-ignore\n\t\ttypeArbeidsadgang: null,\n\t\t// @ts-ignore\n\t\thjemmel: '',\n\t\t// @ts-ignore\n\t\tforklaring: null\n\t},\n\tudistub: [\n\t\t{\n\t\t\teosEllerEFTABeslutningOmOppholdsrettPeriode: {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfra: null,\n\t\t\t\t// @ts-ignore\n\t\t\t\ttil: null\n\t\t\t},\n\t\t\t// @ts-ignore\n\t\t\teosEllerEFTABeslutningOmOppholdsrettEffektuering: null,\n\t\t\teosEllerEFTABeslutningOmOppholdsrett: ''\n\t\t},\n\t\t{\n\t\t\teosEllerEFTAVedtakOmVarigOppholdsrettPeriode: {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfra: null,\n\t\t\t\t// @ts-ignore\n\t\t\t\ttil: null\n\t\t\t},\n\t\t\t// @ts-ignore\n\t\t\teosEllerEFTAVedtakOmVarigOppholdsrettEffektuering: null,\n\t\t\teosEllerEFTAVedtakOmVarigOppholdsrett: ''\n\t\t},\n\t\t{\n\t\t\teosEllerEFTAOppholdstillatelsePeriode: {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfra: null,\n\t\t\t\t// @ts-ignore\n\t\t\t\ttil: null\n\t\t\t},\n\t\t\t// @ts-ignore\n\t\t\teosEllerEFTAOppholdstillatelseEffektuering: null,\n\t\t\teosEllerEFTAOppholdstillatelse: ''\n\t\t},\n\t\t{\n\t\t\toppholdSammeVilkaar: {\n\t\t\t\toppholdSammeVilkaarPeriode: {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tfra: null,\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\ttil: null\n\t\t\t\t},\n\t\t\t\t// @ts-ignore\n\t\t\t\toppholdSammeVilkaarEffektuering: null, //date\n\t\t\t\t// @ts-ignore\n\t\t\t\toppholdstillatelseVedtaksDato: null, //date\n\t\t\t\toppholdstillatelseType: ''\n\t\t\t}\n\t\t}\n\t],\n\tpartnere: {\n\t\tidenttype: 'FNR',\n\t\tkjonn: '',\n\t\tsivilstander: [\n\t\t\t{\n\t\t\t\tsivilstand: '',\n\t\t\t\t// @ts-ignore\n\t\t\t\tsivilstandRegdato: null\n\t\t\t}\n\t\t],\n\t\tharFellesAdresse: false,\n\t\tspesreg: '',\n\t\tutenFastBopel: false,\n\t\tstatsborgerskap: '',\n\t\tstatsborgerskapRegdato: '',\n\t\tstatsborgerskapTildato: ''\n\t},\n\tbarn: {\n\t\tidenttype: 'FNR',\n\t\tkjonn: '',\n\t\tbarnType: '',\n\t\t// @ts-ignore\n\t\tpartnerNr: null,\n\t\tborHos: '',\n\t\terAdoptert: false,\n\t\tspesreg: '',\n\t\tutenFastBopel: false,\n\t\tstatsborgerskap: '',\n\t\tstatsborgerskapRegdato: '',\n\t\tstatsborgerskapTildato: ''\n\t},\n\tforeldre: {\n\t\tidenttype: 'FNR',\n\t\tkjonn: '',\n\t\tharFellesAdresse: false,\n\t\tforeldreType: '',\n\t\t// @ts-ignore\n\t\tspesreg: '',\n\t\tutenFastBopel: false,\n\t\tstatsborgerskap: '',\n\t\tstatsborgerskapRegdato: '',\n\t\tstatsborgerskapTildato: ''\n\t},\n\tstatborgerskap: {\n\t\tstatborgerskap: '',\n\t\t// @ts-ignore\n\t\tstatsborgerskapRegdato: null,\n\t\t// @ts-ignore\n\t\tstatsborgerskapTildato: null\n\t},\n\tutvandretTil: {\n\t\tutvandretTilLand: '',\n\t\t// @ts-ignore\n\t\tutvandretTilLandFlyttedato: null\n\t},\n\tinnvandretFra: {\n\t\tinnvandretFraLand: '',\n\t\t// @ts-ignore\n\t\tinnvandretFraLandFlyttedato: null\n\t}\n}\n","import { initialValues } from './utils'\nimport _ from 'lodash'\nimport { useSelector } from 'react-redux'\nimport { filterMiljoe } from '~/components/miljoVelger/MiljoeInfo/TilgjengeligeMiljoer'\n\nexport const initialValuesBasedOnMal = (mal: any) => {\n\tconst tilgjengeligeEnvironments = useSelector((state: any) => state.environments.data)\n\tconst initialValuesMal = Object.assign({}, mal.bestilling)\n\n\tif (initialValuesMal.aareg) {\n\t\tinitialValuesMal.aareg = getUpdatedAaregData(initialValuesMal.aareg)\n\t}\n\tif (initialValuesMal.inntektsmelding) {\n\t\tinitialValuesMal.inntektsmelding.inntekter = getUpdatedInntektsmeldingData(\n\t\t\tinitialValuesMal.inntektsmelding.inntekter\n\t\t)\n\t}\n\tif (initialValuesMal.inntektstub) {\n\t\tinitialValuesMal.inntektstub = getUpdatedInntektstubData(initialValuesMal.inntektstub)\n\t}\n\tif (initialValuesMal.instdata) {\n\t\tinitialValuesMal.instdata = getUpdatedInstData(initialValuesMal.instdata)\n\t}\n\tif (initialValuesMal.pdlforvalter) {\n\t\tinitialValuesMal.pdlforvalter = getUpdatedPdlfData(initialValuesMal.pdlforvalter)\n\t}\n\tif (initialValuesMal.tpsf) {\n\t\tinitialValuesMal.tpsf = getUpdatedTpsfData(initialValuesMal.tpsf)\n\t}\n\tif (initialValuesMal.udistub) {\n\t\tinitialValuesMal.udistub = getUpdatedUdistubData(initialValuesMal.udistub)\n\t}\n\n\tinitialValuesMal.environments = filterMiljoe(\n\t\ttilgjengeligeEnvironments,\n\t\tmal.bestilling.environments\n\t)\n\treturn initialValuesMal\n}\n\nconst getUpdatedInntektstubData = (inntektstubData: any) => {\n\tconst newInntektstubData = Object.assign({}, inntektstubData)\n\tnewInntektstubData.inntektsinformasjon = newInntektstubData.inntektsinformasjon?.map(\n\t\t(inntekt: any) => updateData(inntekt, initialValues.inntektstub)\n\t)\n\treturn newInntektstubData\n}\n\nconst getUpdatedAaregData = (aaregData: any) => {\n\treturn aaregData.map((data: any) => {\n\t\tdata = updateData(data, initialValues.aareg[0])\n\t\tdata.permisjon = data.permisjon?.map((data: any) => updateData(data, initialValues.permisjon))\n\t\tdata.utenlandsopphold = data.utenlandsopphold?.map((data: any) =>\n\t\t\tupdateData(data, initialValues.utenlandsopphold)\n\t\t)\n\t\treturn data\n\t})\n}\nconst getUpdatedInntektsmeldingData = (inntektsmeldingData: any) =>\n\tinntektsmeldingData.map((inntekt: any) => updateData(inntekt, initialValues.inntektsmelding))\n\nconst getUpdatedInstData = (instData: any) =>\n\tinstData.map((data: any) => updateData(data, initialValues.instdata))\n\nconst getUpdatedPdlfData = (pdlfData: any) => {\n\tconst newPdlfData = Object.assign({}, pdlfData)\n\tif (pdlfData.kontaktinformasjonForDoedsbo) {\n\t\tnewPdlfData.kontaktinformasjonForDoedsbo = updateData(\n\t\t\tnewPdlfData.kontaktinformasjonForDoedsbo,\n\t\t\tinitialValues.kontaktinformasjonForDoedsbo\n\t\t)\n\t}\n\treturn newPdlfData\n}\n\nconst getUpdatedTpsfData = (tpsfData: any) => {\n\tlet newTpsfData = Object.assign({}, tpsfData)\n\tif (tpsfData.statsborgerskap) {\n\t\tnewTpsfData = updateData(newTpsfData, initialValues.statborgerskap)\n\t}\n\tif (tpsfData.innvandretFraLand) {\n\t\tnewTpsfData = updateData(newTpsfData, initialValues.innvandretFra)\n\t}\n\tif (tpsfData.utvandretTilLand) {\n\t\tnewTpsfData = updateData(newTpsfData, initialValues.utvandretTil)\n\t}\n\tif (tpsfData.relasjoner) {\n\t\tif (tpsfData.relasjoner.partnere) {\n\t\t\tnewTpsfData.relasjoner.partnere = newTpsfData.relasjoner.partnere.map((partner: any) =>\n\t\t\t\tupdateData(partner, initialValues.partnere)\n\t\t\t)\n\t\t}\n\t\tif (tpsfData.relasjoner.barn) {\n\t\t\tnewTpsfData.relasjoner.barn = newTpsfData.relasjoner.barn.map((barn: any) => {\n\t\t\t\tif (barn.identtype === 'FDAT') {\n\t\t\t\t\tconst newData = updateData(barn, initialValues.barnDoedfoedt)\n\t\t\t\t\tnewData.foedselsdato = newData.doedsdato\n\t\t\t\t\treturn newData\n\t\t\t\t} else {\n\t\t\t\t\treturn updateData(barn, initialValues.barn)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\tif (tpsfData.boadresse) {\n\t\tnewTpsfData.boadresse = updateData(newTpsfData.boadresse, initialValues.boadresse)\n\t}\n\n\treturn newTpsfData\n}\n\nconst getUpdatedUdistubData = (udistubData: any) => {\n\tconst newUdistubData = Object.assign({}, udistubData)\n\tconst oppholdStatus = udistubData.oppholdStatus\n\tif (oppholdStatus) {\n\t\tif (oppholdStatus.eosEllerEFTABeslutningOmOppholdsrett) {\n\t\t\tnewUdistubData.oppholdStatus = updateData(\n\t\t\t\tnewUdistubData.oppholdStatus,\n\t\t\t\tinitialValues.udistub[0]\n\t\t\t)\n\t\t} else if (oppholdStatus.eosEllerEFTAVedtakOmVarigOppholdsrett) {\n\t\t\tnewUdistubData.oppholdStatus = updateData(\n\t\t\t\tnewUdistubData.oppholdStatus,\n\t\t\t\tinitialValues.udistub[1]\n\t\t\t)\n\t\t} else if (oppholdStatus.eosEllerEFTAOppholdstillatelse) {\n\t\t\tnewUdistubData.oppholdStatus = updateData(\n\t\t\t\tnewUdistubData.oppholdStatus,\n\t\t\t\tinitialValues.udistub[2]\n\t\t\t)\n\t\t} else if (oppholdStatus.oppholdSammeVilkaar) {\n\t\t\tnewUdistubData.oppholdStatus = updateData(\n\t\t\t\tnewUdistubData.oppholdStatus,\n\t\t\t\tinitialValues.udistub[3]\n\t\t\t)\n\t\t}\n\t}\n\tif (udistubData.arbeidsadgang && udistubData.arbeidsadgang.harArbeidsAdgang === 'JA') {\n\t\tnewUdistubData.arbeidsadgang = updateData(\n\t\t\tnewUdistubData.arbeidsadgang,\n\t\t\tinitialValues.arbeidsadgang\n\t\t)\n\t}\n\n\treturn newUdistubData\n}\n\nconst updateData = (data: any, initalValues: any) => {\n\tlet newData = Object.assign({}, data)\n\tnewData = _.extend({}, initalValues, newData)\n\tfor (const key in initalValues) {\n\t\tif (Array.isArray(initalValues[key])) {\n\t\t\tfor (let i = 0; i < newData[key].length; i++) {\n\t\t\t\tnewData[key][i] = updateData(newData[key][i], initalValues[key][0])\n\t\t\t}\n\t\t} else if (Object.prototype.toString.call(initalValues[key]) === '[object Object]') {\n\t\t\tnewData[key] = updateData(newData[key], initalValues[key])\n\t\t}\n\t}\n\treturn newData\n}\n","import { initialValuesBasedOnMal } from '~/components/bestillingsveileder/options/malOptions'\n\nconst TYPE = Object.freeze({\n\tNY_BESTILLING: 'NY_BESTILLING',\n\tNY_BESTILLING_FRA_MAL: 'NY_BESTILLING_FRA_MAL',\n\tOPPRETT_FRA_IDENTER: 'OPPRETT_FRA_IDENTER',\n\tLEGG_TIL: 'LEGG_TIL',\n\tNY_ORGANISASJON: 'NY_ORGANISASJON',\n\tNY_STANDARD_ORGANISASJON: 'NY_STANDARD_ORGANISASJON'\n})\n\nexport const BVOptions = ({\n\tantall = 1,\n\tidenttype = 'FNR',\n\tmal,\n\topprettFraIdenter,\n\tpersonFoerLeggTil,\n\ttidligereBestillinger,\n\topprettOrganisasjon = null\n} = {}) => {\n\tlet initialValues = {\n\t\tantall,\n\t\tenvironments: [],\n\t\tnavSyntetiskIdent: false\n\t}\n\n\tlet initialValuesOrganisasjon = {\n\t\tenvironments: [],\n\t\torganisasjon: {\n\t\t\tenhetstype: ''\n\t\t}\n\t}\n\n\tlet initialValuesStandardOrganisasjon = {\n\t\tenvironments: [],\n\t\torganisasjon: {\n\t\t\tenhetstype: 'AS',\n\t\t\tnaeringskode: '01.451',\n\t\t\tforretningsadresse: {\n\t\t\t\tadresselinjer: ['', '', ''],\n\t\t\t\tpostnr: '',\n\t\t\t\tkommunenr: '',\n\t\t\t\tlandkode: 'NO'\n\t\t\t},\n\t\t\tunderenheter: [\n\t\t\t\t{\n\t\t\t\t\tenhetstype: 'BEDR',\n\t\t\t\t\tnaeringskode: '01.451',\n\t\t\t\t\tforretningsadresse: {\n\t\t\t\t\t\tadresselinjer: ['', '', ''],\n\t\t\t\t\t\tpostnr: '',\n\t\t\t\t\t\tkommunenr: '',\n\t\t\t\t\t\tlandkode: 'NO'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n\n\tlet bestType = TYPE.NY_BESTILLING\n\n\tif (mal) {\n\t\tbestType = TYPE.NY_BESTILLING_FRA_MAL\n\t\tinitialValues = Object.assign(initialValues, initialValuesBasedOnMal(mal))\n\t}\n\n\tif (opprettFraIdenter) {\n\t\tbestType = TYPE.OPPRETT_FRA_IDENTER\n\t\tinitialValues.antall = opprettFraIdenter.length\n\t}\n\n\tif (personFoerLeggTil) {\n\t\tbestType = TYPE.LEGG_TIL\n\t}\n\n\tif (opprettOrganisasjon) {\n\t\tif (opprettOrganisasjon === 'STANDARD') {\n\t\t\tbestType = TYPE.NY_STANDARD_ORGANISASJON\n\t\t\tinitialValues = initialValuesStandardOrganisasjon\n\t\t} else {\n\t\t\tbestType = TYPE.NY_ORGANISASJON\n\t\t\tinitialValues = initialValuesOrganisasjon\n\t\t}\n\t}\n\n\treturn {\n\t\tinitialValues,\n\t\tantall,\n\t\tidenttype,\n\t\tmal,\n\t\topprettFraIdenter,\n\t\tpersonFoerLeggTil,\n\t\ttidligereBestillinger,\n\t\tis: {\n\t\t\tnyBestilling: bestType === TYPE.NY_BESTILLING,\n\t\t\tnyBestillingFraMal: bestType === TYPE.NY_BESTILLING_FRA_MAL,\n\t\t\topprettFraIdenter: bestType === TYPE.OPPRETT_FRA_IDENTER,\n\t\t\tleggTil: bestType === TYPE.LEGG_TIL,\n\t\t\tnyOrganisasjon: bestType === TYPE.NY_ORGANISASJON,\n\t\t\tnyStandardOrganisasjon: bestType === TYPE.NY_STANDARD_ORGANISASJON\n\t\t}\n\t}\n}\n","import React, { createContext } from 'react'\nimport { StegVelger } from './stegVelger/StegVelger'\nimport { AppError } from '~/components/ui/appError/AppError'\nimport { BVOptions } from './options/options'\n\nimport './bestillingsveileder.less'\n\nexport const BestillingsveilederContext = createContext()\n\nexport const Bestillingsveileder = ({ error, location, sendBestilling, match }) => {\n\tconst options = BVOptions(location.state)\n\tconst handleSubmit = (values, formikBag) => {\n\t\tsendBestilling(values, options)\n\t}\n\n\tif (error) {\n\t\treturn <AppError title=\"Det skjedde en feil ved bestilling\" message={error.message} />\n\t}\n\treturn renderBestillingsVeileder(options.initialValues, options, handleSubmit)\n}\nconst renderBestillingsVeileder = (initialValues, options, handleSubmit) => {\n\treturn (\n\t\t<div className=\"bestillingsveileder\">\n\t\t\t<BestillingsveilederContext.Provider value={options}>\n\t\t\t\t<StegVelger initialValues={initialValues} onSubmit={handleSubmit} />\n\t\t\t</BestillingsveilederContext.Provider>\n\t\t</div>\n\t)\n}\n","import { connect } from 'react-redux'\nimport { sendBestilling } from '~/ducks/bestilling'\nimport { Bestillingsveileder } from './Bestillingsveileder'\n\nconst mapStateToProps = state => ({\n\terror: state.bestveil.error\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\tsendBestilling: (values, opts) =>\n\t\tdispatch(sendBestilling(values, opts, ownProps.match.params.gruppeId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bestillingsveileder)\n"],"sourceRoot":""}