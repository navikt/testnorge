buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "uk.co.boothen.gradle:gradle-wsimport:0.21"
    }
}

plugins {
    id 'dolly-apps'
    id "uk.co.boothen.gradle.wsimport" version "0.21"
}

apply plugin: "uk.co.boothen.gradle.wsimport"

sonarqube {
    properties {
        property "sonar.projectKey", "testnav-oppdrag-service"
        property "sonar.projectName", "testnav-oppdrag-service"
    }
}

bootJar {
    archiveFileName = "app.jar"
    mainClass = 'no.nav.testnav.oppdrag.service.OppdragServiceApplicationStarter'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

wsimport {
    wsdlSourceRoot = "src/main/resources/schema/eksponering"
    generatedSourceRoot = "/generated/src/wsdl/main"
    generatedClassesRoot = "/classes/main"
    wsdl("oppdragServiceWSBinding.wsdl") {
        packageName = "no.nav.testnav.oppdragservice.wsdl"
        xjcarg("-XautoNameResolution")
    }
    verbose = true
    debug = true
    target = "3.0"
}

repositories {
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri('https://maven.pkg.github.com/navikt/maven-release')
        credentials(PasswordCredentials) {
            password System.getenv("NAV_TOKEN")
            username 'token'
        }
    }
}

configurations {
    jaxws
}

dependencies {
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.0'

    jaxws 'com.sun.xml.ws:jaxws-tools:3.0.0',
            'jakarta.xml.ws:jakarta.xml.ws-api:3.0.0',
            'jakarta.xml.bind:jakarta.xml.bind-api:3.0.0',
            'jakarta.activation:jakarta.activation-api:2.0.0',
            'com.sun.xml.ws:jaxws-rt:3.0.0'

    implementation 'no.nav.testnav.libs:security-core'
    implementation 'no.nav.testnav.libs:servlet-core'
    implementation 'no.nav.testnav.libs:servlet-security'
    implementation 'no.nav.testnav.libs:data-transfer-objects'
    implementation "no.nav.testnav.libs:vault"

    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'

    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'
    implementation 'io.swagger.core.v3:swagger-annotations-jakarta:2.2.20'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.ws:spring-ws-security'

    implementation 'ma.glasnost.orika:orika-core:1.5.4'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}