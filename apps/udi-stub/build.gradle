plugins {
    id "org.sonarqube" version "4.0.0.2929"
    id 'java'
    id "uk.co.boothen.gradle.wsimport" version "0.18"
    id 'org.springframework.boot' version "3.1.0"
    id 'io.spring.dependency-management' version "1.1.0"
    id "jacoco"
}

test {
    useJUnitPlatform()
    jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED'
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.language", "java"
        property "sonar.login", System.getenv("SONAR_TOKEN")
        property "sonar.organization", "navikt"
        property "sonar.project.monorepo.enabled", true
        property "sonar.projectKey", "udi-stub"
        property "sonar.projectName", "udi-stub"
        property "sonar.sourceEncoding", "UTF-8"
    }
}

dependencyManagement {
    applyMavenExclusions = false
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2022.0.4'
    }
}

wsimport {
    wsdl("MT_1067_NAV_v1.wsdl")
}

// tag::jaxb[]
configurations {
    jaxb
}

bootJar {
    archiveFileName = "app.jar"
}

java.sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "GitHubPackages"
        url = uri('https://maven.pkg.github.com/navikt/maven-release')
        credentials(PasswordCredentials) {
            password System.getenv("NAV_TOKEN")
            username 'token'
        }
    }
}
dependencies {

    implementation platform('org.testcontainers:testcontainers-bom:1.17.6')

    implementation 'no.nav.testnav.libs:servlet-core'
    implementation 'no.nav.testnav.libs:servlet-security'
    implementation 'no.nav.testnav.libs:database'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.ws:spring-ws-security'
    jaxb 'org.glassfish.jaxb:jaxb-xjc'
    implementation 'wsdl4j:wsdl4j'

    implementation 'org.springframework.cloud:spring-cloud-vault-config-databases'
    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'

    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'com.zaxxer:HikariCP'

    implementation 'ma.glasnost.orika:orika-core:1.5.4'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'
    implementation 'org.hibernate.validator:hibernate-validator'

    testImplementation 'com.h2database:h2'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
    testImplementation 'junit:junit:4.13.2' //TODO upgrade to JUnit5

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

