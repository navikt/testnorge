plugins {
    id 'java'
    id "org.sonarqube" version "4.0.0.2929"
    id 'org.springframework.boot' version "3.1.4"
    id 'io.spring.dependency-management' version "1.1.0"
    id "jacoco"
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.language", "java"
        property "sonar.login", System.getenv("SONAR_TOKEN")
        property "sonar.organization", "navikt"
        property "sonar.project.monorepo.enabled", true
        property "sonar.projectKey", "testnorge-sykemelding-api"
        property "sonar.projectName", "testnorge-sykemelding-api"
        property "sonar.sourceEncoding", "UTF-8"
    }
}
bootJar {
    archiveFileName = "app.jar"
}

dependencyManagement {
    applyMavenExclusions = false
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2022.0.4'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "GitHubPackages"
        url = uri('https://maven.pkg.github.com/navikt/maven-release')
        credentials(PasswordCredentials) {
            password System.getenv("NAV_TOKEN")
            username 'token'
        }
    }
    maven {
        url = uri('https://packages.confluent.io/maven/')
    }
}

dependencies {
    implementation 'no.nav.testnav.libs:commands'
    implementation 'no.nav.testnav.libs:reactive-core'
    implementation 'no.nav.testnav.libs:servlet-core'
    implementation 'no.nav.testnav.libs:servlet-security'
    implementation 'no.nav.testnav.libs:security-core'
    implementation 'no.nav.testnav.libs:avro-schema'
    implementation 'no.nav.testnav.libs:data-transfer-objects'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.2.0'
    implementation 'io.swagger.core.v3:swagger-annotations-jakarta:2.2.10'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'

    implementation 'com.ibm.mq:mq-jms-spring-boot-starter:3.0.3'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'jakarta.activation:jakarta.activation-api:2.1.2'
    implementation 'org.glassfish.jaxb:jaxb-runtime'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'

    implementation 'org.apache.kafka:kafka-clients:3.4.0'
    implementation 'io.confluent:kafka-avro-serializer:7.3.2'

    testImplementation 'no.nav.testnav.libs:testing'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}
java.sourceCompatibility = JavaVersion.VERSION_21
