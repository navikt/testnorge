plugins {
    id 'java'
    id "org.sonarqube" version "4.4.1.3373"
    id 'org.springframework.boot' version "3.2.1"
    id 'io.spring.dependency-management' version "1.1.4"
    id "jacoco"
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.language", "java"
        property "sonar.token", System.getenv("SONAR_TOKEN")
        property "sonar.organization", "navikt"
        property "sonar.project.monorepo.enabled", true
        property "sonar.projectKey", "testnav-organisasjon-mottak-service"
        property "sonar.projectName", "testnav-organisasjon-mottak-service"
        property "sonar.sourceEncoding", "UTF-8"
    }
}
bootJar {
    archiveFileName = "app.jar"
}

dependencyManagement {
    applyMavenExclusions = false
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2023.0.0'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = uri('https://packages.confluent.io/maven/')
    }
}

dependencies {

    implementation 'no.nav.testnav.libs:avro-schema'
    implementation 'no.nav.testnav.libs:commands'
    implementation 'no.nav.testnav.libs:data-transfer-objects'
    implementation 'no.nav.testnav.libs:kafka-config'
    implementation 'no.nav.testnav.libs:kafka-producers'
    implementation 'no.nav.testnav.libs:reactive-core'
    implementation 'no.nav.testnav.libs:security-core'
    implementation 'no.nav.testnav.libs:servlet-core'
    implementation 'no.nav.testnav.libs:servlet-insecure-security'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap' // TODO remove legacy bootstrap config
    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation 'org.hibernate.validator:hibernate-validator'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-clients:3.6.1'
    implementation 'io.confluent:kafka-avro-serializer:7.5.1'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
