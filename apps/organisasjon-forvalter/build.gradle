plugins {
    id 'java'
    id "org.sonarqube" version "4.0.0.2929"
    id 'org.springframework.boot' version "3.2.1"
    id 'io.spring.dependency-management' version "1.1.4"
    id "jacoco"
}

test {
    useJUnitPlatform()
    jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED'
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.layout.buildDirectory}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.language", "java"
        property "sonar.token", System.getenv("SONAR_TOKEN")
        property "sonar.organization", "navikt"
        property "sonar.project.monorepo.enabled", true
        property "sonar.projectKey", "testnav-organisasjon-forvalter"
        property "sonar.projectName", "testnav-organisasjon-forvalter"
        property "sonar.sourceEncoding", "UTF-8"
    }
}

bootJar {
    archiveFileName = "app.jar"
}

dependencyManagement {
    applyMavenExclusions = false
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2023.0.0'
    }
}

properties {
    compileJava.options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = uri('https://packages.confluent.io/maven/')
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

dependencies {

    implementation 'no.nav.testnav.libs:kafka-config'
    implementation 'no.nav.testnav.libs:kafka-producers'
    implementation 'no.nav.testnav.libs:avro-schema'

    implementation 'no.nav.testnav.libs:servlet-core'
    implementation 'no.nav.testnav.libs:security-core'
    implementation 'no.nav.testnav.libs:database'
    implementation 'no.nav.testnav.libs:servlet-security'
    implementation 'no.nav.testnav.libs:commands'
    implementation 'no.nav.testnav.libs:data-transfer-objects'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
    implementation 'org.springframework.cloud:spring-cloud-vault-config-databases'

    implementation 'org.apache.avro:avro:1.11.0'

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.postgresql:postgresql'
    implementation 'org.hibernate.validator:hibernate-validator'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    implementation 'ma.glasnost.orika:orika-core:1.5.4'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'com.h2database:h2'
    testImplementation 'no.nav.testnav.libs:testing'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
}

description = 'organisasjon-forvalter'
