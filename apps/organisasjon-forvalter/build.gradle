plugins {
    id 'java'
    id "org.sonarqube" version "4.0.0.2929"
    id 'org.springframework.boot' version "3.0.4"
    id 'io.spring.dependency-management' version "1.1.0"
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectKey", "testnav-organisasjon-forvalter"
        property "sonar.projectName", "testnav-organisasjon-forvalter"
        property "sonar.organization", "navikt"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.project.monorepo.enabled", true
        property "sonar.login", System.getenv("SONAR_TOKEN")
    }
}

bootJar {
    archiveFileName = "app.jar"
}

dependencyManagement {
    applyMavenExclusions = false
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2022.0.1'
    }
}

properties {
    compileJava.options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = uri('https://packages.confluent.io/maven/')
    }
}

java.sourceCompatibility = JavaVersion.VERSION_17

dependencies {

    implementation 'no.nav.testnav.libs:kafka-config'
    implementation 'no.nav.testnav.libs:kafka-producers'
    implementation 'no.nav.testnav.libs:avro-schema'

    implementation 'no.nav.testnav.libs:servlet-core'
    implementation 'no.nav.testnav.libs:security-core'
    implementation 'no.nav.testnav.libs:database'
    implementation 'no.nav.testnav.libs:servlet-security'
    implementation 'no.nav.testnav.libs:commands'
    implementation 'no.nav.testnav.libs:data-transfer-objects'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
    implementation 'org.springframework.cloud:spring-cloud-vault-config-databases'

    implementation 'org.apache.avro:avro:1.11.0'
    implementation 'org.flywaydb:flyway-core'
    implementation 'io.projectreactor.addons:reactor-extra:3.4.8'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    implementation 'ma.glasnost.orika:orika-core:1.5.4'
    implementation 'org.hibernate.validator:hibernate-validator'

//    implementation 'ch.qos.logback:logback-core:1.2.11'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'
//    implementation 'ch.qos.logback:logback-classic:1.2.11'
//    implementation 'org.slf4j:slf4j-api:1.7.36'

//    implementation 'org.springframework.data:spring-data-commons'

//    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'
//    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.1'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'com.h2database:h2'
    testImplementation 'no.nav.testnav.libs:testing'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
}

description = 'organisasjon-forvalter'
