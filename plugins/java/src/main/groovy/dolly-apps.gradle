plugins {
    id "dolly-sonar"
    id "dolly-versions"

    id "io.spring.dependency-management" // See ../../../build.gradle for version.
    id "java"
    id "org.springframework.boot" // See ../../../build.gradle for version.
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    compileOnly "org.projectlombok:lombok"

    developmentOnly "org.springframework.boot:spring-boot-devtools"

    implementation "com.google.cloud:spring-cloud-gcp-starter-secretmanager:$versions.gcpSecretManager"
    implementation "net.logstash.logback:logstash-logback-encoder:$versions.logback"
    implementation "no.nav.testnav.libs:testing"
    implementation "org.hibernate.validator:hibernate-validator"
    implementation "org.projectlombok:lombok"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-webflux"

    runtimeOnly "io.micrometer:micrometer-registry-prometheus"

    testAnnotationProcessor "org.projectlombok:lombok"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

dependencyManagement {
    applyMavenExclusions = false
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$versions.springBoot"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$versions.springCloud"
        mavenBom "org.springframework.session:spring-session-bom:$versions.springSession"
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    maven {
        name = "GitHub Packages"
        url = uri("https://maven.pkg.github.com/navikt/maven-release")
        credentials(PasswordCredentials) {
            username "token"
            password System.getenv("NAV_TOKEN")
        }
    }
    maven {
        name = "Confluent"
        url = uri("https://packages.confluent.io/maven/")
    }
    maven {
        name = "Shibboleth"
        url = uri("https://build.shibboleth.net/maven/releases/")
    }
    mavenLocal()
}

tasks.bootJar {
    archiveFileName = "app.jar"
    duplicatesStrategy = DuplicatesStrategy.WARN
}

tasks.test {
    useJUnitPlatform()
    doFirst {
        jvmArgs += '-javaagent:' + configurations.testRuntimeClasspath.find { it.name.contains("byte-buddy-agent") }
        jvmArgs "--add-opens", "java.base/java.lang=ALL-UNNAMED"
    }
}

/**
 * Automatically add includeBuild in settings.gradle if we have a dependency on anything in no.nav.testnav.libs.
 */
gradle.settingsEvaluated { settings ->
    println "DEBUG: Settings evaluated for ${settings.gradle.rootProject.name}"
    def projectDir = (String) settings.gradle.startParameter.currentDir
    def buildGradle = new File(projectDir, "build.gradle")
    if (buildGradle.exists()) {
        def config = new ConfigSlurper().parse(buildGradle.toURI().toURL())
        config.dependencies.each { dependency ->
            if (dependency instanceof ProjectDependency && dependency.group == 'no.nav.testnav.libs') {
                def includeBuildPath = "../../libs/${dependency.name}"
                if (settings.includes.any { it.name == dependency.name }) {
                    println "DEBUG: includeBuild '$includeBuildPath' already exists for ${settings.gradle.rootProject.name} - you might want to remove this from your settings.gradle"
                } else {
                    settings.includeBuild(includeBuildPath)
                    println "DEBUG: Added includeBuild '$includeBuildPath' to ${settings.gradle.rootProject.name}"
                }cd
            }
        }
    }
}