/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package no.nav.registre.testnorge.libs.avro.person;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Adresse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8429751752888206368L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Adresse\",\"namespace\":\"no.nav.registre.testnorge.libs.avro.person\",\"fields\":[{\"name\":\"gatenavn\",\"type\":[\"string\",\"null\"]},{\"name\":\"postnummer\",\"type\":[\"string\",\"null\"]},{\"name\":\"poststed\",\"type\":[\"string\",\"null\"]},{\"name\":\"kommunenummer\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Adresse> ENCODER =
      new BinaryMessageEncoder<Adresse>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Adresse> DECODER =
      new BinaryMessageDecoder<Adresse>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Adresse> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Adresse> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Adresse> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Adresse>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Adresse to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Adresse from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Adresse instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Adresse fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence gatenavn;
  @Deprecated public java.lang.CharSequence postnummer;
  @Deprecated public java.lang.CharSequence poststed;
  @Deprecated public java.lang.CharSequence kommunenummer;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Adresse() {}

  /**
   * All-args constructor.
   * @param gatenavn The new value for gatenavn
   * @param postnummer The new value for postnummer
   * @param poststed The new value for poststed
   * @param kommunenummer The new value for kommunenummer
   */
  public Adresse(java.lang.CharSequence gatenavn, java.lang.CharSequence postnummer, java.lang.CharSequence poststed, java.lang.CharSequence kommunenummer) {
    this.gatenavn = gatenavn;
    this.postnummer = postnummer;
    this.poststed = poststed;
    this.kommunenummer = kommunenummer;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return gatenavn;
    case 1: return postnummer;
    case 2: return poststed;
    case 3: return kommunenummer;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: gatenavn = (java.lang.CharSequence)value$; break;
    case 1: postnummer = (java.lang.CharSequence)value$; break;
    case 2: poststed = (java.lang.CharSequence)value$; break;
    case 3: kommunenummer = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'gatenavn' field.
   * @return The value of the 'gatenavn' field.
   */
  public java.lang.CharSequence getGatenavn() {
    return gatenavn;
  }


  /**
   * Sets the value of the 'gatenavn' field.
   * @param value the value to set.
   */
  public void setGatenavn(java.lang.CharSequence value) {
    this.gatenavn = value;
  }

  /**
   * Gets the value of the 'postnummer' field.
   * @return The value of the 'postnummer' field.
   */
  public java.lang.CharSequence getPostnummer() {
    return postnummer;
  }


  /**
   * Sets the value of the 'postnummer' field.
   * @param value the value to set.
   */
  public void setPostnummer(java.lang.CharSequence value) {
    this.postnummer = value;
  }

  /**
   * Gets the value of the 'poststed' field.
   * @return The value of the 'poststed' field.
   */
  public java.lang.CharSequence getPoststed() {
    return poststed;
  }


  /**
   * Sets the value of the 'poststed' field.
   * @param value the value to set.
   */
  public void setPoststed(java.lang.CharSequence value) {
    this.poststed = value;
  }

  /**
   * Gets the value of the 'kommunenummer' field.
   * @return The value of the 'kommunenummer' field.
   */
  public java.lang.CharSequence getKommunenummer() {
    return kommunenummer;
  }


  /**
   * Sets the value of the 'kommunenummer' field.
   * @param value the value to set.
   */
  public void setKommunenummer(java.lang.CharSequence value) {
    this.kommunenummer = value;
  }

  /**
   * Creates a new Adresse RecordBuilder.
   * @return A new Adresse RecordBuilder
   */
  public static no.nav.registre.testnorge.libs.avro.person.Adresse.Builder newBuilder() {
    return new no.nav.registre.testnorge.libs.avro.person.Adresse.Builder();
  }

  /**
   * Creates a new Adresse RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Adresse RecordBuilder
   */
  public static no.nav.registre.testnorge.libs.avro.person.Adresse.Builder newBuilder(no.nav.registre.testnorge.libs.avro.person.Adresse.Builder other) {
    if (other == null) {
      return new no.nav.registre.testnorge.libs.avro.person.Adresse.Builder();
    } else {
      return new no.nav.registre.testnorge.libs.avro.person.Adresse.Builder(other);
    }
  }

  /**
   * Creates a new Adresse RecordBuilder by copying an existing Adresse instance.
   * @param other The existing instance to copy.
   * @return A new Adresse RecordBuilder
   */
  public static no.nav.registre.testnorge.libs.avro.person.Adresse.Builder newBuilder(no.nav.registre.testnorge.libs.avro.person.Adresse other) {
    if (other == null) {
      return new no.nav.registre.testnorge.libs.avro.person.Adresse.Builder();
    } else {
      return new no.nav.registre.testnorge.libs.avro.person.Adresse.Builder(other);
    }
  }

  /**
   * RecordBuilder for Adresse instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Adresse>
    implements org.apache.avro.data.RecordBuilder<Adresse> {

    private java.lang.CharSequence gatenavn;
    private java.lang.CharSequence postnummer;
    private java.lang.CharSequence poststed;
    private java.lang.CharSequence kommunenummer;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(no.nav.registre.testnorge.libs.avro.person.Adresse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.gatenavn)) {
        this.gatenavn = data().deepCopy(fields()[0].schema(), other.gatenavn);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.postnummer)) {
        this.postnummer = data().deepCopy(fields()[1].schema(), other.postnummer);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.poststed)) {
        this.poststed = data().deepCopy(fields()[2].schema(), other.poststed);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.kommunenummer)) {
        this.kommunenummer = data().deepCopy(fields()[3].schema(), other.kommunenummer);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing Adresse instance
     * @param other The existing instance to copy.
     */
    private Builder(no.nav.registre.testnorge.libs.avro.person.Adresse other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.gatenavn)) {
        this.gatenavn = data().deepCopy(fields()[0].schema(), other.gatenavn);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.postnummer)) {
        this.postnummer = data().deepCopy(fields()[1].schema(), other.postnummer);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.poststed)) {
        this.poststed = data().deepCopy(fields()[2].schema(), other.poststed);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.kommunenummer)) {
        this.kommunenummer = data().deepCopy(fields()[3].schema(), other.kommunenummer);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'gatenavn' field.
      * @return The value.
      */
    public java.lang.CharSequence getGatenavn() {
      return gatenavn;
    }


    /**
      * Sets the value of the 'gatenavn' field.
      * @param value The value of 'gatenavn'.
      * @return This builder.
      */
    public no.nav.registre.testnorge.libs.avro.person.Adresse.Builder setGatenavn(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.gatenavn = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'gatenavn' field has been set.
      * @return True if the 'gatenavn' field has been set, false otherwise.
      */
    public boolean hasGatenavn() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'gatenavn' field.
      * @return This builder.
      */
    public no.nav.registre.testnorge.libs.avro.person.Adresse.Builder clearGatenavn() {
      gatenavn = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'postnummer' field.
      * @return The value.
      */
    public java.lang.CharSequence getPostnummer() {
      return postnummer;
    }


    /**
      * Sets the value of the 'postnummer' field.
      * @param value The value of 'postnummer'.
      * @return This builder.
      */
    public no.nav.registre.testnorge.libs.avro.person.Adresse.Builder setPostnummer(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.postnummer = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'postnummer' field has been set.
      * @return True if the 'postnummer' field has been set, false otherwise.
      */
    public boolean hasPostnummer() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'postnummer' field.
      * @return This builder.
      */
    public no.nav.registre.testnorge.libs.avro.person.Adresse.Builder clearPostnummer() {
      postnummer = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'poststed' field.
      * @return The value.
      */
    public java.lang.CharSequence getPoststed() {
      return poststed;
    }


    /**
      * Sets the value of the 'poststed' field.
      * @param value The value of 'poststed'.
      * @return This builder.
      */
    public no.nav.registre.testnorge.libs.avro.person.Adresse.Builder setPoststed(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.poststed = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'poststed' field has been set.
      * @return True if the 'poststed' field has been set, false otherwise.
      */
    public boolean hasPoststed() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'poststed' field.
      * @return This builder.
      */
    public no.nav.registre.testnorge.libs.avro.person.Adresse.Builder clearPoststed() {
      poststed = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'kommunenummer' field.
      * @return The value.
      */
    public java.lang.CharSequence getKommunenummer() {
      return kommunenummer;
    }


    /**
      * Sets the value of the 'kommunenummer' field.
      * @param value The value of 'kommunenummer'.
      * @return This builder.
      */
    public no.nav.registre.testnorge.libs.avro.person.Adresse.Builder setKommunenummer(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.kommunenummer = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'kommunenummer' field has been set.
      * @return True if the 'kommunenummer' field has been set, false otherwise.
      */
    public boolean hasKommunenummer() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'kommunenummer' field.
      * @return This builder.
      */
    public no.nav.registre.testnorge.libs.avro.person.Adresse.Builder clearKommunenummer() {
      kommunenummer = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Adresse build() {
      try {
        Adresse record = new Adresse();
        record.gatenavn = fieldSetFlags()[0] ? this.gatenavn : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.postnummer = fieldSetFlags()[1] ? this.postnummer : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.poststed = fieldSetFlags()[2] ? this.poststed : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.kommunenummer = fieldSetFlags()[3] ? this.kommunenummer : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Adresse>
    WRITER$ = (org.apache.avro.io.DatumWriter<Adresse>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Adresse>
    READER$ = (org.apache.avro.io.DatumReader<Adresse>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.gatenavn == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.gatenavn);
    }

    if (this.postnummer == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.postnummer);
    }

    if (this.poststed == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.poststed);
    }

    if (this.kommunenummer == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.kommunenummer);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 0) {
        in.readNull();
        this.gatenavn = null;
      } else {
        this.gatenavn = in.readString(this.gatenavn instanceof Utf8 ? (Utf8)this.gatenavn : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.postnummer = null;
      } else {
        this.postnummer = in.readString(this.postnummer instanceof Utf8 ? (Utf8)this.postnummer : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.poststed = null;
      } else {
        this.poststed = in.readString(this.poststed instanceof Utf8 ? (Utf8)this.poststed : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.kommunenummer = null;
      } else {
        this.kommunenummer = in.readString(this.kommunenummer instanceof Utf8 ? (Utf8)this.kommunenummer : null);
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 0) {
            in.readNull();
            this.gatenavn = null;
          } else {
            this.gatenavn = in.readString(this.gatenavn instanceof Utf8 ? (Utf8)this.gatenavn : null);
          }
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.postnummer = null;
          } else {
            this.postnummer = in.readString(this.postnummer instanceof Utf8 ? (Utf8)this.postnummer : null);
          }
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.poststed = null;
          } else {
            this.poststed = in.readString(this.poststed instanceof Utf8 ? (Utf8)this.poststed : null);
          }
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.kommunenummer = null;
          } else {
            this.kommunenummer = in.readString(this.kommunenummer instanceof Utf8 ? (Utf8)this.kommunenummer : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










