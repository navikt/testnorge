name: App app-tilgang-analyse-service

on:
  push:
    paths:
      - apps/app-tilgang-analyse-service/**
      - .github/workflows/app.app-tilgang-analyse-service.yml
  workflow_dispatch:

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/app-tilgang-analyse-service:${{ github.sha }}
  BUILD_PATH: 'apps/app-tilgang-analyse-service/'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{  github.ref != 'refs/heads/master' && github.actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v1
      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v1
        with:
          java-version: '17.x'
      - name: Compile
        env:
          GITHUB_USERNAME: token
          NAV_TOKEN: ${{ secrets.NAV_TOKEN }}
        run: ./gradlew :app-tilgang-analyse-service:build
  build-and-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    if: ${{  github.ref == 'refs/heads/master' && github.actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v1
      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v1
        with:
          java-version: '17.x'
      - name: Compile
        env:
          GITHUB_USERNAME: token
          NAV_TOKEN: ${{ secrets.NAV_TOKEN }}
        run: ./gradlew :app-tilgang-analyse-service:build
      - name: Build and publish Docker image
        working-directory: apps/app-tilgang-analyse-service/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag $IMAGE .
          docker login docker.pkg.github.com -u $GITHUB_REPOSITORY -p $GITHUB_TOKEN
          docker push $IMAGE
      - name: Deploy to nais
        timeout-minutes: 5
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DOLLY_DEPLOY_API_KEY }}
          CLUSTER: dev-gcp
          RESOURCE: apps/app-tilgang-analyse-service/config.yml
  scan:
    name: Sonar scan
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v2
      - name: Fetch git history
        run: git fetch --unshallow
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        env:
          base_directory: ./apps/app-tilgang-analyse-service/
        with:
          java-version: 1.17
      - name: Sonar Analysis
        working-directory: ${{ env.BUILD_PATH }}
        env:
          NAV_TOKEN: ${{ secrets.NAV_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew sonarqube --scan