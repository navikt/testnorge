name: App app-tilgang-analyse-service

on:
  push:
    paths:
      - apps/app-tilgang-analyse-service/**
      - .github/workflows/app.app-tilgang-analyse-service.yml
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Should deploy?'
        required: true
        default: 'true'

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/app-tilgang-analyse-service:${{ github.sha }}
  BUILD_PATH: 'apps/app-tilgang-analyse-service/'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{  github.ref != 'refs/heads/master' && github.actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v1
      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v1
        with:
          java-version: '17.x'
      - name: Compile
        env:
          GITHUB_USERNAME: token
          NAV_TOKEN: ${{ secrets.NAV_TOKEN }}
        working-directory: ${{ env.BUILD_PATH }}
        run: ./gradlew build
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: ${{  github.ref == 'refs/heads/master' && github.actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v1
      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ env.BUILD_PATH }}
      - uses: actions/setup-java@v1
        with:
          java-version: '17.x'
      - name: Compile
        working-directory: ${{ env.BUILD_PATH }}
        env:
          GITHUB_USERNAME: token
          NAV_TOKEN: ${{ secrets.NAV_TOKEN }}
        run: ./gradlew build
      - name: Build and publish Docker image
        working-directory: ${{ env.BUILD_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag $IMAGE .
          docker login docker.pkg.github.com -u $GITHUB_REPOSITORY -p $GITHUB_TOKEN
          docker push $IMAGE
      - name: Deploy to dev-gcp
        timeout-minutes: 5
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DOLLY_DEPLOY_API_KEY }}
          CLUSTER: dev-gcp
          RESOURCE: ${{ env.BUILD_PATH }}/config.yml
  scan:
    uses: .github/workflows/sonar.yaml
    with:
      buildPath: ${{ env.BUILD_PATH }}