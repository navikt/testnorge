on:
  workflow_call:
    inputs:
      working-directory:
        type: string
        required: true
      healthcheck:
        type: string
        required: true
    secrets:
      NAV_TOKEN:
        required: true

jobs:
  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Git"
        run: git fetch --unshallow
      - name: "Java"
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
      - name: "Gradle"
        env:
          NAV_TOKEN: ${{ secrets.NAV_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: assemble --scan
          cache-read-only: false
      - name: "Start docker containers"
        run: |
          JWK=$(cat ./mocks/jwk.json) docker-compose up -d --build
      - name: "Health check"
        timeout-minutes: 5
        run: |
          echo Wait on service...
          bash -c 'while [[ "$(curl --connect-timeout 2 -s -o /dev/null -w ''%{http_code}'' ${{ inputs.healthcheck }})" != "200" ]]; do echo ...; sleep 5; done; echo Service is up;'
      - name: "Run integration tests"
        uses: gradle/actions/setup-gradle@v3
        with:
          build-root-directory: ${{ inputs.working-directory }}
          arguments: iTest --scan
          cache-read-only: false
      - name: "Stop docker containers"
        run: |
          docker-compose down -v --remove-orphans