on:
  workflow_call:
    inputs:
      identity-provider:
        type: string
        description: "The value of secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER."
        required: true
      working-directory:
        type: string
        description: "The working directory for the job, e.g. apps/dolly-backend (without leading/trailing slash)."
        required: true
      deploy-tag:
        type: string
        description: "The commit message tag that will trigger a deployment, e.g. #deploy-dolly-backend."
        required: true
      deploy-tag-dev:
        type: string
        description: "The commit message tag that will trigger a deployment to the development environment, e.g. #deploy-backend-dev."
        required: true
      cluster:
        type: string
        description: "The cluster to deploy to, e.g. dev-fss."
        default: "dev-gcp"
        required: false

jobs:

  scan:
    name: "Scan"
    uses: navikt/testnorge/.github/workflows/common.sonar.yml@master
    with:
      working-directory: ${{ inputs.working-directory }}
    secrets:
      NAV_TOKEN: ${{ secrets.NAV_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: "Build"
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17.x'
      - name: Compile
        env:
          GITHUB_USERNAME: token
          NAV_TOKEN: ${{ secrets.NAV_TOKEN }}
        working-directory: ${{ inputs.working-directory }}
        run: ./gradlew build --scan
      - name: Build and publish Docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: dolly
          identity_provider: ${{ inputs.identity_provider }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          dockerfile: ${{ inputs.working-directory }}/Dockerfile
          docker_context: ${{ inputs.working-directory }}
      - name: Deploy development version
        uses: nais/deploy/actions/deploy@v1
        if: ${{ github.ref == 'refs/heads/master' || contains(github.event.head_commit.message, '${{ inputs.deploy-tag-dev }}')}}
        env:
          APIKEY: ${{ secrets.NAIS_DOLLY_DEPLOY_API_KEY }}
          CLUSTER: ${{ inputs.namespace }}
          RESOURCE: ${{ inputs.working-directory }}/config.dev.yml
          VAR: image=${{steps.docker-build-push.outputs.image}}
#      - name: Deploy
#        uses: nais/deploy/actions/deploy@v1
#        if: ${{ github.ref == 'refs/heads/master' || contains(github.event.head_commit.message, '${{ inputs.deploy-tag }}')}}
#        env:
#          APIKEY: ${{ secrets.NAIS_DOLLY_DEPLOY_API_KEY }}
#          CLUSTER: ${{ inputs.namespace }}
#          RESOURCE: ${{ inputs.working-directory }}/config.yml
#          VAR: image=${{steps.docker-build-push.outputs.image}}
