on:
  workflow_call:
    inputs:
      working-directory:
        type: string
        required: true
      healthcheck:
        type: string
        required: true
    secrets:
      NAV_TOKEN:
        required: true

jobs:
  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch git history
        run: git fetch --unshallow
      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-itest-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-itest-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
            ${{ runner.os }}-gradle-itest-
            ${{ runner.os }}-gradle-
      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - name: Assemble
        env:
          NAV_TOKEN: ${{ secrets.NAV_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
        run: |
          ./gradlew assemble --scan
      - name: Start docker containers
        run: |
          JWK=$(cat ./mocks/jwk.json) docker-compose up -d --build
      - name: Health check
        timeout-minutes: 5
        run: |
          echo Wait on service...
          bash -c 'while [[ "$(curl --connect-timeout 2 -s -o /dev/null -w ''%{http_code}'' ${{ inputs.healthcheck }})" != "200" ]]; do echo ...; sleep 5; done; echo Service is up;'
      - name: Run integration tests
        working-directory: ${{ inputs.working-directory }}
        run: |
          ./gradlew iTest --scan
      - name: Stop docker containers
        run: |
          docker-compose down -v --remove-orphans